@{
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    ViewBag.Title = "My Data";
    ViewBag.ActiveNav = "mydata";
}
<div style="background-color: #fff;">
    <br />
    <div class="row">
        <div class="col-md-3 col-xs-12 col-sm-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Categories
                </div>
                <div class="panel-body">
                    <div class="demo-section k-content">
                        <ul id="treeview">
                            <li data-expanded="true">
                                <span class="k-sprite folder"></span>
                                Medical
                                <ul>
                                    <li><span class="k-sprite doc"></span><a href="#">Allergies</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Care Plans</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Encounters</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Functional Statuses</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Immunizations</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Instructions</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Narratives</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Prescriptions</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Problems</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Procedures</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Test Results</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Vitals</a></li>
                                </ul>
                            </li>
                            <li data-expanded="false">
                                <span class="k-sprite folder"></span>
                                Apps/Devices
                                <ul>
                                    <li><span class="k-sprite doc"></span><a href="#">Activities</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Diet</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Genetic Traits</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Locations</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Sleep</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">SNPs</a></li>
                                </ul>
                            </li>
                            <li data-expanded="false">
                                <span class="k-sprite folder"></span>
                                Lifestyle
                                <ul>
                                    <li><span class="k-sprite doc"></span><a href="#">Education</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Employment</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Likes</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Locations</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Politics</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Posts/Tweets</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Relationships</a></li>
                                    <li><span class="k-sprite doc"></span><a href="#">Religion</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>

                    <style>
                        .k-group {
                            color: #000;
                            font-size: small;
                        }

                            .k-group .k-link {
                                color: #000;
                                font-size: small;
                            }

                        #treeview .k-sprite {
                            background-image: url("/images/DataIcons/coloricons-sprite.png");
                        }

                        .rootfolder {
                            background-position: 0 0;
                        }

                        .folder {
                            background-position: 0 -16px;
                        }

                        .pdf {
                            background-position: 0 -32px;
                        }

                        .doc {
                            background-position: 0 -48px;
                        }

                        .image {
                            background-position: 0 -64px;
                        }
                    </style>

                </div>
            </div>
        </div>
        <div class="col-md-9 col-sm-12 col-xs-12 ">
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#entries">Entries</a></li>
                @*<li><a data-toggle="tab" href="#timeline">Timeline</a></li>*@
            </ul>
            <div id="grid"></div>
            <style>
                .k-window-content {
                    font-size: 13px;
                }

                .k-window-title {
                    font-size: 13px;
                    font-weight: bold;
                }

                .k-grid-Edit {
                    width: 22px;
                    min-width: 22px !important;
                }

                    .k-grid-Edit:hover {
                        background-color: dimgray;
                    }

                .k-grid-Delete {
                    width: 22px;
                    min-width: 22px !important;
                }

                    .k-grid-Delete:hover {
                        background-color: dimgray;
                    }

                .k-grid .k-edit {
                    width: 16px;
                }

                .k-grid .k-delete {
                    width: 16px;
                }

                .k-grid {
                    font-size: 12px;
                }

                    .k-grid td {
                        line-height: 2em;
                    }
                /* Apply minimum width to the Grid when scrolling is disabled. */
                #grid {
                    min-width: 550px;
                }

                    /* Apply a minimum width to the tables when scrolling is enabled and nested tables (hierarchy) ARE NOT USED. */
                    #grid .k-grid-header-wrap > table, /* header table */
                    #grid .k-grid-content table, /* data table, no virtual scrolling */
                    #grid .k-virtual-scrollable-wrap table /* data table, with virtual scrolling */ {
                        min-width: 550px;
                    }
            </style>
            <script src="/assets/kendo/pako_deflate.min.js"></script>
            <script src="~/assets/kendo/jszip.min.js"></script>

            <script type="text/x-kendo-template" id="SubGridTemplate">
                <div class="toolbar">
                    <a class="k-button k-button-icontext" onclick="javascript: ShowSubAddWindow('#: ParentID #')"><span class="k-icon k-add"></span>Add new record</a>
                </div>
            </script>
            <script type="text/x-kendo-template" id="template">
                <div class="tabstrip">
                    <ul>
                        <li class="k-state-active">
                            
                        </li>
                    </ul>
                    <div>
                        <div class="DetailsRowGrid"></div>
                    </div>
                </div>

            </script>
            <script>
                var wnd;
                var deleteWnd;
                var selectedCategory;
                $(document).ready(function () {

                    deleteWnd = $("#DeleteModalWindow").kendoWindow({
                        title: "Delete confirmation",
                        modal: true,
                        visible: false,
                        resizable: false,
                        width: 300
                    }).data("kendoWindow");




                    $("#grid").kendoGrid({
                        toolbar: ["create", "pdf", "excel"],
                        pdf: {
                            allPages: true,
                            avoidLinks: true,
                            paperSize: "A4",
                            margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                            landscape: true,
                            repeatHeaders: true,
                            template: $("#page-template").html(),
                            scale: 0.8
                        },
                        excel: {
                            fileName: "SHAREForCures_Grid_Export.xlsx",
                            proxyURL: "",
                            filterable: true
                        },
                        dataBound: OnGridDataBound,
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetUserDataWithNotes"
                                    , dataType: "json"
                                    , data: {
                                        categoryName: selectedCategory
                                    }
                                }
                            },
                            pageSize: 10
                        },
                        height: 550,
                        scrollable: true,
                        autoBind: false,
                        groupable: true,
                        sortable: true,
                        resizable: true,
                        filterable: true,
                        pageable: {
                            refresh: true,
                            pageSizes: true,
                            buttonCount: 5
                        },
                        detailTemplate: kendo.template($("#template").html()),
                        detailInit: detailInit,
                        detailExpand: function (e) {
                            this.collapseRow(this.tbody.find(' > tr.k-master-row').not(e.masterRow));
                        },
                        columns: [
                            {
                                field: "",
                                title: "",
                                template: "#= getRowImage(data)#",
                                width: "34px"
                            },
                            { command: { name: "Edit", text: "", click: ShowEditWindow }, title: " ", width: "35px" },
                            { command: { name: "Delete", text: "", click: DeleteItem }, title: " ", width: "35px" },

                            {
                                field: "StartDateTime",
                                title: "Start Date",
                                template: "#= kendo.toString(kendo.parseDate(StartDateTime, 'yyyy-MM-dd'), 'MM/dd/yyyy') #",
                                width: "100px",
                                type: "date"
                            },
                            {
                                field: "EndDateTime",
                                title: "End Date",
                                template: "#=EndDateTime!=null? kendo.toString(kendo.parseDate(EndDateTime, 'yyyy-MM-dd'), 'MM/dd/yyyy') :'' #",
                                width: "100px",
                                type: "date"
                            },
                            {
                                field: "ResultDateTime",
                                title: "Result Date",
                                template: "#=ResultDateTime!=null? kendo.toString(kendo.parseDate(ResultDateTime, 'yyyy-MM-dd'), 'MM/dd/yyyy') :'' #",
                                width: "100px",
                                type: "date"
                            },

                            {
                                field: "CarePlanTypeName", title: "Type",
                                width: "100px"
                            },
                            {
                                field: "CarePlanSpecialtyName", title: "Specialty",
                                width: "100px"
                            },
                            {
                                field: "CarePlanName", title: "Title",
                                width: "100px"
                            },
                            {
                                field: "CarePlanText", title: "Text",
                                width: "100px"
                            },
                            {
                                field: "Allergen", title: "Allergen",
                                width: "100px"
                            },
                            {
                                field: "Reaction", title: "Reaction",
                                width: "100px"
                            },
                            {
                                field: "Severity", title: "Severity",
                                width: "100px"
                            },
                            {
                                field: "ExpirationDateTime",
                                title: "Expiration Date",
                                template: "#=ExpirationDateTime!=null? kendo.toString(kendo.parseDate(ExpirationDateTime, 'yyyy-MM-dd'), 'MM/dd/yyyy') :'' #",
                                width: "100px",
                                type: "date"
                            },
                             {
                                 field: "EncounterDateTime",
                                 title: "Encounter Date",
                                 template: "#=EncounterDateTime!=null? kendo.toString(kendo.parseDate(EncounterDateTime, 'yyyy-MM-dd'), 'MM/dd/yyyy') :'' #",
                                 width: "100px",
                                 type: "date"
                             },

                              {
                                  field: "PerformingOrganizationName", title: "Performing OrganizationName",
                                  width: "100px"
                              },
                               {
                                   field: "DeviceName", title: "Device",
                                   width: "100px"
                               },
                                {
                                    field: "SpecimenName", title: "Specimen",
                                    width: "100px"
                                },

                            {
                                field: "ProviderName", title: "Provider",
                                width: "100px"
                            },
                               {
                                   field: "UOMName", title: "UOM",
                                   width: "100px"
                               },


                            {
                                field: "MedFormName", title: "Med Form",
                                width: "100px"
                            },
                            {
                                field: "FrequencyUOMName", title: "Frequency UOM",
                                width: "100px"
                            },
                            {
                                field: "StrengthUOMName", title: "Strength UOM",
                                width: "100px"
                            },
                             {
                                 field: "RouteName", title: "Route",
                                 width: "100px"
                             },
                             {
                                 field: "PharmacyName", title: "Pharmacy",
                                 width: "100px"
                             },
                            {
                                field: "VisitTypeName", title: "Visit Type",
                                width: "100px"
                            },
                            {
                                field: "InstructionTypeName", title: "Type",
                                width: "100px"
                            },
                            {
                                field: "Name", title: "Name",
                                width: "100px"
                            },
                             {
                                 field: "Value", title: "Value",
                                 width: "100px"
                             },
                             {
                                 field: "Comments", title: "Comments",
                                 width: "100px"
                             },
                              {
                                  field: "Narrative", title: "Narrative",
                                  width: "100px"
                              },
                               {
                                   field: "Impression", title: "Impression",
                                   width: "100px"
                               },
                                {
                                    field: "Transcriptions", title: "Transcriptions",
                                    width: "100px"
                                },
                            {
                                field: "Status", title: "Status",
                                width: "100px"
                            },


                 {
                     field: "Instructions", title: "Instructions",
                     width: "100px"
                 },
                 {
                     field: "ProductName", title: "Product Name",
                     width: "100px"
                 },
                 {
                     field: "BrandName", title: "Brand Name",
                     width: "100px"
                 },
                 {
                     field: "DosageText", title: "Dosage Text",
                     width: "100px"
                 },
                 {
                     field: "DosageValue", title: "Dosage Value",
                     width: "100px"
                 },
                 {
                     field: "FrequencyValue", title: "Frequency Value",
                     width: "100px"
                 },
                 {
                     field: "StrengthValue", title: "Strength Value",
                     width: "100px"
                 },
                  {
                      field: "RefillsRemaining", title: "Refills Remaining",
                      width: "100px"
                  },
                 {
                     field: "RefillsTotal", title: "Refills Total",
                     width: "100px"
                 },
                 {
                     field: "Text", title: "Text",
                     width: "100px"
                 },
                 {
                     field: "Source", title: "Source",
                     width: "100px"
                 },
                 {
                     field: "Note", title: "Note",
                     width: "100px"
                 }
                        ]
                    });


                    $('.k-grid-add').on('click', function () {
                        OpenAddWindow(0);
                    });

                    // Create Kendo Controls for allergy Category
                    $("#ddl_Allergen").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllAllergens"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_Reaction").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllReactions"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_AllergyStatus").kendoDropDownList({
                        dataTextField: "Status",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllAllergyStatus"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_serverity").kendoDropDownList({
                        dataTextField: "Severity",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllAllergyServerties"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#UserInstruction").kendoDatePicker();
                    $("#dp_Allergyenddate").kendoDatePicker();
                    $("#dp_Allergystartdate").kendoDatePicker();


                    // Create Kendo Controls for Care Plan Category
                    $("#ddl_CarePlanTypes").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllCarePlanTypes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_CarePlanSpecialty").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllCarePlanSpecialties"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_CarePlanstartdate").kendoDatePicker();
                    $("#dp_CarePlanenddate").kendoDatePicker();

                    // Create Kendo Controls for Encounters
                    $("#ddl_EncounterProvider").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProviders"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_EncounterVisitType").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllVisitTypes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_EncounterDate").kendoDatePicker();
                    $("#dp_PatientEndDate").kendoDatePicker();
                    $("#dp_PatientStartDate").kendoDatePicker();
                    $("#dp_FollowUpStartDate").kendoDatePicker();
                    $("#dp_FollowUpEndDate").kendoDatePicker();
                    $("#ddl_FollowUpInsType").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllInstructionTypes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PatientInsType").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllInstructionTypes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });

                    // Create Kendo controls for Functional Status
                    $("#dp_FunctionalStatusesstartdate").kendoDatePicker();
                    $("#dp_FunctionalStatusesenddate").kendoDatePicker();

                    // Create Kendo controls for User Instruction
                    $("#ddl_InstructionType").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllInstructionTypes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_InstructionStartdate").kendoDatePicker();
                    $("#dp_InstructionEnddate").kendoDatePicker();

                    // Create Kendo controls for User Narrative
                    $("#ddl_NarrativeProvider").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProviders"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_NarrativeStartdate").kendoDatePicker();
                    $("#dp_NarrativeEnddate").kendoDatePicker();
                    $("#txt_NarrativesEntriesSectionSeqNum").kendoNumericTextBox({
                        format: "#",
                        decimals: 0
                    });
                    

                    // Create Kendo controls for User Prescriptions
                    $("#ddl_PrescriptionsProvider").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProviders"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PrescriptionsMedForm").kendoDropDownList({
                        dataTextField: "ShortName",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllMedicationForms"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PrescriptionsFrequencyUOM").kendoDropDownList({
                        dataTextField: "UnitOfMeasure",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllUnitsOfMeasures"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PrescriptionsStrengthUOM").kendoDropDownList({
                        dataTextField: "UnitOfMeasure",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllUnitsOfMeasures"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PrescriptionsPharmacy").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllPharmacies"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_PrescriptionsRoute").kendoDropDownList({
                        dataTextField: "ShortName",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllMedicationRoutes"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#txt_PrescriptionsRefillsRemaining").kendoNumericTextBox({
                        format: "#",
                        decimals: 0
                    });
                    $("#txt_PrescriptionsRefillTotal").kendoNumericTextBox({
                        format: "#",
                        decimals: 0
                    });
                    $("#dp_PrescriptionsExpirationdate").kendoDatePicker();
                    $("#dp_PrescriptionsStartdate").kendoDatePicker();
                    $("#dp_PrescriptionsEnddate").kendoDatePicker();

                    // Problems
                    $("#dp_ProblemStartdate").kendoDatePicker();
                    $("#dp_ProblemEnddate").kendoDatePicker();

                    // Procedures
                    $("#ddl_ProceduresPerformingOrganization").kendoDropDownList({
                        dataTextField: "tOrganization.Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllSourceOrganizations"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_ProceduresDevice").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProcedureDevices"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_ProceduresSpecimen").kendoDropDownList({
                        dataTextField: "Specimen",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllSpecimens"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_ProceduresStartdate").kendoDatePicker();
                    $("#dp_ProceduresEnddate").kendoDatePicker();


                    // Test Results
                    $("#ddl_TestResultsOrderingProvider").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProviders"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_TestResultsStatus").kendoDropDownList({
                        dataTextField: "Status",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllTestResultStatus"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#dp_TestResultsResultDate").kendoDatePicker();
                    $("#ddl_TestResultComponentsUOM").kendoDropDownList({
                        dataTextField: "UnitOfMeasure",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllUnitsOfMeasures"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    

                    // Vital
                    $("#ddl_VitalProvider").kendoDropDownList({
                        dataTextField: "Name",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllProviders"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#ddl_VitalUOM").kendoDropDownList({
                        dataTextField: "UnitOfMeasure",
                        dataValueField: "ID",
                        autoBind: false,
                        filter: "contains",
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetAllUnitsOfMeasures"
                                    , dataType: "json"
                                }
                            }
                        },
                        serverFiltering: true,
                        index: 0
                    });
                    $("#txt_VitalValue").kendoNumericTextBox();
                    $("#dp_VitalDate").kendoDatePicker();

                    // Immunizations
                    $("#dp_ImmunizationsDatesDate").kendoDatePicker();



                    $("#treeview").kendoTreeView({
                        theme: "flat",
                        change: function (e) {
                            var tv = $('#treeview').data('kendoTreeView');
                            var selected = tv.select();
                            var item = tv.dataItem(selected);
                            selectedCategory = item.text;
                            ManageGridColumns();
                            
                            var grid = $("#grid").data("kendoGrid");
                            grid.dataSource.query({
                                page: 1,
                                pageSize: 10
                            });
                            grid.dataSource.read({ categoryName: selectedCategory });
                         
                        }
                    });

                    var treeview = $("#treeview").data("kendoTreeView");
                    var bar = treeview.findByText("Allergies");
                    treeview.select(bar);
                });

                function detailInit(e) {
                    var detailRow = e.detailRow;
                    var C_dateHidden = true;
                    var C_sectionSeqHidden = true;
                    var C_textHidden = true;
                    var C_titleHidden = true;
                    var C_UOMNameHidden = true;
                         
                     var C_LowValue = true;
                     var C_HighValue = true;
                     var C_RefRange = true;
                     var C_Comments = true;
                     var C_ComponentsValue = true;
                     var C_Name = true;

                    if (selectedCategory == 'Immunizations') {
                        C_dateHidden = false;
                    }
                    else if (selectedCategory == 'Narratives') {
                        C_sectionSeqHidden = false;
                        C_textHidden = false;
                        C_titleHidden = false;
                    } else if (selectedCategory == 'Test Results') {
                        C_UOMNameHidden = false;
                        C_LowValue = false;
                        C_HighValue = false;
                        C_RefRange = false;
                        C_Comments = false;
                        C_ComponentsValue = false;
                        C_Name = false;
                    }


                    
                    
                    detailRow.find(".tabstrip").kendoTabStrip({
                        animation: {
                            open: { effects: "fadeIn" }
                        }
                    });
                    detailRow.find(".DetailsRowGrid").kendoGrid({
                        name: "subGrid",
                        toolbar:function(dataItem){ 
                            dataItem.ParentID = e.data.ParentId;
                            return kendo.template($("#SubGridTemplate").html())(dataItem);
                        },
                        dataBound: OnSubGridDataBound,
                        dataSource: {
                            transport: {
                                read: {
                                    url: "/User/GetSubDataByParentIdAndCategory"
                                    , dataType: "json"
                                    , data: {
                                        categoryName: selectedCategory,
                                        parentId: e.data.ParentId
                                    }
                                }
                            },
                            pageSize: 10
                        },
                        scrollable: false,
                        columns: [
                            { command: { name: "EditSub", text: "", click: ShowSubEditWindow }, title: " ", width: "27px" },
                            { command: { name: "DeleteSub", text: "", click: DeleteSubItem }, title: " ", width: "27px" },
                            {
                                field: "Date",
                                title: "Date",
                                template: "#= kendo.toString(kendo.parseDate(Date, 'yyyy-MM-dd'), 'MM/dd/yyyy') #",
                                width: "100px",
                                type: "date",
                                hidden: C_dateHidden

                            },
                            {
                                field: "SeqNum", title: "Section Seq",
                                width: "100px",
                                hidden: C_sectionSeqHidden
                            },
                            {
                                field: "Text", title: "Text",
                                width: "100px",
                                hidden: C_textHidden
                            },
                            {
                                field: "Title", title: "Title",
                                width: "100px",
                                hidden: C_titleHidden
                            },
                            {
                                field: "UOMName", title: "UOM",
                                width: "100px",
                                hidden: C_UOMNameHidden
                            }
                            ,
                            {
                                field: "Name", title: "Name",
                                width: "100px",
                                hidden: C_Name
                            }
                            ,
                            {
                                field: "ComponentsValue", title: "Value",
                                width: "100px",
                                hidden: C_ComponentsValue
                            }
                            , 
                            {
                                field: "LowValue", title: "Low Value",
                                width: "100px",
                                hidden: C_LowValue
                            }
                            ,
                            {
                                field: "HighValue", title: "High Value",
                                width: "100px",
                                hidden: C_HighValue
                            }
                            ,
                            {
                                field: "RefRange", title: "Ref Range",
                                width: "100px",
                                hidden: C_RefRange
                            }
                            ,
                            {
                                field: "Comments", title: "Comments",
                                width: "100px",
                                hidden: C_Comments
                            }
                        ]
                     });

                }

                function ShowSubAddWindow(ParentId) {
                    OpenSubAddEditWindow(0, ParentId);
                }
                function ShowSubEditWindow(e) {
                    e.preventDefault();
                    var item = this.dataItem($(e.target).closest("tr"));
                    OpenSubAddEditWindow(item.ID, item.ParentId);
                }
                function OpenSubAddEditWindow(ItemId, ParentId)
                {
                    if (selectedCategory == 'Immunizations') {
                        Add_Edit_UserDatesImmunizationsDates(ItemId, ParentId);
                    }
                    else if (selectedCategory == 'Narratives') {
                        Add_Edit_UserNarrativesEntries(ItemId, ParentId);
                    }
                    else if (selectedCategory == 'Test Results') {
                        Add_Edit_UserTestResultComponents(ItemId, ParentId);
                    }
                    
                }
                
                
                function Add_Edit_UserDatesImmunizationsDates(ItemId, ParentId)
                {
                    
                    var _title = "";
                    if (ItemId == 0) {
                        _title = "Add New Immunization Date";
                    } else {
                        _title = "Edit Immunization Date";
                    }
                    wnd = $("#AddEditUserImmunizationsDates");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var dp_ImmunizationsDatesDate = $("#dp_ImmunizationsDatesDate").data("kendoDatePicker");
                    if (ItemId > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleSubData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: ItemId, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                dp_ImmunizationsDatesDate.value(retval.Date);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserImmunizationsDates").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources

                        dp_ImmunizationsDatesDate.value("");
                        $("#itemId").val(ItemId);
                        $("#parentItemId").val(ParentId);
                        // End - Load Data sources
                        var validator = $("#AddEditUserImmunizationsDates").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserNarrativesEntries(ItemId, ParentId) {

                    var _title = "";
                    if (ItemId == 0) {
                        _title = "Add New Narratives Entry";
                    } else {
                        _title = "Edit Narratives Entry";
                    }
                    wnd = $("#AddEditUserNarrativesEntries");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var txt_NarrativesEntriesSectionSeqNum = $("#txt_NarrativesEntriesSectionSeqNum").data("kendoNumericTextBox");
                    if (ItemId > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleSubData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: ItemId, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                txt_NarrativesEntriesSectionSeqNum.value(retval.SeqNum);
                                $("#txt_NarrativesEntriesTitle").val(retval.Title);
                                $("#txt_NarrativesEntriesText").val(retval.Text);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserNarrativesEntries").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources

                        txt_NarrativesEntriesSectionSeqNum.value("");
                        $("#txt_NarrativesEntriesTitle").val('');
                        $("#txt_NarrativesEntriesText").val('');
                        $("#itemId").val(ItemId);
                        $("#parentItemId").val(ParentId);
                        // End - Load Data sources
                        var validator = $("#AddEditUserNarrativesEntries").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserTestResultComponents(ItemId, ParentId) {
                    var _title = "";
                    if (ItemId == 0) {
                        _title = "Add New Test Result Components";
                    } else {
                        _title = "Edit Test Result Component";
                    }
                    wnd = $("#AddEditUserTestResultComponents");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_TestResultComponentsUOM = $("#ddl_TestResultComponentsUOM").data("kendoDropDownList");
                    if (ItemId > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleSubData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: ItemId, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_TestResultComponentsUOM.dataSource.read();
                                ddl_TestResultComponentsUOM.select(retval.UOMID);
                                $("#txt_TestResultComponentsName").val(retval.Name);
                                $("#txt_TestResultComponentsValue").val(retval.ComponentsValue);
                                $("#txt_TestResultComponentsLowValue").val(retval.LowValue);
                                $("#txt_TestResultComponentsHighValue").val(retval.HighValue);
                                $("#txt_TestResultComponentsRefRange").val(retval.RefRange);
                                $("#txt_TestResultComponentsComments").val(retval.Comments);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserTestResultComponents").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                           
                        ddl_TestResultComponentsUOM.dataSource.read();
                        ddl_TestResultComponentsUOM.select(0);
                        $("#txt_TestResultComponentsName").val('');
                        $("#txt_TestResultComponentsValue").val('');
                        $("#txt_TestResultComponentsLowValue").val('');
                        $("#txt_TestResultComponentsHighValue").val('');
                        $("#txt_TestResultComponentsRefRange").val('');
                        $("#txt_TestResultComponentsComments").val('');
                        $("#itemId").val(ItemId);
                        $("#parentItemId").val(ParentId);
                        // End - Load Data sources
                        var validator = $("#AddEditUserTestResultComponents").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                
                function SaveSubItem()
                {
                    if (selectedCategory == 'Immunizations') {
                        SaveUserDatesImmunizationsDates();
                    }
                    else if (selectedCategory == 'Narratives') {
                        SaveUserDatesNarrativesEntries();
                    }
                    else if (selectedCategory == 'Test Results') {
                        SaveUserTestResultComponents();
                    }
                }
                function SaveUserDatesImmunizationsDates() {
                    var validator = $("#AddEditUserImmunizationsDates").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var dp_ImmunizationsDatesDate = $("#dp_ImmunizationsDatesDate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Date = dp_ImmunizationsDatesDate.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveSubUserData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserDatesNarrativesEntries() {
                    var validator = $("#AddEditUserNarrativesEntries").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var txt_NarrativesEntriesSectionSeqNum = $("#txt_NarrativesEntriesSectionSeqNum").data("kendoNumericTextBox");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.SeqNum = txt_NarrativesEntriesSectionSeqNum.value();
                        NewItem.Text = $("#txt_NarrativesEntriesText").val();
                        NewItem.Title = $("#txt_NarrativesEntriesTitle").val();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveSubUserData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserTestResultComponents() {
                    var validator = $("#AddEditUserTestResultComponents").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_TestResultComponentsUOM = $("#ddl_TestResultComponentsUOM").data("kendoDropDownList");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.UOMID = ddl_TestResultComponentsUOM.value();
                        NewItem.Name = $("#txt_TestResultComponentsName").val();
                        NewItem.ComponentsValue = $("#txt_TestResultComponentsValue").val();
                        NewItem.LowValue = $("#txt_TestResultComponentsLowValue").val();
                        NewItem.HighValue = $("#txt_TestResultComponentsHighValue").val();
                        NewItem.RefRange = $("#txt_TestResultComponentsRefRange").val();
                        NewItem.Comments = $("#txt_TestResultComponentsComments").val();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveSubUserData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }

                function DeleteSubItem(e) {

                    e.preventDefault();
                    var item = this.dataItem($(e.target).closest("tr"));

                    deleteWnd.center().open();
                    $("#yes").unbind("click");
                    $("#yes").click(function () {
                        deleteWnd.close();
                        var grid = $("#grid").data("kendoGrid");
                        kendo.ui.progress(grid.element, true);
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "DeleteSubData",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { id: item.ID, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(grid.element, false);

                                grid.dataSource.read({ categoryName: selectedCategory });
                            }
                               , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(grid.element, false); }
                        });
                    });
                    $("#no").unbind("click");
                    $("#no").click(function () {
                        deleteWnd.close();
                    });


                }


                function getRowImage(data) {
                    var html;

                    if (data.IsShared) {
                        html = "<img style='width:25px;height:25px' src='../images/AppIcons/Heart.png'/>";
                    }
                    else {
                        html = "<img style='width:25px;height:25px' src='../images/AppIcons/Lock.png'/>";
                    }
                    return html;
                }
                // id == 0 ? "Add new Item":"Edit Item"
                function OpenAddWindow(id) {
                    if (selectedCategory == 'Allergies') {
                        Add_Edit_UserAllergies(id);
                    }
                    else if (selectedCategory == 'Care Plans') {
                        Add_Edit_UserCarePlan(id);
                    }
                    else if (selectedCategory == 'Encounters') {
                        Add_Edit_UserEncounter(id);
                    }
                    else if (selectedCategory == 'Functional Statuses') {
                        Add_Edit_UserFunctionalStatuses(id);
                    }
                    else if (selectedCategory == 'Immunizations') {
                        Add_Edit_UserImmunizations(id);
                    }
                    else if (selectedCategory == 'Instructions') {
                        Add_Edit_UserInstructions(id);
                    }
                    else if (selectedCategory == 'Narratives') {
                        Add_Edit_UserNarrative(id);
                    }
                    else if (selectedCategory == 'Prescriptions') {
                        Add_Edit_UserPrescription(id);
                    }
                    else if (selectedCategory == 'Problems') {
                        Add_Edit_UserProblem(id);
                    }
                    else if (selectedCategory == 'Procedures') {
                        Add_Edit_UserProcedures(id);
                    }
                    else if (selectedCategory == 'Test Results') {
                        Add_Edit_UserTestResult(id);
                    }
                    else if (selectedCategory == 'Vitals') {
                        Add_Edit_UserVital(id);
                    }

                }

                function ShowEditWindow(e) {
                    e.preventDefault();
                    //var NoteID = e.sender.dataItem(e.container).ID;
                    var grid = $("#grid").data("kendoGrid");
                    var item = grid.dataItem($(e.target).closest("tr"));
                    OpenAddWindow(item.ParentId);
                }
                function Add_Edit_UserAllergies(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Allergy";
                    } else {
                        _title = "Edit Allergy";
                    }
                    wnd = $("#AddEditUserAllergies");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_Allergen = $("#ddl_Allergen").data("kendoDropDownList");
                    var ddl_Reaction = $("#ddl_Reaction").data("kendoDropDownList");
                    var ddl_AllergyStatus = $("#ddl_AllergyStatus").data("kendoDropDownList");
                    var ddl_serverity = $("#ddl_serverity").data("kendoDropDownList");
                    var startdatepicker = $("#dp_Allergystartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_Allergyenddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_Allergen.dataSource.read();
                                ddl_Allergen.value(retval.AllergenID);
                                ddl_Reaction.dataSource.read();
                                ddl_Reaction.value(retval.ReactionID);
                                ddl_AllergyStatus.dataSource.read();
                                ddl_AllergyStatus.value(retval.StatusID);
                                ddl_serverity.dataSource.read();
                                ddl_serverity.value(retval.SeverityID);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                $("#txt_Allergynote").val(retval.Note);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserAllergies").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_Allergen.dataSource.read();
                        ddl_Allergen.select(0);
                        ddl_Reaction.dataSource.read();
                        ddl_Reaction.select(0);
                        ddl_AllergyStatus.dataSource.read();
                        ddl_AllergyStatus.select(0);
                        ddl_serverity.dataSource.read();
                        ddl_serverity.select(0);
                        $("#txt_Allergynote").val('');
                        startdatepicker.value("");
                        enddatepicker.value("");
                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserAllergies").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserCarePlan(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Care Plan";
                    } else {
                        _title = "Edit Care Plan";
                    }
                    wnd = $("#AddEditUserCarePalns");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_CarePlanTypes = $("#ddl_CarePlanTypes").data("kendoDropDownList");
                    var ddl_CarePlanSpecialty = $("#ddl_CarePlanSpecialty").data("kendoDropDownList");

                    var startdatepicker = $("#dp_CarePlanstartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_CarePlanenddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_CarePlanTypes.dataSource.read();
                                ddl_CarePlanTypes.value(retval.CarePlanTypeID);
                                ddl_CarePlanSpecialty.dataSource.read();
                                ddl_CarePlanSpecialty.value(retval.CarePlanSpecialtyID);

                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                $("#txt_CarePlanName").val(retval.CarePlanName);
                                $("#txt_CarePlanText").val(retval.CarePlanText);
                                $("#txt_CarePlannote").val(retval.Note);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserCarePalns").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_CarePlanTypes.dataSource.read();
                        ddl_CarePlanTypes.select(0);
                        ddl_CarePlanSpecialty.dataSource.read();
                        ddl_CarePlanSpecialty.select(0);
                        $("#txt_CarePlanName").val('');
                        $("#txt_CarePlanText").val('');
                        $("#txt_CarePlannote").val('');
                        startdatepicker.value("");
                        enddatepicker.value("");
                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserCarePalns").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserEncounter(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Encounter";
                    } else {
                        _title = "Edit Encounter";
                    }
                    wnd = $("#AddEditUserEncounter");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        height: 550,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_EncounterProvider = $("#ddl_EncounterProvider").data("kendoDropDownList");
                    var ddl_EncounterVisitType = $("#ddl_EncounterVisitType").data("kendoDropDownList");
                    var ddl_FollowUpInsType = $("#ddl_FollowUpInsType").data("kendoDropDownList");
                    var ddl_PatientInsType = $("#ddl_PatientInsType").data("kendoDropDownList");
                    var encounterDate = $("#dp_EncounterDate").data("kendoDatePicker");
                    var dp_PatientStartDate = $("#dp_PatientStartDate").data("kendoDatePicker");
                    var dp_PatientEndDate = $("#dp_PatientEndDate").data("kendoDatePicker");
                    var dp_FollowUpStartDate = $("#dp_FollowUpStartDate").data("kendoDatePicker");
                    var dp_FollowUpEndDate = $("#dp_FollowUpEndDate").data("kendoDatePicker");

                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_EncounterProvider.dataSource.read();
                                ddl_EncounterProvider.value(retval.ProviderID);
                                ddl_EncounterVisitType.dataSource.read();
                                ddl_EncounterVisitType.value(retval.VisitTypeID);

                                ddl_FollowUpInsType.dataSource.read();
                                ddl_FollowUpInsType.value(retval.FollowUpInstruction.InstructionTypeID);
                                $("#txt_FollowUpName").val(retval.FollowUpInstruction.Name);
                                $("#txt_FollowUpText").val(retval.FollowUpInstruction.Text);
                                dp_FollowUpStartDate.value(retval.FollowUpInstruction.StartDateTime);
                                dp_FollowUpEndDate.value(retval.FollowUpInstruction.EndDateTime);

                                ddl_PatientInsType.dataSource.read();
                                ddl_PatientInsType.value(retval.PatientInstruction.InstructionTypeID);
                                $("#txt_PatientName").val(retval.PatientInstruction.Name);
                                $("#txt_PatientText").val(retval.PatientInstruction.Text);
                                dp_PatientStartDate.value(retval.PatientInstruction.StartDateTime);
                                dp_PatientEndDate.value(retval.PatientInstruction.EndDateTime);


                                encounterDate.value(retval.EncounterDateTime);
                                $("#txt_EncounterNote").val(retval.Note);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserEncounter").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_EncounterProvider.dataSource.read();
                        ddl_EncounterProvider.select(0);
                        ddl_EncounterVisitType.dataSource.read();
                        ddl_EncounterVisitType.select(0);
                        ddl_FollowUpInsType.dataSource.read();
                        ddl_FollowUpInsType.select(0);
                        ddl_PatientInsType.dataSource.read();
                        ddl_PatientInsType.select(0);
                        $("#txt_EncounterNote").val('');

                        $("#txt_PatientName").val('');
                        $("#txt_PatientText").val('');

                        $("#txt_FollowUpName").val('');
                        $("#txt_FollowUpText").val('');

                        encounterDate.value("");
                        dp_PatientStartDate.value("");
                        dp_PatientEndDate.value("");
                        dp_FollowUpStartDate.value("");
                        dp_FollowUpEndDate.value("");

                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserEncounter").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserFunctionalStatuses(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Functional Status";
                    } else {
                        _title = "Edit Functional Status";
                    }
                    wnd = $("#AddEditUserFunctionalStatuses");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var startdatepicker = $("#dp_FunctionalStatusesstartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_FunctionalStatusesenddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources

                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                $("#txt_FunctionalStatusesName").val(retval.Name);
                                $("#txt_FunctionalStatusesnote").val(retval.Note);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserFunctionalStatuses").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        $("#txt_FunctionalStatusesName").val('');
                        $("#txt_FunctionalStatusesnote").val('');
                        startdatepicker.value("");
                        enddatepicker.value("");
                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserFunctionalStatuses").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserImmunizations(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Immunization";
                    } else {
                        _title = "Edit Immunization";
                    }
                    wnd = $("#AddEditUserImmunizations");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                $("#txt_ImmunizationsName").val(retval.Name);
                                $("#txt_Immunizationsnote").val(retval.Note);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserImmunizations").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        $("#txt_ImmunizationsName").val('');
                        $("#txt_Immunizationsnote").val('');
                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserImmunizations").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserInstructions(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Instruction";
                    } else {
                        _title = "Edit Instruction";
                    }
                    wnd = $("#AddEditUserInstructions");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_InstructionType = $("#ddl_InstructionType").data("kendoDropDownList");
                    var startdatepicker = $("#dp_InstructionStartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_InstructionEnddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_InstructionType.dataSource.read();
                                ddl_InstructionType.value(retval.InstructionTypeID);
                                $("#txt_InstructionName").val(retval.Name);
                                $("#txt_InstructionText").val(retval.Text);
                                $("#txt_InstructionNote").val(retval.Note);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserInstructions").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        $("#txt_InstructionName").val('');
                        $("#txt_InstructionText").val('');
                        $("#txt_InstructionNote").val('');
                        ddl_InstructionType.dataSource.read();
                        ddl_InstructionType.select(0);
                        startdatepicker.value("");
                        enddatepicker.value("");


                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserInstructions").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserNarrative(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Narrative";
                    } else {
                        _title = "Edit Narrative";
                    }
                    wnd = $("#AddEditUserNarratives");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_NarrativeProvider = $("#ddl_NarrativeProvider").data("kendoDropDownList");
                    var startdatepicker = $("#dp_NarrativeStartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_NarrativeEnddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_NarrativeProvider.dataSource.read();
                                ddl_NarrativeProvider.value(retval.ProviderID);
                                $("#txt_NarrativeNote").val(retval.Note);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserNarratives").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        $("#txt_NarrativeNote").val('');
                        ddl_NarrativeProvider.dataSource.read();
                        ddl_NarrativeProvider.select(0);
                        startdatepicker.value("");
                        enddatepicker.value("");


                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserNarratives").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserPrescription(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Prescription";
                    } else {
                        _title = "Edit Prescription";
                    }
                    wnd = $("#AddEditUserPrescriptions");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        height: 550,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);
                    var ddl_PrescriptionsProvider = $("#ddl_PrescriptionsProvider").data("kendoDropDownList");
                    var ddl_PrescriptionsMedForm = $("#ddl_PrescriptionsMedForm").data("kendoDropDownList");
                    var ddl_PrescriptionsFrequencyUOM = $("#ddl_PrescriptionsFrequencyUOM").data("kendoDropDownList");
                    var ddl_PrescriptionsStrengthUOM = $("#ddl_PrescriptionsStrengthUOM").data("kendoDropDownList");
                    var ddl_PrescriptionsPharmacy = $("#ddl_PrescriptionsPharmacy").data("kendoDropDownList");
                    var ddl_PrescriptionsRoute = $("#ddl_PrescriptionsRoute").data("kendoDropDownList");
                    var expirationdatepicker = $("#dp_PrescriptionsExpirationdate").data("kendoDatePicker");
                    var startdatepicker = $("#dp_PrescriptionsStartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_PrescriptionsEnddate").data("kendoDatePicker");
                    var txt_PrescriptionsRefillsRemaining = $("#txt_PrescriptionsRefillsRemaining").data("kendoNumericTextBox");
                    var txt_PrescriptionsRefillTotal = $("#txt_PrescriptionsRefillTotal").data("kendoNumericTextBox");

                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_PrescriptionsProvider.dataSource.read();
                                ddl_PrescriptionsProvider.value(retval.ProviderID);
                                ddl_PrescriptionsMedForm.dataSource.read();
                                ddl_PrescriptionsMedForm.value(retval.MedFormID);
                                ddl_PrescriptionsFrequencyUOM.dataSource.read();
                                ddl_PrescriptionsFrequencyUOM.value(retval.FrequencyUOMID);
                                ddl_PrescriptionsStrengthUOM.dataSource.read();
                                ddl_PrescriptionsStrengthUOM.value(retval.StrengthUOMID);
                                ddl_PrescriptionsPharmacy.dataSource.read();
                                ddl_PrescriptionsPharmacy.value(retval.PharmacyID);
                                ddl_PrescriptionsRoute.dataSource.read();
                                ddl_PrescriptionsRoute.value(retval.RouteID);



                                txt_PrescriptionsRefillsRemaining.value(retval.RefillsRemaining);
                                txt_PrescriptionsRefillTotal.value(retval.RefillsTotal);


                                $("#txt_PrescriptionsName").val(retval.Name);
                                $("#txt_PrescriptionsInstructions").val(retval.Instructions);
                                $("#txt_PrescriptionsProductName").val(retval.ProductName);
                                $("#txt_PrescriptionsBrandName").val(retval.BrandName);
                                $("#txt_PrescriptionsDosageText").val(retval.DosageText);
                                $("#txt_PrescriptionsDosageValue").val(retval.DosageValue);
                                $("#txt_PrescriptionsFrequencyValue").val(retval.FrequencyValue);
                                $("#txt_PrescriptionsStrengthValue").val(retval.StrengthValue);
                                $("#txt_PrescriptionsNote").val(retval.Note);
                                expirationdatepicker.value(retval.ExpirationDateTime);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserPrescriptions").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources

                        ddl_PrescriptionsProvider.dataSource.read();
                        ddl_PrescriptionsProvider.select(0);
                        ddl_PrescriptionsMedForm.dataSource.read();
                        ddl_PrescriptionsMedForm.select(0);
                        ddl_PrescriptionsFrequencyUOM.dataSource.read();
                        ddl_PrescriptionsFrequencyUOM.select(0);
                        ddl_PrescriptionsStrengthUOM.dataSource.read();
                        ddl_PrescriptionsStrengthUOM.select(0);
                        ddl_PrescriptionsPharmacy.dataSource.read();
                        ddl_PrescriptionsPharmacy.select(0);
                        ddl_PrescriptionsRoute.dataSource.read();
                        ddl_PrescriptionsRoute.select(0);

                        expirationdatepicker.value("");
                        startdatepicker.value("");
                        enddatepicker.value("");
                        txt_PrescriptionsRefillsRemaining.value("");
                        txt_PrescriptionsRefillTotal.value("");


                        $("#txt_PrescriptionsName").val('');
                        $("#txt_PrescriptionsInstructions").val('');
                        $("#txt_PrescriptionsProductName").val('');
                        $("#txt_PrescriptionsBrandName").val('');
                        $("#txt_PrescriptionsDosageText").val('');
                        $("#txt_PrescriptionsDosageValue").val('');
                        $("#txt_PrescriptionsFrequencyValue").val('');
                        $("#txt_PrescriptionsStrengthValue").val('');
                        $("#txt_PrescriptionsNote").val('');

                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserPrescriptions").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserProblem(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Problem";
                    } else {
                        _title = "Edit Problem";
                    }
                    wnd = $("#AddEditUserProblems");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);

                    var startdatepicker = $("#dp_ProblemStartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_ProblemEnddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                $("#txt_ProblemName").val(retval.Name);
                                $("#txt_ProblemNote").val(retval.Note);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserProblems").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        $("#txt_ProblemName").val('');
                        $("#txt_ProblemNote").val('');
                        startdatepicker.value("");
                        enddatepicker.value("");


                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserProblems").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserProcedures(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Procedure";
                    } else {
                        _title = "Edit Procedure";
                    }
                    wnd = $("#AddEditUserProcedures");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);

                    var ddl_ProceduresPerformingOrganization = $("#ddl_ProceduresPerformingOrganization").data("kendoDropDownList");
                    var ddl_ProceduresDevice = $("#ddl_ProceduresDevice").data("kendoDropDownList");
                    var ddl_ProceduresSpecimen = $("#ddl_ProceduresSpecimen").data("kendoDropDownList");
                    var startdatepicker = $("#dp_ProceduresStartdate").data("kendoDatePicker");
                    var enddatepicker = $("#dp_ProceduresEnddate").data("kendoDatePicker");
                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_ProceduresPerformingOrganization.dataSource.read();
                                ddl_ProceduresPerformingOrganization.value(retval.PerformingOrganizationID);
                                ddl_ProceduresDevice.dataSource.read();
                                ddl_ProceduresDevice.value(retval.DeviceID);
                                ddl_ProceduresSpecimen.dataSource.read();
                                ddl_ProceduresSpecimen.value(retval.SpecimenID);
                                $("#txt_ProceduresName").val(retval.Name);
                                $("#txt_ProceduresNote").val(retval.Note);
                                startdatepicker.value(retval.StartDateTime);
                                enddatepicker.value(retval.EndDateTime);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserProcedures").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_ProceduresPerformingOrganization.dataSource.read();
                        ddl_ProceduresPerformingOrganization.select(0);
                        ddl_ProceduresDevice.dataSource.read();
                        ddl_ProceduresDevice.select(0);
                        ddl_ProceduresSpecimen.dataSource.read();
                        ddl_ProceduresSpecimen.select(0);
                        $("#txt_ProceduresName").val('');
                        $("#txt_ProceduresNote").val('');
                        startdatepicker.value("");
                        enddatepicker.value("");


                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserProcedures").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserTestResult(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Test Result";
                    } else {
                        _title = "Edit Test Result";
                    }
                    wnd = $("#AddEditUserTestResults");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);

                    var ddl_TestResultsOrderingProvider = $("#ddl_TestResultsOrderingProvider").data("kendoDropDownList");
                    var ddl_TestResultsStatus = $("#ddl_TestResultsStatus").data("kendoDropDownList");

                    var resultdatepicker = $("#dp_TestResultsResultDate").data("kendoDatePicker");

                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_TestResultsOrderingProvider.dataSource.read();
                                ddl_TestResultsOrderingProvider.value(retval.ProviderID);
                                ddl_TestResultsStatus.dataSource.read();
                                ddl_TestResultsStatus.value(retval.StatusID);
                                $("#txt_TestResultsName").val(retval.Name);
                                $("#txt_TestResultsComments").val(retval.Comments);
                                $("#txt_TestResultsNarrative").val(retval.Narrative);
                                $("#txt_TestResultsImpression").val(retval.Impression);
                                $("#txt_TestResultsTranscriptions").val(retval.Transcriptions);
                                $("#txt_TestResultsNote").val(retval.Note);
                                resultdatepicker.value(retval.ResultDateTime);

                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserTestResults").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_TestResultsOrderingProvider.dataSource.read();
                        ddl_TestResultsOrderingProvider.select(0);
                        ddl_TestResultsStatus.dataSource.read();
                        ddl_TestResultsStatus.select(0);

                        $("#txt_TestResultsName").val('');
                        $("#txt_TestResultsComments").val('');
                        $("#txt_TestResultsNarrative").val('');
                        $("#txt_TestResultsImpression").val('');
                        $("#txt_TestResultsTranscriptions").val('');
                        $("#txt_TestResultsNote").val('');
                        resultdatepicker.value("");



                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserTestResults").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }
                function Add_Edit_UserVital(id) {
                    var _title = "";
                    if (id == 0) {
                        _title = "Add New Vital";
                    } else {
                        _title = "Edit Vital";
                    }
                    wnd = $("#AddEditUserVital");
                    wnd.kendoWindow({
                        modal: false,
                        visible: false,
                        width: 450,
                        resizable: false
                    }).data("kendoWindow").center();
                    wnd = wnd.data("kendoWindow");
                    wnd.title(_title);
                    wnd.open();
                    kendo.ui.progress(wnd.element, true);

                    var ddl_VitalProvider = $("#ddl_VitalProvider").data("kendoDropDownList");
                    var ddl_VitalUOM = $("#ddl_VitalUOM").data("kendoDropDownList");
                    var txt_VitalValue = $("#txt_VitalValue").data("kendoNumericTextBox");
                    var resultdatepicker = $("#dp_VitalDate").data("kendoDatePicker");

                    if (id > 0) // Edit Mode
                    {
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "GetSingleUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { itemId: id, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                //Start - Load Data sources
                                ddl_VitalProvider.dataSource.read();
                                ddl_VitalProvider.value(retval.ProviderID);
                                ddl_VitalUOM.dataSource.read();
                                ddl_VitalUOM.value(retval.UOMID);
                                $("#txt_VitalName").val(retval.Name);
                                $("#txt_VitalNote").val(retval.Note);
                                resultdatepicker.value(retval.ResultDateTime);
                                txt_VitalValue.value(retval.Value);
                                // End - Load Data sources
                                // Set Hidden Fields
                                $("#itemId").val(retval.ID);
                                $("#parentItemId").val(retval.ParentId);
                                var validator = $("#AddEditUserVital").kendoValidator().data("kendoValidator");
                                validator.validate();
                            }
                             , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });

                    } else {
                        kendo.ui.progress(wnd.element, false);
                        //Start - Load Data sources
                        ddl_VitalProvider.dataSource.read();
                        ddl_VitalProvider.select(0);
                        ddl_VitalUOM.dataSource.read();
                        ddl_VitalUOM.select(0);

                        $("#txt_VitalName").val('');
                        $("#txt_VitalNote").val('');
                        resultdatepicker.value("");
                        txt_VitalValue.value("");


                        $("#itemId").val(0);
                        $("#parentItemId").val(0);
                        // End - Load Data sources
                        var validator = $("#AddEditUserVital").kendoValidator().data("kendoValidator");
                        validator.hideMessages();
                    }
                }

               

                function DeleteItem(e) {
                    e.preventDefault();

                    deleteWnd.center().open();
                    $("#yes").unbind("click");
                    $("#yes").click(function () {
                        deleteWnd.close();
                        var grid = $("#grid").data("kendoGrid");
                        kendo.ui.progress(grid.element, true);

                        var item = grid.dataItem($(e.target).closest("tr"));
                        jQuery.ajax({
                            type: "GET",
                            async: true,
                            url: "DeleteUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: { id: item.ID, parentId: item.ParentId, categoryName: selectedCategory }, // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(grid.element, false);
                                grid.dataSource.read({ categoryName: selectedCategory });
                            }
                               , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(grid.element, false); }
                        });
                    });
                    $("#no").unbind("click");
                    $("#no").click(function () {
                        deleteWnd.close();
                    });



                }
                function OnGridDataBound() {

                    $(".k-grid-Edit span").addClass("k-icon k-edit");
                    $(".k-grid-Delete span").addClass("k-icon k-delete");
                    if (selectedCategory != 'Immunizations' && selectedCategory != 'Narratives' && selectedCategory != 'Test Results') {
                        //remove hierarchy cells and column
                        $(".k-hierarchy-cell").remove();
                        $(".k-hierarchy-col").remove();
                    }
                }
                function OnSubGridDataBound() {

                    $(".k-grid-EditSub span").addClass("k-icon k-edit");
                    $(".k-grid-EditSub").css("min-width", "20px");
                    $(".k-grid-EditSub span").css("margin-left", "1px");
                    $(".k-grid-DeleteSub span").addClass("k-icon k-delete");
                    $(".k-grid-DeleteSub ").css("min-width", "20px");
                    $(".k-grid-DeleteSub span").css("margin-left", "1px");

                }
                function ClosePopup() {
                    wnd.close();
                }
                function SaveItem() {
                    if (selectedCategory == 'Allergies') {
                        SaveUserAllergies();
                    }
                    else if (selectedCategory == 'Care Plans') {
                        SaveUserCarePlan();
                    }
                    else if (selectedCategory == 'Encounters') {
                        SaveUserEncounters();
                    }
                    else if (selectedCategory == 'Functional Statuses') {
                        SaveUserFunctionalStatus();
                    }
                    else if (selectedCategory == 'Immunizations') {
                        SaveUserImmunizations();
                    }
                    else if (selectedCategory == 'Instructions') {
                        SaveUserInstruction();
                    }
                    else if (selectedCategory == 'Narratives') {
                        SaveUserNarrative();
                    }
                    else if (selectedCategory == 'Prescriptions') {
                        SaveUserPrescriptions();
                    }
                    else if (selectedCategory == 'Problems') {
                        SaveUserProblem();
                    }
                    else if (selectedCategory == 'Procedures') {
                        SaveUserProcedures();
                    }
                    else if (selectedCategory == 'Test Results') {
                        SaveUserTestResults();
                    }
                    else if (selectedCategory == 'Vitals') {
                        SaveUserVitals();
                    }

                }
                function SaveUserAllergies() {
                    var validator = $("#AddEditUserAllergies").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_Allergen = $("#ddl_Allergen").data("kendoDropDownList");
                        var ddl_Reaction = $("#ddl_Reaction").data("kendoDropDownList");
                        var ddl_AllergyStatus = $("#ddl_AllergyStatus").data("kendoDropDownList");
                        var ddl_serverity = $("#ddl_serverity").data("kendoDropDownList");
                        var startdatepicker = $("#dp_Allergystartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_Allergyenddate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Category = selectedCategory;
                        NewItem.AllergenID = ddl_Allergen.value();
                        NewItem.ReactionID = ddl_Reaction.value();
                        NewItem.SeverityID = ddl_serverity.value();
                        NewItem.StatusID = ddl_AllergyStatus.value();
                        NewItem.Note = $("#txt_Allergynote").val();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();

                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserCarePlan() {
                    var validator = $("#AddEditUserCarePalns").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_CarePlanTypes = $("#ddl_CarePlanTypes").data("kendoDropDownList");
                        var ddl_CarePlanSpecialty = $("#ddl_CarePlanSpecialty").data("kendoDropDownList");
                        var startdatepicker = $("#dp_CarePlanstartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_CarePlanenddate").data("kendoDatePicker");

                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.CarePlanTypeID = ddl_CarePlanTypes.value();
                        NewItem.CarePlanSpecialtyID = ddl_CarePlanSpecialty.value();
                        NewItem.CarePlanText = $("#txt_CarePlanText").val();
                        NewItem.CarePlanName = $("#txt_CarePlanName").val();
                        NewItem.Note = $("#txt_CarePlannote").val();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserEncounters() {
                    var validator = $("#AddEditUserEncounter").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_EncounterProvider = $("#ddl_EncounterProvider").data("kendoDropDownList");
                        var ddl_EncounterVisitType = $("#ddl_EncounterVisitType").data("kendoDropDownList");
                        var dp_EncounterDate = $("#dp_EncounterDate").data("kendoDatePicker");

                        // Follow Up Instruction
                        var FollowUpstartdatepicker = $("#dp_FollowUpStartDate").data("kendoDatePicker");
                        var FollowUpenddatepicker = $("#dp_FollowUpEndDate").data("kendoDatePicker");
                        var ddl_FollowUpInsType = $("#ddl_FollowUpInsType").data("kendoDropDownList");
                        var followUpIns = new Object();
                        followUpIns.Name = $("#txt_FollowUpName").val();
                        followUpIns.Text = $("#txt_FollowUpText").val();
                        followUpIns.StartDateTime = FollowUpstartdatepicker.value();
                        followUpIns.EndDateTime = FollowUpenddatepicker.value();
                        followUpIns.InstructionTypeID = ddl_FollowUpInsType.value();

                        // Patient Instruction
                        var Patientstartdatepicker = $("#dp_PatientStartDate").data("kendoDatePicker");
                        var Patientenddatepicker = $("#dp_PatientEndDate").data("kendoDatePicker");
                        var ddl_PatientInsType = $("#ddl_PatientInsType").data("kendoDropDownList");
                        var PatientIns = new Object();
                        PatientIns.Name = $("#txt_PatientName").val();
                        PatientIns.Text = $("#txt_PatientText").val();
                        PatientIns.StartDateTime = Patientstartdatepicker.value();
                        PatientIns.EndDateTime = Patientenddatepicker.value();
                        PatientIns.InstructionTypeID = ddl_PatientInsType.value();

                        var NewItem = new Object();
                        NewItem.FollowUpInstruction = followUpIns;
                        NewItem.PatientInstruction = PatientIns;
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.ProviderID = ddl_EncounterProvider.value();
                        NewItem.VisitTypeID = ddl_EncounterVisitType.value();
                        NewItem.EncounterDateTime = dp_EncounterDate.value();
                        NewItem.Note = $("#txt_EncounterNote").val();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserFunctionalStatus() {
                    var validator = $("#AddEditUserFunctionalStatuses").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var startdatepicker = $("#dp_FunctionalStatusesstartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_FunctionalStatusesenddate").data("kendoDatePicker");

                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();

                        NewItem.Name = $("#txt_FunctionalStatusesName").val();
                        NewItem.Note = $("#txt_FunctionalStatusesnote").val();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserImmunizations() {
                    var validator = $("#AddEditUserImmunizations").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);

                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Name = $("#txt_ImmunizationsName").val();
                        NewItem.Note = $("#txt_Immunizationsnote").val();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserInstruction() {
                    var validator = $("#AddEditUserInstructions").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_InstructionType = $("#ddl_InstructionType").data("kendoDropDownList");
                        var startdatepicker = $("#dp_InstructionStartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_InstructionEnddate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Name = $("#txt_InstructionName").val();
                        NewItem.Text = $("#txt_InstructionText").val();
                        NewItem.Note = $("#txt_InstructionNote").val();
                        NewItem.InstructionTypeID = ddl_InstructionType.value();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserNarrative() {
                    var validator = $("#AddEditUserNarratives").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_NarrativeProvider = $("#ddl_NarrativeProvider").data("kendoDropDownList");
                        var startdatepicker = $("#dp_NarrativeStartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_NarrativeEnddate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Note = $("#txt_NarrativeNote").val();
                        NewItem.ProviderID = ddl_NarrativeProvider.value();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserPrescriptions() {
                    var validator = $("#AddEditUserPrescriptions").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);

                        var ddl_PrescriptionsProvider = $("#ddl_PrescriptionsProvider").data("kendoDropDownList");
                        var ddl_PrescriptionsMedForm = $("#ddl_PrescriptionsMedForm").data("kendoDropDownList");
                        var ddl_PrescriptionsFrequencyUOM = $("#ddl_PrescriptionsFrequencyUOM").data("kendoDropDownList");
                        var ddl_PrescriptionsStrengthUOM = $("#ddl_PrescriptionsStrengthUOM").data("kendoDropDownList");
                        var ddl_PrescriptionsPharmacy = $("#ddl_PrescriptionsPharmacy").data("kendoDropDownList");
                        var ddl_PrescriptionsRoute = $("#ddl_PrescriptionsRoute").data("kendoDropDownList");
                        var expirationdatepicker = $("#dp_PrescriptionsExpirationdate").data("kendoDatePicker");
                        var startdatepicker = $("#dp_PrescriptionsStartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_PrescriptionsEnddate").data("kendoDatePicker");
                        var txt_PrescriptionsRefillsRemaining = $("#txt_PrescriptionsRefillsRemaining").data("kendoNumericTextBox");
                        var txt_PrescriptionsRefillTotal = $("#txt_PrescriptionsRefillTotal").data("kendoNumericTextBox");


                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();

                        NewItem.ProviderID = ddl_PrescriptionsProvider.value();
                        NewItem.MedFormID = ddl_PrescriptionsMedForm.value();
                        NewItem.FrequencyUOMID = ddl_PrescriptionsFrequencyUOM.value();
                        NewItem.StrengthUOMID = ddl_PrescriptionsStrengthUOM.value();
                        NewItem.RouteID = ddl_PrescriptionsRoute.value();
                        NewItem.PharmacyID = ddl_PrescriptionsPharmacy.value();
                        NewItem.Name = $("#txt_PrescriptionsName").val();
                        NewItem.Instructions = $("#txt_PrescriptionsInstructions").val();
                        NewItem.ProductName = $("#txt_PrescriptionsProductName").val();
                        NewItem.BrandName = $("#txt_PrescriptionsBrandName").val();
                        NewItem.DosageText = $("#txt_PrescriptionsDosageText").val();
                        NewItem.DosageValue = $("#txt_PrescriptionsDosageValue").val();
                        NewItem.FrequencyValue = $("#txt_PrescriptionsFrequencyValue").val();
                        NewItem.StrengthValue = $("#txt_PrescriptionsStrengthValue").val();
                        NewItem.RefillsRemaining = txt_PrescriptionsRefillsRemaining.value();
                        NewItem.RefillsTotal = txt_PrescriptionsRefillTotal.value();
                        NewItem.ExpirationDateTime = expirationdatepicker.value();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Note = $("#txt_PrescriptionsNote").val();

                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserProblem() {
                    var validator = $("#AddEditUserProblems").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var startdatepicker = $("#dp_ProblemStartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_ProblemEnddate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Note = $("#txt_ProblemNote").val();
                        NewItem.Name = $("#txt_ProblemName").val();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserProcedures() {
                    var validator = $("#AddEditUserProcedures").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_ProceduresPerformingOrganization = $("#ddl_ProceduresPerformingOrganization").data("kendoDropDownList");
                        var ddl_ProceduresDevice = $("#ddl_ProceduresDevice").data("kendoDropDownList");
                        var ddl_ProceduresSpecimen = $("#ddl_ProceduresSpecimen").data("kendoDropDownList");
                        var startdatepicker = $("#dp_ProceduresStartdate").data("kendoDatePicker");
                        var enddatepicker = $("#dp_ProceduresEnddate").data("kendoDatePicker");
                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Note = $("#txt_ProceduresNote").val();
                        NewItem.Name = $("#txt_ProceduresName").val();
                        NewItem.PerformingOrganizationID = ddl_ProceduresPerformingOrganization.value();
                        NewItem.DeviceID = ddl_ProceduresDevice.value();
                        NewItem.SpecimenID = ddl_ProceduresSpecimen.value();
                        NewItem.StartDateTime = startdatepicker.value();
                        NewItem.EndDateTime = enddatepicker.value();
                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserTestResults() {
                    var validator = $("#AddEditUserTestResults").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_TestResultsOrderingProvider = $("#ddl_TestResultsOrderingProvider").data("kendoDropDownList");
                        var ddl_TestResultsStatus = $("#ddl_TestResultsStatus").data("kendoDropDownList");
                        var resultdatepicker = $("#dp_TestResultsResultDate").data("kendoDatePicker");


                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Note = $("#txt_TestResultsNote").val();
                        NewItem.Name = $("#txt_TestResultsName").val();
                        NewItem.Comments = $("#txt_TestResultsComments").val();
                        NewItem.Narrative = $("#txt_TestResultsNarrative").val();
                        NewItem.Impression = $("#txt_TestResultsImpression").val();
                        NewItem.Transcriptions = $("#txt_TestResultsTranscriptions").val();
                        NewItem.ProviderID = ddl_TestResultsOrderingProvider.value();
                        NewItem.StatusID = ddl_TestResultsStatus.value();
                        NewItem.ResultDateTime = resultdatepicker.value();

                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function SaveUserVitals() {
                    var validator = $("#AddEditUserVital").kendoValidator().data("kendoValidator");
                    if (validator.validate()) {
                        kendo.ui.progress(wnd.element, true);
                        var ddl_VitalProvider = $("#ddl_VitalProvider").data("kendoDropDownList");
                        var ddl_VitalUOM = $("#ddl_VitalUOM").data("kendoDropDownList");
                        var resultdatepicker = $("#dp_VitalDate").data("kendoDatePicker");


                        var NewItem = new Object();
                        NewItem.ID = $("#itemId").val();
                        NewItem.ParentId = $("#parentItemId").val();
                        NewItem.Note = $("#txt_VitalNote").val();
                        NewItem.Name = $("#txt_VitalName").val();
                        NewItem.Value = $("#txt_VitalValue").val();
                        NewItem.ProviderID = ddl_VitalProvider.value();
                        NewItem.UOMID = ddl_VitalUOM.value();
                        NewItem.ResultDateTime = resultdatepicker.value();

                        NewItem.Category = selectedCategory;
                        jQuery.ajax({
                            type: "POST",
                            async: true,
                            url: "SaveUserDataWithNote",
                            contentType: "application/json; charset=utf-8", // we are sending in JSON format so we need to specify this
                            dataType: "json", // the data type we want back, so text.  The data will come wrapped in xml
                            data: JSON.stringify({ 'model': NewItem }), // the data in JSON format.  Note it is *not* a JSON object, is is a literal string in JSON format
                            success: function (retval) {
                                kendo.ui.progress(wnd.element, false);
                                if (retval == "SUCCESS") {
                                    wnd.close();
                                    var grid = $("#grid").data("kendoGrid");
                                    grid.dataSource.read({ categoryName: selectedCategory });
                                }
                            }
                       , error: function (xmlHttpRequest, status, err) { alert(err); kendo.ui.progress(wnd.element, false); }
                        });
                    }
                }
                function ManageGridColumns() {
                    var grid = $("#grid").data("kendoGrid");
                    HideAllCoulmns();
                    if (selectedCategory == 'Allergies') {
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Allergen");
                        grid.showColumn("Reaction");
                        grid.showColumn("Status");
                        grid.showColumn("Severity");
                        grid.showColumn("Source");
                        grid.showColumn("Note");
                    }
                    else if (selectedCategory == 'Care Plans') {
                        grid.showColumn("Note");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("CarePlanTypeName");
                        grid.showColumn("CarePlanSpecialtyName");
                        grid.showColumn("CarePlanName");
                        grid.showColumn("CarePlanText");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Encounters') {
                        grid.showColumn("Note");
                        grid.showColumn("EncounterDateTime");
                        grid.showColumn("ProviderName");
                        grid.showColumn("VisitTypeName");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Functional Statuses') {
                        grid.showColumn("Note");
                        grid.showColumn("Name");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Immunizations') {
                        grid.showColumn("Name");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Instructions') {
                        grid.showColumn("Name");
                        grid.showColumn("Text");
                        grid.showColumn("InstructionTypeName");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Narratives') {
                        grid.showColumn("ProviderName");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Prescriptions') {
                        grid.showColumn("ProviderName");
                        grid.showColumn("MedFormName");
                        grid.showColumn("FrequencyUOMName");
                        grid.showColumn("StrengthUOMName");
                        grid.showColumn("RouteName");
                        grid.showColumn("PharmacyName");

                        grid.showColumn("Instructions");
                        grid.showColumn("ProductName");
                        grid.showColumn("BrandName");
                        grid.showColumn("DosageText");
                        grid.showColumn("DosageValue");
                        grid.showColumn("FrequencyValue");
                        grid.showColumn("StrengthValue");
                        grid.showColumn("RefillsRemaining");
                        grid.showColumn("RefillsTotal");


                        grid.showColumn("ExpirationDateTime");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Name");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Problems') {
                        grid.showColumn("Name");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Procedures') {
                        grid.showColumn("PerformingOrganizationName");
                        grid.showColumn("DeviceName");
                        grid.showColumn("SpecimenName");
                        grid.showColumn("Name");
                        grid.showColumn("StartDateTime");
                        grid.showColumn("EndDateTime");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Test Results') {
                        grid.showColumn("ProviderName");
                        grid.showColumn("Status");

                        grid.showColumn("Name");
                        grid.showColumn("Comments");
                        grid.showColumn("Narrative");
                        grid.showColumn("Impression");
                        grid.showColumn("Transcriptions");
                        grid.showColumn("ResultDateTime");

                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }
                    else if (selectedCategory == 'Vitals') {
                        grid.showColumn("ProviderName");
                        grid.showColumn("UOMName");
                        grid.showColumn("Name");
                        grid.showColumn("Value");
                        grid.showColumn("ResultDateTime");
                        grid.showColumn("Note");
                        grid.showColumn("Source");
                    }

                }
                function HideAllCoulmns() {
                    var grid = $("#grid").data("kendoGrid");

                    // Encounter
                    grid.hideColumn("EncounterDateTime");
                    grid.hideColumn("ProviderName");
                    grid.hideColumn("VisitTypeName");

                    // Care Plan
                    grid.hideColumn("CarePlanTypeName");
                    grid.hideColumn("CarePlanSpecialtyName");
                    grid.hideColumn("CarePlanName");
                    grid.hideColumn("CarePlanText");

                    // Allergy
                    grid.hideColumn("Allergen");
                    grid.hideColumn("Reaction");
                    grid.hideColumn("Status");
                    grid.hideColumn("Severity");

                    // Functional Statuses
                    grid.hideColumn("Name");

                    // Instructions
                    grid.hideColumn("Text");
                    grid.hideColumn("InstructionTypeName");

                    // Prescriptions
                    grid.hideColumn("ExpirationDateTime");
                    grid.hideColumn("MedFormName");
                    grid.hideColumn("FrequencyUOMName");
                    grid.hideColumn("StrengthUOMName");
                    grid.hideColumn("RouteName");
                    grid.hideColumn("PharmacyName");
                    grid.hideColumn("Instructions");
                    grid.hideColumn("ProductName");
                    grid.hideColumn("BrandName");
                    grid.hideColumn("DosageText");
                    grid.hideColumn("DosageValue");
                    grid.hideColumn("FrequencyValue");
                    grid.hideColumn("StrengthValue");
                    grid.hideColumn("RefillsRemaining");
                    grid.hideColumn("RefillsTotal");

                    // Procedures
                    grid.hideColumn("PerformingOrganizationName");
                    grid.hideColumn("DeviceName");
                    grid.hideColumn("SpecimenName");

                    // Test Result
                    grid.hideColumn("Status");
                    grid.hideColumn("Comments");
                    grid.hideColumn("Narrative");
                    grid.hideColumn("Impression");
                    grid.hideColumn("Transcriptions");
                    grid.hideColumn("ResultDateTime");

                    // Vitals
                    grid.hideColumn("UOMName");
                    grid.hideColumn("Value");

                    grid.hideColumn("Note");
                    grid.hideColumn("StartDateTime");
                    grid.hideColumn("EndDateTime");
                    grid.hideColumn("Source");
                }

            </script>

            <style>
                /* Page Template for the exported PDF */
                .page-template {
                    font-family: "Arial", sans-serif;
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                }

                    .page-template .header {
                        position: absolute;
                        top: 30px;
                        left: 30px;
                        right: 30px;
                        border-bottom: 1px solid #888;
                        color: #888;
                    }

                    .page-template .footer {
                        position: absolute;
                        bottom: 30px;
                        left: 30px;
                        right: 30px;
                        border-top: 1px solid #888;
                        text-align: center;
                        color: #888;
                    }

                    .page-template .watermark {
                        font-weight: bold;
                        font-size: 400%;
                        text-align: center;
                        margin-top: 30%;
                        color: #aaaaaa;
                        opacity: 0.1;
                        transform: rotate(-35deg) scale(1.7, 1.5);
                    }
            </style>
            <div id="AddEditUserAllergies" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Allergen: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_Allergen" name="ddl_Allergen" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Reaction: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_Reaction" name="ddl_Reaction" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Allergy Status: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_AllergyStatus" name="ddl_AllergyStatus" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Serverity: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_serverity" name="ddl_serverity" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_Allergystartdate" style="color:black; width: 100%;" name="dp_Allergystartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_Allergyenddate" style="color:black; width: 100%;" name="dp_Allergyenddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_Allergynote" name="txt_Allergynote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>

            </div>
            <div id="AddEditUserCarePalns" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Plan Type: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_CarePlanTypes" name="ddl_CarePlanTypes" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Plan Specialty: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_CarePlanSpecialty" name="ddl_CarePlanSpecialty" style="width: 100%;" />
                        </div>
                    </div>



                    <div>
                        <div class="k-edit-label">
                            <label>Plan Title: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_CarePlanName" name="txt_CarePlanName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Plan Text: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_CarePlanText" name="txt_CarePlanText" class="k-textbox" required validationMessage="Required" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_CarePlanstartdate" style="color:black; width: 100%;" name="dp_CarePlanstartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_CarePlanenddate" style="color:black; width: 100%;" name="dp_CarePlanenddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_CarePlannote" name="txt_CarePlannote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserEncounter" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label" style="width:32%">
                            <label>Provider: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_EncounterProvider" name="ddl_EncounterProvider" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label" style="width:32%">
                            <label>Visit Type: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_EncounterVisitType" name="ddl_EncounterVisitType" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label" style="width:32%">
                            <label>Encounter Date:</label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_EncounterDate" style="color:black; width: 100%;" name="dp_EncounterDate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label" style="width:32%">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_EncounterNote" name="txt_EncounterNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label" style="width:41%">
                            <label style="color:blue;text-decoration:underline">Follow Up Instruction: </label>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Type: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="ddl_FollowUpInsType" name="ddl_FollowUpInsType" style="width: 100%;" />

                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Name: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="txt_FollowUpName" name="txt_FollowUpName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Text: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="txt_FollowUpText" name="txt_FollowUpText" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Start Date: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="dp_FollowUpStartDate" style="color:black; width: 100%;" name="dp_FollowUpStartDate" required validationMessage="Required" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>End Date: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="dp_FollowUpEndDate" style="color:black; width: 100%;" name="dp_FollowUpEndDate" required validationMessage="Required" />
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label" style="width:41%">
                            <label style="color:blue;text-decoration:underline">Patient Instruction: </label>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Type: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="ddl_PatientInsType" name="ddl_PatientInsType" style="width: 100%;" />

                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Name: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="txt_PatientName" name="txt_PatientName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Text: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="txt_PatientText" name="txt_PatientText" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>Start Date: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="dp_PatientStartDate" style="color:black; width: 100%;" name="dp_PatientStartDate" required validationMessage="Required" />
                            </div>
                        </div>
                        <div>
                            <div class="k-edit-label" style="width:32%">
                                <label>End Date: </label>
                            </div>

                            <div class="k-edit-field">
                                <input id="dp_PatientEndDate" style="color:black; width: 100%;" name="dp_PatientEndDate" required validationMessage="Required" />
                            </div>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserFunctionalStatuses" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">

                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_FunctionalStatusesName" name="txt_FunctionalStatusesName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_FunctionalStatusesstartdate" style="color:black; width: 100%;" name="dp_FunctionalStatusesstartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_FunctionalStatusesenddate" style="color:black; width: 100%;" name="dp_FunctionalStatusesenddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_FunctionalStatusesnote" name="txt_FunctionalStatusesnote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserImmunizations" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">

                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_ImmunizationsName" name="txt_ImmunizationsName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_Immunizationsnote" name="txt_Immunizationsnote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserInstructions" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">

                    <div>
                        <div class="k-edit-label">
                            <label>Type: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_InstructionType" name="ddl_InstructionType" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_InstructionName" name="txt_InstructionName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Text: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_InstructionText" name="txt_InstructionText" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_InstructionStartdate" style="color:black; width: 100%;" name="dp_InstructionStartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_InstructionEnddate" style="color:black; width: 100%;" name="dp_InstructionEnddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_InstructionNote" name="txt_InstructionNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserNarratives" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">

                    <div>
                        <div class="k-edit-label">
                            <label>Provider: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_NarrativeProvider" name="ddl_NarrativeProvider" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_NarrativeStartdate" style="color:black; width: 100%;" name="dp_NarrativeStartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_NarrativeEnddate" style="color:black; width: 100%;" name="dp_NarrativeEnddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_NarrativeNote" name="txt_NarrativeNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserPrescriptions" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">

                    <div>
                        <div class="k-edit-label">
                            <label>Provider: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsProvider" name="ddl_PrescriptionsProvider" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Med Form: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsMedForm" name="ddl_PrescriptionsMedForm" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Frequency UOM: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsFrequencyUOM" name="ddl_PrescriptionsFrequencyUOM" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Strength UOM: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsStrengthUOM" name="ddl_PrescriptionsStrengthUOM" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Route: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsRoute" name="ddl_PrescriptionsRoute" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Pharmacy: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_PrescriptionsPharmacy" name="ddl_PrescriptionsPharmacy" style="width: 100%;" />
                        </div>
                    </div>

                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsName" name="txt_PrescriptionsName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Instructions: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_PrescriptionsInstructions" name="txt_PrescriptionsInstructions" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Product Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsProductName" name="txt_PrescriptionsProductName" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Brand Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsBrandName" name="txt_PrescriptionsBrandName" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Dosage Text: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsDosageText" name="txt_PrescriptionsDosageText" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Dosage Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsDosageValue" name="txt_PrescriptionsDosageValue" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Frequency Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsFrequencyValue" name="txt_PrescriptionsFrequencyValue" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Strength Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsStrengthValue" name="txt_PrescriptionsStrengthValue" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Refills Remaining: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsRefillsRemaining" name="txt_PrescriptionsRefillsRemaining" style="color:black;width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Refills Total: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_PrescriptionsRefillTotal" name="txt_PrescriptionsRefillsTotal" style="color:black;width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Expiration Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_PrescriptionsExpirationdate" style="color:black; width: 100%;" name="dp_PrescriptionsExpirationdate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_PrescriptionsStartdate" style="color:black; width: 100%;" name="dp_PrescriptionsStartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_PrescriptionsEnddate" style="color:black; width: 100%;" name="dp_PrescriptionsEnddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_PrescriptionsNote" name="txt_PrescriptionsNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserProblems" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_ProblemName" name="txt_ProblemName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_ProblemStartdate" style="color:black; width: 100%;" name="dp_ProblemStartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_ProblemEnddate" style="color:black; width: 100%;" name="dp_ProblemEnddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_ProblemNote" name="txt_ProblemNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserProcedures" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Performing Organization: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_ProceduresPerformingOrganization" name="ddl_ProceduresPerformingOrganization" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Device: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_ProceduresDevice" name="ddl_ProceduresDevice" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Specimen: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_ProceduresSpecimen" name="ddl_ProceduresSpecimen" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_ProceduresName" name="txt_ProceduresName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Start Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_ProceduresStartdate" style="color:black; width: 100%;" name="dp_ProceduresStartdate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>End Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_ProceduresEnddate" style="color:black; width: 100%;" name="dp_ProceduresEnddate" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_ProceduresNote" name="txt_ProceduresNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserTestResults" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Ordering Provider: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_TestResultsOrderingProvider" name="ddl_TestResultsOrderingProvider" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Status: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_TestResultsStatus" name="ddl_TestResultsStatus" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultsName" name="txt_TestResultsName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Comments: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_TestResultsComments" name="txt_TestResultsComments" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Narrative: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultsNarrative" name="txt_TestResultsNarrative" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Impression: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultsImpression" name="txt_TestResultsImpression" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Transcriptions: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultsTranscriptions" name="txt_TestResultsTranscriptions" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Result Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_TestResultsResultDate" style="color:black; width: 100%;" name="dp_TestResultsResultDate" required validationMessage="Required" />
                        </div>
                    </div>

                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_TestResultsNote" name="txt_TestResultsNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserVital" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Provider: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_VitalProvider" name="ddl_VitalProvider" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>UOM: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_VitalUOM" name="ddl_VitalUOM" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_VitalName" name="txt_VitalName" class="k-textbox" required validationMessage="Required" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_VitalValue" name="txt_VitalValue" required validationMessage="Required" style="color:black;width: 100%;"></textarea>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Result Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_VitalDate" style="color:black; width: 100%;" name="dp_VitalDate" required validationMessage="Required" />
                        </div>
                    </div>

                    <div>
                        <div class="k-edit-label">
                            <label>Note: </label>
                        </div>
                        <div class="k-edit-field">
                            <textarea id="txt_VitalNote" name="txt_VitalNote" class="k-textbox" style="width: 100%;"></textarea>
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserImmunizationsDates" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Date: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="dp_ImmunizationsDatesDate" style="color:black; width: 100%;" name="dp_ImmunizationsDatesDate" required validationMessage="Required" />
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveSubItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserNarrativesEntries" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>Section Seq: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_NarrativesEntriesSectionSeqNum" style="color:black; width: 100%;" name="txt_NarrativesEntriesSectionSeqNum" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Title: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_NarrativesEntriesTitle" name="txt_NarrativesEntriesTitle" class="k-textbox"  style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Text: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_NarrativesEntriesText" name="txt_NarrativesEntriesText" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveSubItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="AddEditUserTestResultComponents" class="k-popup-edit-form k-window-content k-content" style="display:none">
                <div class="k-edit-form-container">
                    <div>
                        <div class="k-edit-label">
                            <label>UOM: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="ddl_TestResultComponentsUOM" name="ddl_TestResultComponentsUOM" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Name: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsName" style="width: 100%;" class="k-textbox" name="txt_TestResultComponentsName" required validationMessage="Required" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsValue" name="txt_TestResultComponentsValue" class="k-textbox" style="width: 100%;" required validationMessage="Required"/>
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Low Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsLowValue" name="txt_TestResultComponentsLowValue" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>High Value: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsHighValue" name="txt_TestResultComponentsHighValue" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label"> 
                            <label>Ref Range: </label> 
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsRefRange" name="txt_TestResultComponentsRefRange" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div>
                        <div class="k-edit-label">
                            <label>Comments: </label>
                        </div>
                        <div class="k-edit-field">
                            <input id="txt_TestResultComponentsComments" name="txt_TestResultComponentsComments" class="k-textbox" style="width: 100%;" />
                        </div>
                    </div>
                    <div class="k-edit-buttons k-state-default">
                        <a class="k-button k-button-icontext k-primary k-grid-update" onclick="SaveSubItem()">
                            <span class="k-icon k-update"></span>
                            Save
                        </a>
                        <a class="k-button k-button-icontext k-grid-cancel" onclick="ClosePopup()">
                            <span class="k-icon k-cancel"></span>
                            Cancel
                        </a>
                    </div>
                </div>
            </div>
            <div id="DeleteModalWindow" style="display:none">
                <h4>Are you sure that you want to delete this record ?</h4>
                <button id="yes" class="k-button">Yes</button>
                <button id="no" class="k-button">No</button>
            </div>
            <input type="hidden" id="itemId" />
            <input type="hidden" id="parentItemId" />
        </div>
    </div>
</div>
<script>
    $('#tblChkSelectAll').change(function () {
        if ($(this).prop('checked')) {
            $('tbody tr td input[type="checkbox"]').each(function () {
                $(this).prop('checked', true);
            });
        } else {
            $('tbody tr td input[type="checkbox"]').each(function () {
                $(this).prop('checked', false);
            });
        }
    });

</script>
<script>
    $('.selectable-all').change(function () {
        $(this).closest('table').find('.list-item :checkbox').not(this).prop('checked', this.checked);
    });

</script>
