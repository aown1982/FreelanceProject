

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "C:\Users\josht_000\Dropbox\Work\SHAREForCures\Development\1. MVP Development\Internal Development\DALUsers\App.config"
//     Connection String Name: "SFCUserDataConn"
//     Connection String:      "Data Source=sfcusers.cswvgqf4hyhq.us-east-1.rds.amazonaws.com;Initial Catalog=UserData;User id=SFCUsersMaster;password=**zapped**;;Application Name=DAL"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Web Edition (64-bit)
// Database Engine Edition: Standard

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DAL.UserData
{
    using System.Linq;

    #region Unit of work

    public interface ISFCUserDataContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; } // sysdiagrams
        System.Data.Entity.DbSet<TActivity> TActivities { get; set; } // tActivities
        System.Data.Entity.DbSet<TAllergen> TAllergens { get; set; } // tAllergens
        System.Data.Entity.DbSet<TAllergySeverity> TAllergySeverities { get; set; } // tAllergySeverities
        System.Data.Entity.DbSet<TAllergyStatus> TAllergyStatus { get; set; } // tAllergyStatuses
        System.Data.Entity.DbSet<TCode> TCodes { get; set; } // tCodes
        System.Data.Entity.DbSet<TCredential> TCredentials { get; set; } // tCredentials
        System.Data.Entity.DbSet<TDietCategory> TDietCategories { get; set; } // tDietCategory
        System.Data.Entity.DbSet<TGeneticTrait> TGeneticTraits { get; set; } // tGeneticTraits
        System.Data.Entity.DbSet<TInstructionType> TInstructionTypes { get; set; } // tInstructionTypes
        System.Data.Entity.DbSet<TMedicationForm> TMedicationForms { get; set; } // tMedicationForms
        System.Data.Entity.DbSet<TMedicationRoute> TMedicationRoutes { get; set; } // tMedicationRoutes
        System.Data.Entity.DbSet<TNutrient> TNutrients { get; set; } // tNutrients
        System.Data.Entity.DbSet<TNutrientType> TNutrientTypes { get; set; } // tNutrientType
        System.Data.Entity.DbSet<TOrderType> TOrderTypes { get; set; } // tOrderTypes
        System.Data.Entity.DbSet<TOrganization> TOrganizations { get; set; } // tOrganizations
        System.Data.Entity.DbSet<TPharmacy> TPharmacies { get; set; } // tPharmacies
        System.Data.Entity.DbSet<TProvider> TProviders { get; set; } // tProviders
        System.Data.Entity.DbSet<TProviderPhoneNumber> TProviderPhoneNumbers { get; set; } // tProviderPhoneNumbers
        System.Data.Entity.DbSet<TReaction> TReactions { get; set; } // tReactions
        System.Data.Entity.DbSet<TReactionType> TReactionTypes { get; set; } // tReactionTypes
        System.Data.Entity.DbSet<TSharePurpos> TSharePurpos { get; set; } // tSHAREPurposes
        System.Data.Entity.DbSet<TShareSetting> TShareSettings { get; set; } // tSHARESettings
        System.Data.Entity.DbSet<TSnpAvailability> TSnpAvailabilities { get; set; } // tSNPAvailability
        System.Data.Entity.DbSet<TSource> TSources { get; set; } // tSources
        System.Data.Entity.DbSet<TSourceOrganization> TSourceOrganizations { get; set; } // tSourceOrganizations
        System.Data.Entity.DbSet<TSourceService> TSourceServices { get; set; } // tSourceServices
        System.Data.Entity.DbSet<TSourceServiceDevice> TSourceServiceDevices { get; set; } // tSourceServiceDevices
        System.Data.Entity.DbSet<TSystemStatus> TSystemStatus { get; set; } // tSystemStatuses
        System.Data.Entity.DbSet<TTestResultStatus> TTestResultStatus { get; set; } // tTestResultStatuses
        System.Data.Entity.DbSet<TUnitsOfMeasure> TUnitsOfMeasures { get; set; } // tUnitsOfMeasure
        System.Data.Entity.DbSet<TUomRelationship> TUomRelationships { get; set; } // tUOMRelationships
        System.Data.Entity.DbSet<TUserActivity> TUserActivities { get; set; } // tUserActivities
        System.Data.Entity.DbSet<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies
        System.Data.Entity.DbSet<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans
        System.Data.Entity.DbSet<TUserCarePlanSpecialty> TUserCarePlanSpecialties { get; set; } // tUserCarePlanSpecialties
        System.Data.Entity.DbSet<TUserCarePlanType> TUserCarePlanTypes { get; set; } // tUserCarePlanTypes
        System.Data.Entity.DbSet<TUserDataAudit> TUserDataAudits { get; set; } // tUserDataAudit
        System.Data.Entity.DbSet<TUserDataAuditObject> TUserDataAuditObjects { get; set; } // tUserDataAuditObjects
        System.Data.Entity.DbSet<TUserDataErrLog> TUserDataErrLogs { get; set; } // tUserDataErrLog
        System.Data.Entity.DbSet<TUserDiet> TUserDiets { get; set; } // tUserDiet
        System.Data.Entity.DbSet<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters
        System.Data.Entity.DbSet<TUserEncounterReason> TUserEncounterReasons { get; set; } // tUserEncounterReasons
        System.Data.Entity.DbSet<TUserEvent> TUserEvents { get; set; } // tUserEvents
        System.Data.Entity.DbSet<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses
        System.Data.Entity.DbSet<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits
        System.Data.Entity.DbSet<TUserId> TUserIds { get; set; } // tUserIDs
        System.Data.Entity.DbSet<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations
        System.Data.Entity.DbSet<TUserImmunizationsDate> TUserImmunizationsDates { get; set; } // tUserImmunizationsDates
        System.Data.Entity.DbSet<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions
        System.Data.Entity.DbSet<TUserLocation> TUserLocations { get; set; } // tUserLocations
        System.Data.Entity.DbSet<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives
        System.Data.Entity.DbSet<TUserNarrativeEntry> TUserNarrativeEntries { get; set; } // tUserNarrativeEntries
        System.Data.Entity.DbSet<TUserOrder> TUserOrders { get; set; } // tUserOrders
        System.Data.Entity.DbSet<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions
        System.Data.Entity.DbSet<TUserProblem> TUserProblems { get; set; } // tUserProblems
        System.Data.Entity.DbSet<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures
        System.Data.Entity.DbSet<TUserProcedureDevice> TUserProcedureDevices { get; set; } // tUserProcedureDevices
        System.Data.Entity.DbSet<TUserProcedureDeviceCode> TUserProcedureDeviceCodes { get; set; } // tUserProcedureDeviceCodes
        System.Data.Entity.DbSet<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings
        System.Data.Entity.DbSet<TUserSleep> TUserSleeps { get; set; } // tUserSleep
        System.Data.Entity.DbSet<TUserSleepDetail> TUserSleepDetails { get; set; } // tUserSleepDetails
        System.Data.Entity.DbSet<TUserSnpProbe> TUserSnpProbes { get; set; } // tUserSNPProbes
        System.Data.Entity.DbSet<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices
        System.Data.Entity.DbSet<TUserSourceServiceStatus> TUserSourceServiceStatus { get; set; } // tUserSourceServiceStatuses
        System.Data.Entity.DbSet<TUserSpecimen> TUserSpecimen { get; set; } // tUserSpecimens
        System.Data.Entity.DbSet<TUserSpecimenCode> TUserSpecimenCodes { get; set; } // tUserSpecimenCodes
        System.Data.Entity.DbSet<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults
        System.Data.Entity.DbSet<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults
        System.Data.Entity.DbSet<TUserTestResultComponent> TUserTestResultComponents { get; set; } // tUserTestResultComponents
        System.Data.Entity.DbSet<TUserVital> TUserVitals { get; set; } // tUserVitals
        System.Data.Entity.DbSet<TVisitType> TVisitTypes { get; set; } // tVisitTypes
        System.Data.Entity.DbSet<TXrefAllergensCode> TXrefAllergensCodes { get; set; } // tXrefAllergensCodes
        System.Data.Entity.DbSet<TXrefMedicationFormsCode> TXrefMedicationFormsCodes { get; set; } // tXrefMedicationFormsCodes
        System.Data.Entity.DbSet<TXrefMedicationRoutesCode> TXrefMedicationRoutesCodes { get; set; } // tXrefMedicationRoutesCodes
        System.Data.Entity.DbSet<TXrefReactionsCode> TXrefReactionsCodes { get; set; } // tXrefReactionsCodes
        System.Data.Entity.DbSet<TXrefReactionTypesCode> TXrefReactionTypesCodes { get; set; } // tXrefReactionTypesCodes
        System.Data.Entity.DbSet<TXrefUserAllergiesCode> TXrefUserAllergiesCodes { get; set; } // tXrefUserAllergiesCodes
        System.Data.Entity.DbSet<TXrefUserCarePlansCode> TXrefUserCarePlansCodes { get; set; } // tXrefUserCarePlansCodes
        System.Data.Entity.DbSet<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; } // tXrefUserDietNutrients
        System.Data.Entity.DbSet<TXrefUserEncountersCode> TXrefUserEncountersCodes { get; set; } // tXrefUserEncountersCodes
        System.Data.Entity.DbSet<TXrefUserEncountersPrescription> TXrefUserEncountersPrescriptions { get; set; } // tXrefUserEncountersPrescriptions
        System.Data.Entity.DbSet<TXrefUserEncountersProblem> TXrefUserEncountersProblems { get; set; } // tXrefUserEncountersProblems
        System.Data.Entity.DbSet<TXrefUserEncountersVital> TXrefUserEncountersVitals { get; set; } // tXrefUserEncountersVitals
        System.Data.Entity.DbSet<TXrefUserFunctionalStatusesCode> TXrefUserFunctionalStatusesCodes { get; set; } // tXrefUserFunctionalStatusesCodes
        System.Data.Entity.DbSet<TXrefUserImmunizationsCode> TXrefUserImmunizationsCodes { get; set; } // tXrefUserImmunizationsCodes
        System.Data.Entity.DbSet<TXrefUserInstructionsCode> TXrefUserInstructionsCodes { get; set; } // tXrefUserInstructionsCodes
        System.Data.Entity.DbSet<TXrefUserPrescriptionsCode> TXrefUserPrescriptionsCodes { get; set; } // tXrefUserPrescriptionsCodes
        System.Data.Entity.DbSet<TXrefUserProblemsCode> TXrefUserProblemsCodes { get; set; } // tXrefUserProblemsCodes
        System.Data.Entity.DbSet<TXrefUserProceduresCode> TXrefUserProceduresCodes { get; set; } // tXrefUserProceduresCodes
        System.Data.Entity.DbSet<TXrefUserShareSettingsPurpos> TXrefUserShareSettingsPurpos { get; set; } // tXrefUserSHARESettingsPurposes
        System.Data.Entity.DbSet<TXrefUserSnpProbesSnpAvailability> TXrefUserSnpProbesSnpAvailabilities { get; set; } // tXrefUserSNPProbesSNPAvailability
        System.Data.Entity.DbSet<TXrefUserSourceServiceDevice> TXrefUserSourceServiceDevices { get; set; } // tXrefUserSourceServiceDevices
        System.Data.Entity.DbSet<TXrefUserTestResultComponentsCode> TXrefUserTestResultComponentsCodes { get; set; } // tXrefUserTestResultComponentsCodes
        System.Data.Entity.DbSet<TXrefUserTestResultRecipientsProvider> TXrefUserTestResultRecipientsProviders { get; set; } // tXrefUserTestResultRecipientsProviders
        System.Data.Entity.DbSet<TXrefUserTestResultsCode> TXrefUserTestResultsCodes { get; set; } // tXrefUserTestResultsCodes
        System.Data.Entity.DbSet<TXrefUserVitalsCode> TXrefUserVitalsCodes { get; set; } // tXrefUserVitalsCodes

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class SFCUserDataContext : System.Data.Entity.DbContext, ISFCUserDataContext
    {
        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; } // sysdiagrams
        public System.Data.Entity.DbSet<TActivity> TActivities { get; set; } // tActivities
        public System.Data.Entity.DbSet<TAllergen> TAllergens { get; set; } // tAllergens
        public System.Data.Entity.DbSet<TAllergySeverity> TAllergySeverities { get; set; } // tAllergySeverities
        public System.Data.Entity.DbSet<TAllergyStatus> TAllergyStatus { get; set; } // tAllergyStatuses
        public System.Data.Entity.DbSet<TCode> TCodes { get; set; } // tCodes
        public System.Data.Entity.DbSet<TCredential> TCredentials { get; set; } // tCredentials
        public System.Data.Entity.DbSet<TDietCategory> TDietCategories { get; set; } // tDietCategory
        public System.Data.Entity.DbSet<TGeneticTrait> TGeneticTraits { get; set; } // tGeneticTraits
        public System.Data.Entity.DbSet<TInstructionType> TInstructionTypes { get; set; } // tInstructionTypes
        public System.Data.Entity.DbSet<TMedicationForm> TMedicationForms { get; set; } // tMedicationForms
        public System.Data.Entity.DbSet<TMedicationRoute> TMedicationRoutes { get; set; } // tMedicationRoutes
        public System.Data.Entity.DbSet<TNutrient> TNutrients { get; set; } // tNutrients
        public System.Data.Entity.DbSet<TNutrientType> TNutrientTypes { get; set; } // tNutrientType
        public System.Data.Entity.DbSet<TOrderType> TOrderTypes { get; set; } // tOrderTypes
        public System.Data.Entity.DbSet<TOrganization> TOrganizations { get; set; } // tOrganizations
        public System.Data.Entity.DbSet<TPharmacy> TPharmacies { get; set; } // tPharmacies
        public System.Data.Entity.DbSet<TProvider> TProviders { get; set; } // tProviders
        public System.Data.Entity.DbSet<TProviderPhoneNumber> TProviderPhoneNumbers { get; set; } // tProviderPhoneNumbers
        public System.Data.Entity.DbSet<TReaction> TReactions { get; set; } // tReactions
        public System.Data.Entity.DbSet<TReactionType> TReactionTypes { get; set; } // tReactionTypes
        public System.Data.Entity.DbSet<TSharePurpos> TSharePurpos { get; set; } // tSHAREPurposes
        public System.Data.Entity.DbSet<TShareSetting> TShareSettings { get; set; } // tSHARESettings
        public System.Data.Entity.DbSet<TSnpAvailability> TSnpAvailabilities { get; set; } // tSNPAvailability
        public System.Data.Entity.DbSet<TSource> TSources { get; set; } // tSources
        public System.Data.Entity.DbSet<TSourceOrganization> TSourceOrganizations { get; set; } // tSourceOrganizations
        public System.Data.Entity.DbSet<TSourceService> TSourceServices { get; set; } // tSourceServices
        public System.Data.Entity.DbSet<TSourceServiceDevice> TSourceServiceDevices { get; set; } // tSourceServiceDevices
        public System.Data.Entity.DbSet<TSystemStatus> TSystemStatus { get; set; } // tSystemStatuses
        public System.Data.Entity.DbSet<TTestResultStatus> TTestResultStatus { get; set; } // tTestResultStatuses
        public System.Data.Entity.DbSet<TUnitsOfMeasure> TUnitsOfMeasures { get; set; } // tUnitsOfMeasure
        public System.Data.Entity.DbSet<TUomRelationship> TUomRelationships { get; set; } // tUOMRelationships
        public System.Data.Entity.DbSet<TUserActivity> TUserActivities { get; set; } // tUserActivities
        public System.Data.Entity.DbSet<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies
        public System.Data.Entity.DbSet<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans
        public System.Data.Entity.DbSet<TUserCarePlanSpecialty> TUserCarePlanSpecialties { get; set; } // tUserCarePlanSpecialties
        public System.Data.Entity.DbSet<TUserCarePlanType> TUserCarePlanTypes { get; set; } // tUserCarePlanTypes
        public System.Data.Entity.DbSet<TUserDataAudit> TUserDataAudits { get; set; } // tUserDataAudit
        public System.Data.Entity.DbSet<TUserDataAuditObject> TUserDataAuditObjects { get; set; } // tUserDataAuditObjects
        public System.Data.Entity.DbSet<TUserDataErrLog> TUserDataErrLogs { get; set; } // tUserDataErrLog
        public System.Data.Entity.DbSet<TUserDiet> TUserDiets { get; set; } // tUserDiet
        public System.Data.Entity.DbSet<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters
        public System.Data.Entity.DbSet<TUserEncounterReason> TUserEncounterReasons { get; set; } // tUserEncounterReasons
        public System.Data.Entity.DbSet<TUserEvent> TUserEvents { get; set; } // tUserEvents
        public System.Data.Entity.DbSet<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses
        public System.Data.Entity.DbSet<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits
        public System.Data.Entity.DbSet<TUserId> TUserIds { get; set; } // tUserIDs
        public System.Data.Entity.DbSet<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations
        public System.Data.Entity.DbSet<TUserImmunizationsDate> TUserImmunizationsDates { get; set; } // tUserImmunizationsDates
        public System.Data.Entity.DbSet<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions
        public System.Data.Entity.DbSet<TUserLocation> TUserLocations { get; set; } // tUserLocations
        public System.Data.Entity.DbSet<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives
        public System.Data.Entity.DbSet<TUserNarrativeEntry> TUserNarrativeEntries { get; set; } // tUserNarrativeEntries
        public System.Data.Entity.DbSet<TUserOrder> TUserOrders { get; set; } // tUserOrders
        public System.Data.Entity.DbSet<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions
        public System.Data.Entity.DbSet<TUserProblem> TUserProblems { get; set; } // tUserProblems
        public System.Data.Entity.DbSet<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures
        public System.Data.Entity.DbSet<TUserProcedureDevice> TUserProcedureDevices { get; set; } // tUserProcedureDevices
        public System.Data.Entity.DbSet<TUserProcedureDeviceCode> TUserProcedureDeviceCodes { get; set; } // tUserProcedureDeviceCodes
        public System.Data.Entity.DbSet<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings
        public System.Data.Entity.DbSet<TUserSleep> TUserSleeps { get; set; } // tUserSleep
        public System.Data.Entity.DbSet<TUserSleepDetail> TUserSleepDetails { get; set; } // tUserSleepDetails
        public System.Data.Entity.DbSet<TUserSnpProbe> TUserSnpProbes { get; set; } // tUserSNPProbes
        public System.Data.Entity.DbSet<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices
        public System.Data.Entity.DbSet<TUserSourceServiceStatus> TUserSourceServiceStatus { get; set; } // tUserSourceServiceStatuses
        public System.Data.Entity.DbSet<TUserSpecimen> TUserSpecimen { get; set; } // tUserSpecimens
        public System.Data.Entity.DbSet<TUserSpecimenCode> TUserSpecimenCodes { get; set; } // tUserSpecimenCodes
        public System.Data.Entity.DbSet<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults
        public System.Data.Entity.DbSet<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults
        public System.Data.Entity.DbSet<TUserTestResultComponent> TUserTestResultComponents { get; set; } // tUserTestResultComponents
        public System.Data.Entity.DbSet<TUserVital> TUserVitals { get; set; } // tUserVitals
        public System.Data.Entity.DbSet<TVisitType> TVisitTypes { get; set; } // tVisitTypes
        public System.Data.Entity.DbSet<TXrefAllergensCode> TXrefAllergensCodes { get; set; } // tXrefAllergensCodes
        public System.Data.Entity.DbSet<TXrefMedicationFormsCode> TXrefMedicationFormsCodes { get; set; } // tXrefMedicationFormsCodes
        public System.Data.Entity.DbSet<TXrefMedicationRoutesCode> TXrefMedicationRoutesCodes { get; set; } // tXrefMedicationRoutesCodes
        public System.Data.Entity.DbSet<TXrefReactionsCode> TXrefReactionsCodes { get; set; } // tXrefReactionsCodes
        public System.Data.Entity.DbSet<TXrefReactionTypesCode> TXrefReactionTypesCodes { get; set; } // tXrefReactionTypesCodes
        public System.Data.Entity.DbSet<TXrefUserAllergiesCode> TXrefUserAllergiesCodes { get; set; } // tXrefUserAllergiesCodes
        public System.Data.Entity.DbSet<TXrefUserCarePlansCode> TXrefUserCarePlansCodes { get; set; } // tXrefUserCarePlansCodes
        public System.Data.Entity.DbSet<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; } // tXrefUserDietNutrients
        public System.Data.Entity.DbSet<TXrefUserEncountersCode> TXrefUserEncountersCodes { get; set; } // tXrefUserEncountersCodes
        public System.Data.Entity.DbSet<TXrefUserEncountersPrescription> TXrefUserEncountersPrescriptions { get; set; } // tXrefUserEncountersPrescriptions
        public System.Data.Entity.DbSet<TXrefUserEncountersProblem> TXrefUserEncountersProblems { get; set; } // tXrefUserEncountersProblems
        public System.Data.Entity.DbSet<TXrefUserEncountersVital> TXrefUserEncountersVitals { get; set; } // tXrefUserEncountersVitals
        public System.Data.Entity.DbSet<TXrefUserFunctionalStatusesCode> TXrefUserFunctionalStatusesCodes { get; set; } // tXrefUserFunctionalStatusesCodes
        public System.Data.Entity.DbSet<TXrefUserImmunizationsCode> TXrefUserImmunizationsCodes { get; set; } // tXrefUserImmunizationsCodes
        public System.Data.Entity.DbSet<TXrefUserInstructionsCode> TXrefUserInstructionsCodes { get; set; } // tXrefUserInstructionsCodes
        public System.Data.Entity.DbSet<TXrefUserPrescriptionsCode> TXrefUserPrescriptionsCodes { get; set; } // tXrefUserPrescriptionsCodes
        public System.Data.Entity.DbSet<TXrefUserProblemsCode> TXrefUserProblemsCodes { get; set; } // tXrefUserProblemsCodes
        public System.Data.Entity.DbSet<TXrefUserProceduresCode> TXrefUserProceduresCodes { get; set; } // tXrefUserProceduresCodes
        public System.Data.Entity.DbSet<TXrefUserShareSettingsPurpos> TXrefUserShareSettingsPurpos { get; set; } // tXrefUserSHARESettingsPurposes
        public System.Data.Entity.DbSet<TXrefUserSnpProbesSnpAvailability> TXrefUserSnpProbesSnpAvailabilities { get; set; } // tXrefUserSNPProbesSNPAvailability
        public System.Data.Entity.DbSet<TXrefUserSourceServiceDevice> TXrefUserSourceServiceDevices { get; set; } // tXrefUserSourceServiceDevices
        public System.Data.Entity.DbSet<TXrefUserTestResultComponentsCode> TXrefUserTestResultComponentsCodes { get; set; } // tXrefUserTestResultComponentsCodes
        public System.Data.Entity.DbSet<TXrefUserTestResultRecipientsProvider> TXrefUserTestResultRecipientsProviders { get; set; } // tXrefUserTestResultRecipientsProviders
        public System.Data.Entity.DbSet<TXrefUserTestResultsCode> TXrefUserTestResultsCodes { get; set; } // tXrefUserTestResultsCodes
        public System.Data.Entity.DbSet<TXrefUserVitalsCode> TXrefUserVitalsCodes { get; set; } // tXrefUserVitalsCodes

        static SFCUserDataContext()
        {
            System.Data.Entity.Database.SetInitializer<SFCUserDataContext>(null);
        }

        public SFCUserDataContext()
            : base("Name=SFCUserDataConn")
        {
        }

        public SFCUserDataContext(string connectionString)
            : base(connectionString)
        {
        }

        public SFCUserDataContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public SFCUserDataContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public SFCUserDataContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new SysdiagramConfiguration());
            modelBuilder.Configurations.Add(new TActivityConfiguration());
            modelBuilder.Configurations.Add(new TAllergenConfiguration());
            modelBuilder.Configurations.Add(new TAllergySeverityConfiguration());
            modelBuilder.Configurations.Add(new TAllergyStatusConfiguration());
            modelBuilder.Configurations.Add(new TCodeConfiguration());
            modelBuilder.Configurations.Add(new TCredentialConfiguration());
            modelBuilder.Configurations.Add(new TDietCategoryConfiguration());
            modelBuilder.Configurations.Add(new TGeneticTraitConfiguration());
            modelBuilder.Configurations.Add(new TInstructionTypeConfiguration());
            modelBuilder.Configurations.Add(new TMedicationFormConfiguration());
            modelBuilder.Configurations.Add(new TMedicationRouteConfiguration());
            modelBuilder.Configurations.Add(new TNutrientConfiguration());
            modelBuilder.Configurations.Add(new TNutrientTypeConfiguration());
            modelBuilder.Configurations.Add(new TOrderTypeConfiguration());
            modelBuilder.Configurations.Add(new TOrganizationConfiguration());
            modelBuilder.Configurations.Add(new TPharmacyConfiguration());
            modelBuilder.Configurations.Add(new TProviderConfiguration());
            modelBuilder.Configurations.Add(new TProviderPhoneNumberConfiguration());
            modelBuilder.Configurations.Add(new TReactionConfiguration());
            modelBuilder.Configurations.Add(new TReactionTypeConfiguration());
            modelBuilder.Configurations.Add(new TSharePurposConfiguration());
            modelBuilder.Configurations.Add(new TShareSettingConfiguration());
            modelBuilder.Configurations.Add(new TSnpAvailabilityConfiguration());
            modelBuilder.Configurations.Add(new TSourceConfiguration());
            modelBuilder.Configurations.Add(new TSourceOrganizationConfiguration());
            modelBuilder.Configurations.Add(new TSourceServiceConfiguration());
            modelBuilder.Configurations.Add(new TSourceServiceDeviceConfiguration());
            modelBuilder.Configurations.Add(new TSystemStatusConfiguration());
            modelBuilder.Configurations.Add(new TTestResultStatusConfiguration());
            modelBuilder.Configurations.Add(new TUnitsOfMeasureConfiguration());
            modelBuilder.Configurations.Add(new TUomRelationshipConfiguration());
            modelBuilder.Configurations.Add(new TUserActivityConfiguration());
            modelBuilder.Configurations.Add(new TUserAllergyConfiguration());
            modelBuilder.Configurations.Add(new TUserCarePlanConfiguration());
            modelBuilder.Configurations.Add(new TUserCarePlanSpecialtyConfiguration());
            modelBuilder.Configurations.Add(new TUserCarePlanTypeConfiguration());
            modelBuilder.Configurations.Add(new TUserDataAuditConfiguration());
            modelBuilder.Configurations.Add(new TUserDataAuditObjectConfiguration());
            modelBuilder.Configurations.Add(new TUserDataErrLogConfiguration());
            modelBuilder.Configurations.Add(new TUserDietConfiguration());
            modelBuilder.Configurations.Add(new TUserEncounterConfiguration());
            modelBuilder.Configurations.Add(new TUserEncounterReasonConfiguration());
            modelBuilder.Configurations.Add(new TUserEventConfiguration());
            modelBuilder.Configurations.Add(new TUserFunctionalStatusConfiguration());
            modelBuilder.Configurations.Add(new TUserGeneticTraitConfiguration());
            modelBuilder.Configurations.Add(new TUserIdConfiguration());
            modelBuilder.Configurations.Add(new TUserImmunizationConfiguration());
            modelBuilder.Configurations.Add(new TUserImmunizationsDateConfiguration());
            modelBuilder.Configurations.Add(new TUserInstructionConfiguration());
            modelBuilder.Configurations.Add(new TUserLocationConfiguration());
            modelBuilder.Configurations.Add(new TUserNarrativeConfiguration());
            modelBuilder.Configurations.Add(new TUserNarrativeEntryConfiguration());
            modelBuilder.Configurations.Add(new TUserOrderConfiguration());
            modelBuilder.Configurations.Add(new TUserPrescriptionConfiguration());
            modelBuilder.Configurations.Add(new TUserProblemConfiguration());
            modelBuilder.Configurations.Add(new TUserProcedureConfiguration());
            modelBuilder.Configurations.Add(new TUserProcedureDeviceConfiguration());
            modelBuilder.Configurations.Add(new TUserProcedureDeviceCodeConfiguration());
            modelBuilder.Configurations.Add(new TUserShareSettingConfiguration());
            modelBuilder.Configurations.Add(new TUserSleepConfiguration());
            modelBuilder.Configurations.Add(new TUserSleepDetailConfiguration());
            modelBuilder.Configurations.Add(new TUserSnpProbeConfiguration());
            modelBuilder.Configurations.Add(new TUserSourceServiceConfiguration());
            modelBuilder.Configurations.Add(new TUserSourceServiceStatusConfiguration());
            modelBuilder.Configurations.Add(new TUserSpecimenConfiguration());
            modelBuilder.Configurations.Add(new TUserSpecimenCodeConfiguration());
            modelBuilder.Configurations.Add(new TUserSurveyResultConfiguration());
            modelBuilder.Configurations.Add(new TUserTestResultConfiguration());
            modelBuilder.Configurations.Add(new TUserTestResultComponentConfiguration());
            modelBuilder.Configurations.Add(new TUserVitalConfiguration());
            modelBuilder.Configurations.Add(new TVisitTypeConfiguration());
            modelBuilder.Configurations.Add(new TXrefAllergensCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefMedicationFormsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefMedicationRoutesCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefReactionsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefReactionTypesCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserAllergiesCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserCarePlansCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserDietNutrientConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserEncountersCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserEncountersPrescriptionConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserEncountersProblemConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserEncountersVitalConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserFunctionalStatusesCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserImmunizationsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserInstructionsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserPrescriptionsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserProblemsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserProceduresCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserShareSettingsPurposConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserSnpProbesSnpAvailabilityConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserSourceServiceDeviceConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserTestResultComponentsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserTestResultRecipientsProviderConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserTestResultsCodeConfiguration());
            modelBuilder.Configurations.Add(new TXrefUserVitalsCodeConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new SysdiagramConfiguration(schema));
            modelBuilder.Configurations.Add(new TActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new TAllergenConfiguration(schema));
            modelBuilder.Configurations.Add(new TAllergySeverityConfiguration(schema));
            modelBuilder.Configurations.Add(new TAllergyStatusConfiguration(schema));
            modelBuilder.Configurations.Add(new TCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TCredentialConfiguration(schema));
            modelBuilder.Configurations.Add(new TDietCategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new TGeneticTraitConfiguration(schema));
            modelBuilder.Configurations.Add(new TInstructionTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TMedicationFormConfiguration(schema));
            modelBuilder.Configurations.Add(new TMedicationRouteConfiguration(schema));
            modelBuilder.Configurations.Add(new TNutrientConfiguration(schema));
            modelBuilder.Configurations.Add(new TNutrientTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TOrderTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TOrganizationConfiguration(schema));
            modelBuilder.Configurations.Add(new TPharmacyConfiguration(schema));
            modelBuilder.Configurations.Add(new TProviderConfiguration(schema));
            modelBuilder.Configurations.Add(new TProviderPhoneNumberConfiguration(schema));
            modelBuilder.Configurations.Add(new TReactionConfiguration(schema));
            modelBuilder.Configurations.Add(new TReactionTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TSharePurposConfiguration(schema));
            modelBuilder.Configurations.Add(new TShareSettingConfiguration(schema));
            modelBuilder.Configurations.Add(new TSnpAvailabilityConfiguration(schema));
            modelBuilder.Configurations.Add(new TSourceConfiguration(schema));
            modelBuilder.Configurations.Add(new TSourceOrganizationConfiguration(schema));
            modelBuilder.Configurations.Add(new TSourceServiceConfiguration(schema));
            modelBuilder.Configurations.Add(new TSourceServiceDeviceConfiguration(schema));
            modelBuilder.Configurations.Add(new TSystemStatusConfiguration(schema));
            modelBuilder.Configurations.Add(new TTestResultStatusConfiguration(schema));
            modelBuilder.Configurations.Add(new TUnitsOfMeasureConfiguration(schema));
            modelBuilder.Configurations.Add(new TUomRelationshipConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserActivityConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserAllergyConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserCarePlanConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserCarePlanSpecialtyConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserCarePlanTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserDataAuditConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserDataAuditObjectConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserDataErrLogConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserDietConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserEncounterConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserEncounterReasonConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserEventConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserFunctionalStatusConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserGeneticTraitConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserIdConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserImmunizationConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserImmunizationsDateConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserInstructionConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserNarrativeConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserNarrativeEntryConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserOrderConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserPrescriptionConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserProblemConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserProcedureConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserProcedureDeviceConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserProcedureDeviceCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserShareSettingConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSleepConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSleepDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSnpProbeConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSourceServiceConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSourceServiceStatusConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSpecimenConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSpecimenCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserSurveyResultConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserTestResultConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserTestResultComponentConfiguration(schema));
            modelBuilder.Configurations.Add(new TUserVitalConfiguration(schema));
            modelBuilder.Configurations.Add(new TVisitTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefAllergensCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefMedicationFormsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefMedicationRoutesCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefReactionsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefReactionTypesCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserAllergiesCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserCarePlansCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserDietNutrientConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserEncountersCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserEncountersPrescriptionConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserEncountersProblemConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserEncountersVitalConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserFunctionalStatusesCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserImmunizationsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserInstructionsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserPrescriptionsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserProblemsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserProceduresCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserShareSettingsPurposConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserSnpProbesSnpAvailabilityConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserSourceServiceDeviceConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserTestResultComponentsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserTestResultRecipientsProviderConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserTestResultsCodeConfiguration(schema));
            modelBuilder.Configurations.Add(new TXrefUserVitalsCodeConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Fake Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class FakeSFCUserDataContext : ISFCUserDataContext
    {
        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; }
        public System.Data.Entity.DbSet<TActivity> TActivities { get; set; }
        public System.Data.Entity.DbSet<TAllergen> TAllergens { get; set; }
        public System.Data.Entity.DbSet<TAllergySeverity> TAllergySeverities { get; set; }
        public System.Data.Entity.DbSet<TAllergyStatus> TAllergyStatus { get; set; }
        public System.Data.Entity.DbSet<TCode> TCodes { get; set; }
        public System.Data.Entity.DbSet<TCredential> TCredentials { get; set; }
        public System.Data.Entity.DbSet<TDietCategory> TDietCategories { get; set; }
        public System.Data.Entity.DbSet<TGeneticTrait> TGeneticTraits { get; set; }
        public System.Data.Entity.DbSet<TInstructionType> TInstructionTypes { get; set; }
        public System.Data.Entity.DbSet<TMedicationForm> TMedicationForms { get; set; }
        public System.Data.Entity.DbSet<TMedicationRoute> TMedicationRoutes { get; set; }
        public System.Data.Entity.DbSet<TNutrient> TNutrients { get; set; }
        public System.Data.Entity.DbSet<TNutrientType> TNutrientTypes { get; set; }
        public System.Data.Entity.DbSet<TOrderType> TOrderTypes { get; set; }
        public System.Data.Entity.DbSet<TOrganization> TOrganizations { get; set; }
        public System.Data.Entity.DbSet<TPharmacy> TPharmacies { get; set; }
        public System.Data.Entity.DbSet<TProvider> TProviders { get; set; }
        public System.Data.Entity.DbSet<TProviderPhoneNumber> TProviderPhoneNumbers { get; set; }
        public System.Data.Entity.DbSet<TReaction> TReactions { get; set; }
        public System.Data.Entity.DbSet<TReactionType> TReactionTypes { get; set; }
        public System.Data.Entity.DbSet<TSharePurpos> TSharePurpos { get; set; }
        public System.Data.Entity.DbSet<TShareSetting> TShareSettings { get; set; }
        public System.Data.Entity.DbSet<TSnpAvailability> TSnpAvailabilities { get; set; }
        public System.Data.Entity.DbSet<TSource> TSources { get; set; }
        public System.Data.Entity.DbSet<TSourceOrganization> TSourceOrganizations { get; set; }
        public System.Data.Entity.DbSet<TSourceService> TSourceServices { get; set; }
        public System.Data.Entity.DbSet<TSourceServiceDevice> TSourceServiceDevices { get; set; }
        public System.Data.Entity.DbSet<TSystemStatus> TSystemStatus { get; set; }
        public System.Data.Entity.DbSet<TTestResultStatus> TTestResultStatus { get; set; }
        public System.Data.Entity.DbSet<TUnitsOfMeasure> TUnitsOfMeasures { get; set; }
        public System.Data.Entity.DbSet<TUomRelationship> TUomRelationships { get; set; }
        public System.Data.Entity.DbSet<TUserActivity> TUserActivities { get; set; }
        public System.Data.Entity.DbSet<TUserAllergy> TUserAllergies { get; set; }
        public System.Data.Entity.DbSet<TUserCarePlan> TUserCarePlans { get; set; }
        public System.Data.Entity.DbSet<TUserCarePlanSpecialty> TUserCarePlanSpecialties { get; set; }
        public System.Data.Entity.DbSet<TUserCarePlanType> TUserCarePlanTypes { get; set; }
        public System.Data.Entity.DbSet<TUserDataAudit> TUserDataAudits { get; set; }
        public System.Data.Entity.DbSet<TUserDataAuditObject> TUserDataAuditObjects { get; set; }
        public System.Data.Entity.DbSet<TUserDataErrLog> TUserDataErrLogs { get; set; }
        public System.Data.Entity.DbSet<TUserDiet> TUserDiets { get; set; }
        public System.Data.Entity.DbSet<TUserEncounter> TUserEncounters { get; set; }
        public System.Data.Entity.DbSet<TUserEncounterReason> TUserEncounterReasons { get; set; }
        public System.Data.Entity.DbSet<TUserEvent> TUserEvents { get; set; }
        public System.Data.Entity.DbSet<TUserFunctionalStatus> TUserFunctionalStatus { get; set; }
        public System.Data.Entity.DbSet<TUserGeneticTrait> TUserGeneticTraits { get; set; }
        public System.Data.Entity.DbSet<TUserId> TUserIds { get; set; }
        public System.Data.Entity.DbSet<TUserImmunization> TUserImmunizations { get; set; }
        public System.Data.Entity.DbSet<TUserImmunizationsDate> TUserImmunizationsDates { get; set; }
        public System.Data.Entity.DbSet<TUserInstruction> TUserInstructions { get; set; }
        public System.Data.Entity.DbSet<TUserLocation> TUserLocations { get; set; }
        public System.Data.Entity.DbSet<TUserNarrative> TUserNarratives { get; set; }
        public System.Data.Entity.DbSet<TUserNarrativeEntry> TUserNarrativeEntries { get; set; }
        public System.Data.Entity.DbSet<TUserOrder> TUserOrders { get; set; }
        public System.Data.Entity.DbSet<TUserPrescription> TUserPrescriptions { get; set; }
        public System.Data.Entity.DbSet<TUserProblem> TUserProblems { get; set; }
        public System.Data.Entity.DbSet<TUserProcedure> TUserProcedures { get; set; }
        public System.Data.Entity.DbSet<TUserProcedureDevice> TUserProcedureDevices { get; set; }
        public System.Data.Entity.DbSet<TUserProcedureDeviceCode> TUserProcedureDeviceCodes { get; set; }
        public System.Data.Entity.DbSet<TUserShareSetting> TUserShareSettings { get; set; }
        public System.Data.Entity.DbSet<TUserSleep> TUserSleeps { get; set; }
        public System.Data.Entity.DbSet<TUserSleepDetail> TUserSleepDetails { get; set; }
        public System.Data.Entity.DbSet<TUserSnpProbe> TUserSnpProbes { get; set; }
        public System.Data.Entity.DbSet<TUserSourceService> TUserSourceServices { get; set; }
        public System.Data.Entity.DbSet<TUserSourceServiceStatus> TUserSourceServiceStatus { get; set; }
        public System.Data.Entity.DbSet<TUserSpecimen> TUserSpecimen { get; set; }
        public System.Data.Entity.DbSet<TUserSpecimenCode> TUserSpecimenCodes { get; set; }
        public System.Data.Entity.DbSet<TUserSurveyResult> TUserSurveyResults { get; set; }
        public System.Data.Entity.DbSet<TUserTestResult> TUserTestResults { get; set; }
        public System.Data.Entity.DbSet<TUserTestResultComponent> TUserTestResultComponents { get; set; }
        public System.Data.Entity.DbSet<TUserVital> TUserVitals { get; set; }
        public System.Data.Entity.DbSet<TVisitType> TVisitTypes { get; set; }
        public System.Data.Entity.DbSet<TXrefAllergensCode> TXrefAllergensCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefMedicationFormsCode> TXrefMedicationFormsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefMedicationRoutesCode> TXrefMedicationRoutesCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefReactionsCode> TXrefReactionsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefReactionTypesCode> TXrefReactionTypesCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserAllergiesCode> TXrefUserAllergiesCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserCarePlansCode> TXrefUserCarePlansCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; }
        public System.Data.Entity.DbSet<TXrefUserEncountersCode> TXrefUserEncountersCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserEncountersPrescription> TXrefUserEncountersPrescriptions { get; set; }
        public System.Data.Entity.DbSet<TXrefUserEncountersProblem> TXrefUserEncountersProblems { get; set; }
        public System.Data.Entity.DbSet<TXrefUserEncountersVital> TXrefUserEncountersVitals { get; set; }
        public System.Data.Entity.DbSet<TXrefUserFunctionalStatusesCode> TXrefUserFunctionalStatusesCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserImmunizationsCode> TXrefUserImmunizationsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserInstructionsCode> TXrefUserInstructionsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserPrescriptionsCode> TXrefUserPrescriptionsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserProblemsCode> TXrefUserProblemsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserProceduresCode> TXrefUserProceduresCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserShareSettingsPurpos> TXrefUserShareSettingsPurpos { get; set; }
        public System.Data.Entity.DbSet<TXrefUserSnpProbesSnpAvailability> TXrefUserSnpProbesSnpAvailabilities { get; set; }
        public System.Data.Entity.DbSet<TXrefUserSourceServiceDevice> TXrefUserSourceServiceDevices { get; set; }
        public System.Data.Entity.DbSet<TXrefUserTestResultComponentsCode> TXrefUserTestResultComponentsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserTestResultRecipientsProvider> TXrefUserTestResultRecipientsProviders { get; set; }
        public System.Data.Entity.DbSet<TXrefUserTestResultsCode> TXrefUserTestResultsCodes { get; set; }
        public System.Data.Entity.DbSet<TXrefUserVitalsCode> TXrefUserVitalsCodes { get; set; }

        public FakeSFCUserDataContext()
        {
            Sysdiagrams = new FakeDbSet<Sysdiagram>("DiagramId");
            TActivities = new FakeDbSet<TActivity>("Id");
            TAllergens = new FakeDbSet<TAllergen>("Id");
            TAllergySeverities = new FakeDbSet<TAllergySeverity>("Id");
            TAllergyStatus = new FakeDbSet<TAllergyStatus>("Id");
            TCodes = new FakeDbSet<TCode>("Id");
            TCredentials = new FakeDbSet<TCredential>("Id");
            TDietCategories = new FakeDbSet<TDietCategory>("Id");
            TGeneticTraits = new FakeDbSet<TGeneticTrait>("Id");
            TInstructionTypes = new FakeDbSet<TInstructionType>("Id");
            TMedicationForms = new FakeDbSet<TMedicationForm>("Id");
            TMedicationRoutes = new FakeDbSet<TMedicationRoute>("Id");
            TNutrients = new FakeDbSet<TNutrient>("Id");
            TNutrientTypes = new FakeDbSet<TNutrientType>("Id");
            TOrderTypes = new FakeDbSet<TOrderType>("Id");
            TOrganizations = new FakeDbSet<TOrganization>("Id");
            TPharmacies = new FakeDbSet<TPharmacy>("Id");
            TProviders = new FakeDbSet<TProvider>("Id");
            TProviderPhoneNumbers = new FakeDbSet<TProviderPhoneNumber>("Id");
            TReactions = new FakeDbSet<TReaction>("Id");
            TReactionTypes = new FakeDbSet<TReactionType>("Id");
            TSharePurpos = new FakeDbSet<TSharePurpos>("Id");
            TShareSettings = new FakeDbSet<TShareSetting>("Id");
            TSnpAvailabilities = new FakeDbSet<TSnpAvailability>("Id");
            TSources = new FakeDbSet<TSource>("Id");
            TSourceOrganizations = new FakeDbSet<TSourceOrganization>("Id");
            TSourceServices = new FakeDbSet<TSourceService>("Id");
            TSourceServiceDevices = new FakeDbSet<TSourceServiceDevice>("Id");
            TSystemStatus = new FakeDbSet<TSystemStatus>("Id");
            TTestResultStatus = new FakeDbSet<TTestResultStatus>("Id");
            TUnitsOfMeasures = new FakeDbSet<TUnitsOfMeasure>("Id");
            TUomRelationships = new FakeDbSet<TUomRelationship>("Id");
            TUserActivities = new FakeDbSet<TUserActivity>("Id");
            TUserAllergies = new FakeDbSet<TUserAllergy>("Id");
            TUserCarePlans = new FakeDbSet<TUserCarePlan>("Id");
            TUserCarePlanSpecialties = new FakeDbSet<TUserCarePlanSpecialty>("Id");
            TUserCarePlanTypes = new FakeDbSet<TUserCarePlanType>("Id");
            TUserDataAudits = new FakeDbSet<TUserDataAudit>("Id");
            TUserDataAuditObjects = new FakeDbSet<TUserDataAuditObject>("Id");
            TUserDataErrLogs = new FakeDbSet<TUserDataErrLog>("Id");
            TUserDiets = new FakeDbSet<TUserDiet>("Id");
            TUserEncounters = new FakeDbSet<TUserEncounter>("Id");
            TUserEncounterReasons = new FakeDbSet<TUserEncounterReason>("Id");
            TUserEvents = new FakeDbSet<TUserEvent>("Id");
            TUserFunctionalStatus = new FakeDbSet<TUserFunctionalStatus>("Id");
            TUserGeneticTraits = new FakeDbSet<TUserGeneticTrait>("Id");
            TUserIds = new FakeDbSet<TUserId>("UserId");
            TUserImmunizations = new FakeDbSet<TUserImmunization>("Id");
            TUserImmunizationsDates = new FakeDbSet<TUserImmunizationsDate>("Id");
            TUserInstructions = new FakeDbSet<TUserInstruction>("Id");
            TUserLocations = new FakeDbSet<TUserLocation>("Id");
            TUserNarratives = new FakeDbSet<TUserNarrative>("Id");
            TUserNarrativeEntries = new FakeDbSet<TUserNarrativeEntry>("Id");
            TUserOrders = new FakeDbSet<TUserOrder>("Id");
            TUserPrescriptions = new FakeDbSet<TUserPrescription>("Id");
            TUserProblems = new FakeDbSet<TUserProblem>("Id");
            TUserProcedures = new FakeDbSet<TUserProcedure>("Id");
            TUserProcedureDevices = new FakeDbSet<TUserProcedureDevice>("Id");
            TUserProcedureDeviceCodes = new FakeDbSet<TUserProcedureDeviceCode>("Id");
            TUserShareSettings = new FakeDbSet<TUserShareSetting>("Id");
            TUserSleeps = new FakeDbSet<TUserSleep>("Id");
            TUserSleepDetails = new FakeDbSet<TUserSleepDetail>("Id", "UserSleepId", "CreateDateTime");
            TUserSnpProbes = new FakeDbSet<TUserSnpProbe>("Id");
            TUserSourceServices = new FakeDbSet<TUserSourceService>("Id");
            TUserSourceServiceStatus = new FakeDbSet<TUserSourceServiceStatus>("Id");
            TUserSpecimen = new FakeDbSet<TUserSpecimen>("Id");
            TUserSpecimenCodes = new FakeDbSet<TUserSpecimenCode>("Id");
            TUserSurveyResults = new FakeDbSet<TUserSurveyResult>("Id");
            TUserTestResults = new FakeDbSet<TUserTestResult>("Id");
            TUserTestResultComponents = new FakeDbSet<TUserTestResultComponent>("Id");
            TUserVitals = new FakeDbSet<TUserVital>("Id");
            TVisitTypes = new FakeDbSet<TVisitType>("Id");
            TXrefAllergensCodes = new FakeDbSet<TXrefAllergensCode>("Id");
            TXrefMedicationFormsCodes = new FakeDbSet<TXrefMedicationFormsCode>("Id");
            TXrefMedicationRoutesCodes = new FakeDbSet<TXrefMedicationRoutesCode>("Id");
            TXrefReactionsCodes = new FakeDbSet<TXrefReactionsCode>("Id");
            TXrefReactionTypesCodes = new FakeDbSet<TXrefReactionTypesCode>("Id");
            TXrefUserAllergiesCodes = new FakeDbSet<TXrefUserAllergiesCode>("Id");
            TXrefUserCarePlansCodes = new FakeDbSet<TXrefUserCarePlansCode>("Id");
            TXrefUserDietNutrients = new FakeDbSet<TXrefUserDietNutrient>("Id");
            TXrefUserEncountersCodes = new FakeDbSet<TXrefUserEncountersCode>("Id");
            TXrefUserEncountersPrescriptions = new FakeDbSet<TXrefUserEncountersPrescription>("Id");
            TXrefUserEncountersProblems = new FakeDbSet<TXrefUserEncountersProblem>("Id");
            TXrefUserEncountersVitals = new FakeDbSet<TXrefUserEncountersVital>("Id");
            TXrefUserFunctionalStatusesCodes = new FakeDbSet<TXrefUserFunctionalStatusesCode>("Id");
            TXrefUserImmunizationsCodes = new FakeDbSet<TXrefUserImmunizationsCode>("Id");
            TXrefUserInstructionsCodes = new FakeDbSet<TXrefUserInstructionsCode>("Id");
            TXrefUserPrescriptionsCodes = new FakeDbSet<TXrefUserPrescriptionsCode>("Id");
            TXrefUserProblemsCodes = new FakeDbSet<TXrefUserProblemsCode>("Id");
            TXrefUserProceduresCodes = new FakeDbSet<TXrefUserProceduresCode>("Id");
            TXrefUserShareSettingsPurpos = new FakeDbSet<TXrefUserShareSettingsPurpos>("Id");
            TXrefUserSnpProbesSnpAvailabilities = new FakeDbSet<TXrefUserSnpProbesSnpAvailability>("Id");
            TXrefUserSourceServiceDevices = new FakeDbSet<TXrefUserSourceServiceDevice>("Id");
            TXrefUserTestResultComponentsCodes = new FakeDbSet<TXrefUserTestResultComponentsCode>("Id");
            TXrefUserTestResultRecipientsProviders = new FakeDbSet<TXrefUserTestResultRecipientsProvider>("Id");
            TXrefUserTestResultsCodes = new FakeDbSet<TXrefUserTestResultsCode>("Id");
            TXrefUserVitalsCodes = new FakeDbSet<TXrefUserVitalsCode>("Id");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }
    }

    // ************************************************************************
    // Fake DbSet
    // Implementing Find:
    //      The Find method is difficult to implement in a generic fashion. If
    //      you need to test code that makes use of the Find method it is
    //      easiest to create a test DbSet for each of the entity types that
    //      need to support find. You can then write logic to find that
    //      particular type of entity, as shown below:
    //      public class FakeBlogDbSet : FakeDbSet<Blog>
    //      {
    //          public override Blog Find(params object[] keyValues)
    //          {
    //              var id = (int) keyValues.Single();
    //              return this.SingleOrDefault(b => b.BlogId == id);
    //          }
    //      }
    //      Read more about it here: https://msdn.microsoft.com/en-us/data/dn314431.aspx
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class FakeDbSet<TEntity> : System.Data.Entity.DbSet<TEntity>, IQueryable, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity> where TEntity : class
    {
        private readonly System.Reflection.PropertyInfo[] _primaryKeys;
        private readonly System.Collections.ObjectModel.ObservableCollection<TEntity> _data;
        private readonly IQueryable _query;

        public FakeDbSet()
        {
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public FakeDbSet(params string[] primaryKeys)
        {
            _primaryKeys = typeof(TEntity).GetProperties().Where(x => primaryKeys.Contains(x.Name)).ToArray();
            _data = new System.Collections.ObjectModel.ObservableCollection<TEntity>();
            _query = _data.AsQueryable();
        }

        public override TEntity Find(params object[] keyValues)
        {
            if (_primaryKeys == null)
                throw new System.ArgumentException("No primary keys defined");
            if (keyValues.Length != _primaryKeys.Length)
                throw new System.ArgumentException("Incorrect number of keys passed to Find method");

            var keyQuery = this.AsQueryable();
            keyQuery = keyValues
                .Select((t, i) => i)
                .Aggregate(keyQuery,
                    (current, x) =>
                        current.Where(entity => _primaryKeys[x].GetValue(entity, null).Equals(keyValues[x])));

            return keyQuery.SingleOrDefault();
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(System.Threading.CancellationToken cancellationToken, params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues), cancellationToken);
        }

        public override System.Threading.Tasks.Task<TEntity> FindAsync(params object[] keyValues)
        {
            return System.Threading.Tasks.Task<TEntity>.Factory.StartNew(() => Find(keyValues));
        }

        public override System.Collections.Generic.IEnumerable<TEntity> AddRange(System.Collections.Generic.IEnumerable<TEntity> entities)
        {
            if (entities == null) throw new System.ArgumentNullException("entities");
            var items = entities.ToList();
            foreach (var entity in items)
            {
                _data.Add(entity);
            }
            return items;
        }

        public override TEntity Add(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Remove(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Remove(item);
            return item;
        }

        public override TEntity Attach(TEntity item)
        {
            if (item == null) throw new System.ArgumentNullException("item");
            _data.Add(item);
            return item;
        }

        public override TEntity Create()
        {
            return System.Activator.CreateInstance<TEntity>();
        }

        public override TDerivedEntity Create<TDerivedEntity>()
        {
            return System.Activator.CreateInstance<TDerivedEntity>();
        }

        public override System.Collections.ObjectModel.ObservableCollection<TEntity> Local
        {
            get { return _data; }
        }

        System.Type IQueryable.ElementType
        {
            get { return _query.ElementType; }
        }

        System.Linq.Expressions.Expression IQueryable.Expression
        {
            get { return _query.Expression; }
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<TEntity>(_query.Provider); }
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Collections.Generic.IEnumerator<TEntity> System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator()
        {
            return _data.GetEnumerator();
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator<TEntity> System.Data.Entity.Infrastructure.IDbAsyncEnumerable<TEntity>.GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<TEntity>(_data.GetEnumerator());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class FakeDbAsyncQueryProvider<TEntity> : System.Data.Entity.Infrastructure.IDbAsyncQueryProvider
    {
        private readonly IQueryProvider _inner;

        public FakeDbAsyncQueryProvider(IQueryProvider inner)
        {
            _inner = inner;
        }

        public IQueryable CreateQuery(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TEntity>(expression);
        }

        public IQueryable<TElement> CreateQuery<TElement>(System.Linq.Expressions.Expression expression)
        {
            return new FakeDbAsyncEnumerable<TElement>(expression);
        }

        public object Execute(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute(expression);
        }

        public TResult Execute<TResult>(System.Linq.Expressions.Expression expression)
        {
            return _inner.Execute<TResult>(expression);
        }

        public System.Threading.Tasks.Task<object> ExecuteAsync(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute(expression));
        }

        public System.Threading.Tasks.Task<TResult> ExecuteAsync<TResult>(System.Linq.Expressions.Expression expression, System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(Execute<TResult>(expression));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class FakeDbAsyncEnumerable<T> : EnumerableQuery<T>, System.Data.Entity.Infrastructure.IDbAsyncEnumerable<T>, IQueryable<T>
    {
        public FakeDbAsyncEnumerable(System.Collections.Generic.IEnumerable<T> enumerable)
            : base(enumerable)
        { }

        public FakeDbAsyncEnumerable(System.Linq.Expressions.Expression expression)
            : base(expression)
        { }

        public System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T> GetAsyncEnumerator()
        {
            return new FakeDbAsyncEnumerator<T>(this.AsEnumerable().GetEnumerator());
        }

        System.Data.Entity.Infrastructure.IDbAsyncEnumerator System.Data.Entity.Infrastructure.IDbAsyncEnumerable.GetAsyncEnumerator()
        {
            return GetAsyncEnumerator();
        }

        IQueryProvider IQueryable.Provider
        {
            get { return new FakeDbAsyncQueryProvider<T>(this); }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class FakeDbAsyncEnumerator<T> : System.Data.Entity.Infrastructure.IDbAsyncEnumerator<T>
    {
        private readonly System.Collections.Generic.IEnumerator<T> _inner;

        public FakeDbAsyncEnumerator(System.Collections.Generic.IEnumerator<T> inner)
        {
            _inner = inner;
        }

        public void Dispose()
        {
            _inner.Dispose();
        }

        public System.Threading.Tasks.Task<bool> MoveNextAsync(System.Threading.CancellationToken cancellationToken)
        {
            return System.Threading.Tasks.Task.FromResult(_inner.MoveNext());
        }

        public T Current
        {
            get { return _inner.Current; }
        }

        object System.Data.Entity.Infrastructure.IDbAsyncEnumerator.Current
        {
            get { return Current; }
        }
    }

    #endregion

    #region POCO classes

    // sysdiagrams
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class Sysdiagram
    {
        public string Name { get; set; } // name (length: 128)
        public int PrincipalId { get; set; } // principal_id
        public int DiagramId { get; set; } // diagram_id (Primary key)
        public int? Version { get; set; } // version
        public byte[] Definition { get; set; } // definition
    }

    // tActivities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TActivity
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserActivity> TUserActivities { get; set; } // tUserActivities.FK_tUserActivities_tActivities

        public TActivity()
        {
            CreateDateTime = System.DateTime.Now;
            TUserActivities = new System.Collections.Generic.List<TUserActivity>();
        }
    }

    // tAllergens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergen
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tAllergens
        public virtual System.Collections.Generic.ICollection<TXrefAllergensCode> TXrefAllergensCodes { get; set; } // tXrefAllergensCodes.FK_tXrefAllergensCodes_tAllergens

        public TAllergen()
        {
            CreateDateTime = System.DateTime.Now;
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TXrefAllergensCodes = new System.Collections.Generic.List<TXrefAllergensCode>();
        }
    }

    // tAllergySeverities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergySeverity
    {
        public int Id { get; set; } // ID (Primary key)
        public string Severity { get; set; } // Severity (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tAllergySeverities

        public TAllergySeverity()
        {
            CreateDateTime = System.DateTime.Now;
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
        }
    }

    // tAllergyStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergyStatus
    {
        public int Id { get; set; } // ID (Primary key)
        public string Status { get; set; } // Status (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tAllergyStatuses

        public TAllergyStatus()
        {
            CreateDateTime = System.DateTime.Now;
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
        }
    }

    // tCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TCode
    {
        public int Id { get; set; } // ID (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public string CodeSystem { get; set; } // CodeSystem (length: 50)
        public string CodeSystemName { get; set; } // CodeSystemName (length: 50)
        public string Name { get; set; } // Name (length: 100)
        public string Version { get; set; } // Version (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserOrder> TUserOrders { get; set; } // tUserOrders.FK_tUserOrders_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefAllergensCode> TXrefAllergensCodes { get; set; } // tXrefAllergensCodes.FK_tXrefAllergensCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefMedicationFormsCode> TXrefMedicationFormsCodes { get; set; } // tXrefMedicationFormsCodes.FK_tXrefMedicationFormsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefMedicationRoutesCode> TXrefMedicationRoutesCodes { get; set; } // tXrefMedicationRoutesCodes.FK_tXrefMedicationRoutesCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefReactionsCode> TXrefReactionsCodes { get; set; } // tXrefReactionsCodes.FK_tXrefReactionsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefReactionTypesCode> TXrefReactionTypesCodes { get; set; } // tXrefReactionTypesCodes.FK_tXrefReactionTypesCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserAllergiesCode> TXrefUserAllergiesCodes { get; set; } // tXrefUserAllergiesCodes.FK_tXrefUserAllergiesCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserCarePlansCode> TXrefUserCarePlansCodes { get; set; } // tXrefUserCarePlansCodes.FK_tXrefUserCarePlansCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersCode> TXrefUserEncountersCodes { get; set; } // tXrefUserEncountersCodes.FK_tXrefUserEncountersCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserFunctionalStatusesCode> TXrefUserFunctionalStatusesCodes { get; set; } // tXrefUserFunctionalStatusesCodes.FK_tXrefUserFunctionalStatusesCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserImmunizationsCode> TXrefUserImmunizationsCodes { get; set; } // tXrefUserImmunizationsCodes.FK_tXrefUserImmunizationsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserInstructionsCode> TXrefUserInstructionsCodes { get; set; } // tXrefUserInstructionsCodes.FK_tXrefUserInstructionsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserPrescriptionsCode> TXrefUserPrescriptionsCodes { get; set; } // tXrefUserPrescriptionsCodes.FK_tXrefUserPrescriptionsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserProblemsCode> TXrefUserProblemsCodes { get; set; } // tXrefUserProblemsCodes.FK_tXrefUserProblemsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserProceduresCode> TXrefUserProceduresCodes { get; set; } // tXrefUserProceduresCodes.FK_tXrefUserProceduresCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultComponentsCode> TXrefUserTestResultComponentsCodes { get; set; } // tXrefUserTestResultComponentsCodes.FK_tXrefUserTestResultComponentsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultsCode> TXrefUserTestResultsCodes { get; set; } // tXrefUserTestResultsCodes.FK_tXrefUserTestResultsCodes_tCodes
        public virtual System.Collections.Generic.ICollection<TXrefUserVitalsCode> TXrefUserVitalsCodes { get; set; } // tXrefUserVitalsCodes.FK_tXrefUserVitalsCodes_tCodes

        public TCode()
        {
            CreateDateTime = System.DateTime.Now;
            TUserOrders = new System.Collections.Generic.List<TUserOrder>();
            TXrefAllergensCodes = new System.Collections.Generic.List<TXrefAllergensCode>();
            TXrefMedicationFormsCodes = new System.Collections.Generic.List<TXrefMedicationFormsCode>();
            TXrefMedicationRoutesCodes = new System.Collections.Generic.List<TXrefMedicationRoutesCode>();
            TXrefReactionsCodes = new System.Collections.Generic.List<TXrefReactionsCode>();
            TXrefReactionTypesCodes = new System.Collections.Generic.List<TXrefReactionTypesCode>();
            TXrefUserAllergiesCodes = new System.Collections.Generic.List<TXrefUserAllergiesCode>();
            TXrefUserCarePlansCodes = new System.Collections.Generic.List<TXrefUserCarePlansCode>();
            TXrefUserEncountersCodes = new System.Collections.Generic.List<TXrefUserEncountersCode>();
            TXrefUserFunctionalStatusesCodes = new System.Collections.Generic.List<TXrefUserFunctionalStatusesCode>();
            TXrefUserImmunizationsCodes = new System.Collections.Generic.List<TXrefUserImmunizationsCode>();
            TXrefUserInstructionsCodes = new System.Collections.Generic.List<TXrefUserInstructionsCode>();
            TXrefUserPrescriptionsCodes = new System.Collections.Generic.List<TXrefUserPrescriptionsCode>();
            TXrefUserProblemsCodes = new System.Collections.Generic.List<TXrefUserProblemsCode>();
            TXrefUserProceduresCodes = new System.Collections.Generic.List<TXrefUserProceduresCode>();
            TXrefUserTestResultComponentsCodes = new System.Collections.Generic.List<TXrefUserTestResultComponentsCode>();
            TXrefUserTestResultsCodes = new System.Collections.Generic.List<TXrefUserTestResultsCode>();
            TXrefUserVitalsCodes = new System.Collections.Generic.List<TXrefUserVitalsCode>();
        }
    }

    // tCredentials
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TCredential
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserId { get; set; } // UserID
        public string SourceUserId { get; set; } // SourceUserID (length: 100)
        public string AccessToken { get; set; } // AccessToken (length: 500)
        public string PublicToken { get; set; } // PublicToken (length: 500)
        public int SourceId { get; set; } // SourceID
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices.FK_tUserSourceServices_tCredentials

        // Foreign keys
        public virtual TSource TSource { get; set; } // FK_tCredentials_tCredentialSources
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tCredentials_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tCredentials_tUserIDs

        public TCredential()
        {
            CreateDateTime = System.DateTime.Now;
            LastUpdatedDateTime = System.DateTime.Now;
            TUserSourceServices = new System.Collections.Generic.List<TUserSourceService>();
        }
    }

    // tDietCategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TDietCategory
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserDiet> TUserDiets { get; set; } // tUserDiet.FK_tUserDiet_tDietCategory

        public TDietCategory()
        {
            CreateDateTime = System.DateTime.Now;
            TUserDiets = new System.Collections.Generic.List<TUserDiet>();
        }
    }

    // tGeneticTraits
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TGeneticTrait
    {
        public int Id { get; set; } // ID (Primary key)
        public string Description { get; set; } // Description (length: 50)
        public string Trait { get; set; } // Trait (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits.FK_tUserGeneticTraits_tGeneticTraits

        public TGeneticTrait()
        {
            TUserGeneticTraits = new System.Collections.Generic.List<TUserGeneticTrait>();
        }
    }

    // tInstructionTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TInstructionType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions.FK_tUserInstructions_tInstructionTypes

        public TInstructionType()
        {
            TUserInstructions = new System.Collections.Generic.List<TUserInstruction>();
        }
    }

    // tMedicationForms
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TMedicationForm
    {
        public int Id { get; set; } // ID (Primary key)
        public string Form { get; set; } // Form (length: 100)
        public string ShortName { get; set; } // ShortName (length: 50)
        public string Description { get; set; } // Description
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tMedDosageForms
        public virtual System.Collections.Generic.ICollection<TXrefMedicationFormsCode> TXrefMedicationFormsCodes { get; set; } // tXrefMedicationFormsCodes.FK_tXrefMedicationFormsCodes_tMedicationForms

        public TMedicationForm()
        {
            CreateDateTime = System.DateTime.Now;
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TXrefMedicationFormsCodes = new System.Collections.Generic.List<TXrefMedicationFormsCode>();
        }
    }

    // tMedicationRoutes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TMedicationRoute
    {
        public int Id { get; set; } // ID (Primary key)
        public string Route { get; set; } // Route (length: 50)
        public string ShortName { get; set; } // ShortName (length: 50)
        public string Description { get; set; } // Description
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tMedRoutes
        public virtual System.Collections.Generic.ICollection<TXrefMedicationRoutesCode> TXrefMedicationRoutesCodes { get; set; } // tXrefMedicationRoutesCodes.FK_tXrefMedicationRoutesCodes_tMedicationRoutes

        public TMedicationRoute()
        {
            CreateDateTime = System.DateTime.Now;
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TXrefMedicationRoutesCodes = new System.Collections.Generic.List<TXrefMedicationRoutesCode>();
        }
    }

    // tNutrients
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TNutrient
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public int? TypeId { get; set; } // TypeID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; } // tXrefUserDietNutrients.FK_tXrefUserDietNutrients_tNutrients

        // Foreign keys
        public virtual TNutrientType TNutrientType { get; set; } // FK_tNutrients_tNutrientType

        public TNutrient()
        {
            CreateDateTime = System.DateTime.Now;
            TXrefUserDietNutrients = new System.Collections.Generic.List<TXrefUserDietNutrient>();
        }
    }

    // tNutrientType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TNutrientType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TNutrient> TNutrients { get; set; } // tNutrients.FK_tNutrients_tNutrientType

        public TNutrientType()
        {
            CreateDateTime = System.DateTime.Now;
            TNutrients = new System.Collections.Generic.List<TNutrient>();
        }
    }

    // tOrderTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TOrderType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserOrder> TUserOrders { get; set; } // tUserOrders.FK_tUserOrders_tOrderTypes

        public TOrderType()
        {
            TUserOrders = new System.Collections.Generic.List<TUserOrder>();
        }
    }

    // tOrganizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TOrganization
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public string Address1 { get; set; } // Address1 (length: 100)
        public string Address2 { get; set; } // Address2 (length: 100)
        public string City { get; set; } // City (length: 50)
        public string State { get; set; } // State (length: 50)
        public string Zip { get; set; } // Zip (length: 12)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 15)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TProvider> TProviders { get; set; } // tProviders.FK_tProviders_tOrganizations
        public virtual System.Collections.Generic.ICollection<TSourceOrganization> TSourceOrganizations { get; set; } // tSourceOrganizations.FK_tSourceOrganizations_tOrganizations

        public TOrganization()
        {
            CreateDateTime = System.DateTime.Now;
            TProviders = new System.Collections.Generic.List<TProvider>();
            TSourceOrganizations = new System.Collections.Generic.List<TSourceOrganization>();
        }
    }

    // tPharmacies
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TPharmacy
    {
        public int Id { get; set; } // ID (Primary key)
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public string Name { get; set; } // Name (length: 50)
        public string Address { get; set; } // Address (length: 200)
        public string Phone { get; set; } // Phone (length: 20)
        public string Hours { get; set; } // Hours (length: 30)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tPharmacies

        public TPharmacy()
        {
            CreateDateTime = System.DateTime.Now;
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
        }
    }

    // tProviders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TProvider
    {
        public int Id { get; set; } // ID (Primary key)
        public string SourceProviderId { get; set; } // SourceProviderID (length: 50)
        public string Name { get; set; } // Name (length: 100)
        public int OrganizationId { get; set; } // OrganizationID
        public string DepartmentName { get; set; } // DepartmentName (length: 100)
        public string NpiNumber { get; set; } // NPINumber (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TProviderPhoneNumber> TProviderPhoneNumbers { get; set; } // tProviderPhoneNumbers.FK_tProviderPhoneNumbers_tProviders
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tProviders
        public virtual System.Collections.Generic.ICollection<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives.FK_tUserNarratives_tProviders
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tProviders
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tProviders
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tProviders
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultRecipientsProvider> TXrefUserTestResultRecipientsProviders { get; set; } // tXrefUserTestResultRecipientsProviders.FK_tXrefUserTestResultRecipientsProviders_tProviders

        // Foreign keys
        public virtual TOrganization TOrganization { get; set; } // FK_tProviders_tOrganizations

        public TProvider()
        {
            CreateDateTime = System.DateTime.Now;
            TProviderPhoneNumbers = new System.Collections.Generic.List<TProviderPhoneNumber>();
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
            TUserNarratives = new System.Collections.Generic.List<TUserNarrative>();
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
            TXrefUserTestResultRecipientsProviders = new System.Collections.Generic.List<TXrefUserTestResultRecipientsProvider>();
        }
    }

    // tProviderPhoneNumbers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TProviderPhoneNumber
    {
        public int Id { get; set; } // ID (Primary key)
        public int ProviderId { get; set; } // ProviderID
        public string PhoneNumber { get; set; } // PhoneNumber (length: 15)
        public string Extension { get; set; } // Extension (length: 15)

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tProviderPhoneNumbers_tProviders
    }

    // tReactions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TReaction
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int ReactionTypeId { get; set; } // ReactionTypeID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tReactions
        public virtual System.Collections.Generic.ICollection<TXrefReactionsCode> TXrefReactionsCodes { get; set; } // tXrefReactionsCodes.FK_tXrefReactionsCodes_tReactions

        // Foreign keys
        public virtual TReactionType TReactionType { get; set; } // FK_tReactions_tReactionTypes

        public TReaction()
        {
            CreateDateTime = System.DateTime.Now;
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TXrefReactionsCodes = new System.Collections.Generic.List<TXrefReactionsCode>();
        }
    }

    // tReactionTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TReactionType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TReaction> TReactions { get; set; } // tReactions.FK_tReactions_tReactionTypes
        public virtual System.Collections.Generic.ICollection<TXrefReactionTypesCode> TXrefReactionTypesCodes { get; set; } // tXrefReactionTypesCodes.FK_tXrefReactionTypesCodes_tReactionTypes

        public TReactionType()
        {
            CreateDateTime = System.DateTime.Now;
            TReactions = new System.Collections.Generic.List<TReaction>();
            TXrefReactionTypesCodes = new System.Collections.Generic.List<TXrefReactionTypesCode>();
        }
    }

    // tSHAREPurposes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSharePurpos
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserShareSettingsPurpos> TXrefUserShareSettingsPurpos { get; set; } // tXrefUserSHARESettingsPurposes.FK_tXrefUserSHARESettingsPurposes_tSHAREPurposes

        public TSharePurpos()
        {
            CreateDateTime = System.DateTime.Now;
            TXrefUserShareSettingsPurpos = new System.Collections.Generic.List<TXrefUserShareSettingsPurpos>();
        }
    }

    // tSHARESettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TShareSetting
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 10)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tSHARESettings

        public TShareSetting()
        {
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
        }
    }

    // tSNPAvailability
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSnpAvailability
    {
        public int Id { get; set; } // ID (Primary key)
        public int SourceServiceId { get; set; } // SourceServiceID
        public long? SourceIndex { get; set; } // SourceIndex
        public string SnpProbeName { get; set; } // SNPProbeName (length: 100)
        public string Chromosome { get; set; } // Chromosome (length: 4)
        public string ChromosomePosition { get; set; } // ChromosomePosition (length: 20)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserSnpProbesSnpAvailability> TXrefUserSnpProbesSnpAvailabilities { get; set; } // tXrefUserSNPProbesSNPAvailability.FK_tXrefUserSNPProbesSNPAvailability_tSNPAvailability

        // Foreign keys
        public virtual TSourceService TSourceService { get; set; } // FK_tSNPAvailability_tSourceServices

        public TSnpAvailability()
        {
            CreateDateTime = System.DateTime.Now;
            TXrefUserSnpProbesSnpAvailabilities = new System.Collections.Generic.List<TXrefUserSnpProbesSnpAvailability>();
        }
    }

    // tSources
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSource
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TCredential> TCredentials { get; set; } // tCredentials.FK_tCredentials_tCredentialSources
        public virtual System.Collections.Generic.ICollection<TSourceOrganization> TSourceOrganizations { get; set; } // tSourceOrganizations.FK_tSourceOrganizations_tCredentialSources
        public virtual System.Collections.Generic.ICollection<TSourceService> TSourceServices { get; set; } // tSourceServices.FK_tSourceServices_tCredentialSources
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tCredentialSources

        public TSource()
        {
            TCredentials = new System.Collections.Generic.List<TCredential>();
            TSourceOrganizations = new System.Collections.Generic.List<TSourceOrganization>();
            TSourceServices = new System.Collections.Generic.List<TSourceService>();
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
        }
    }

    // tSourceOrganizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceOrganization
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int OrganizationId { get; set; } // OrganizationID
        public int SourceId { get; set; } // SourceID
        public string SourceOrgId { get; set; } // SourceOrgID (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses.FK_tUserFunctionalStatuses_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations.FK_tUserImmunizations_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions.FK_tUserInstructions_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives.FK_tUserNarratives_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserProblem> TUserProblems { get; set; } // tUserProblems.FK_tUserProblems_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserProcedure> PerformingOrganization { get; set; } // tUserProcedures.FK_tUserProcedures_tSourceOrganizations1
        public virtual System.Collections.Generic.ICollection<TUserProcedure> SourceOrganization { get; set; } // tUserProcedures.FK_tUserProcedures_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults.FK_tUserSurveyResults_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tSourceOrganizations
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tSourceOrganizations

        // Foreign keys
        public virtual TOrganization TOrganization { get; set; } // FK_tSourceOrganizations_tOrganizations
        public virtual TSource TSource { get; set; } // FK_tSourceOrganizations_tCredentialSources

        public TSourceOrganization()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
            TUserFunctionalStatus = new System.Collections.Generic.List<TUserFunctionalStatus>();
            TUserImmunizations = new System.Collections.Generic.List<TUserImmunization>();
            TUserInstructions = new System.Collections.Generic.List<TUserInstruction>();
            TUserNarratives = new System.Collections.Generic.List<TUserNarrative>();
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TUserProblems = new System.Collections.Generic.List<TUserProblem>();
            PerformingOrganization = new System.Collections.Generic.List<TUserProcedure>();
            SourceOrganization = new System.Collections.Generic.List<TUserProcedure>();
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
            TUserSurveyResults = new System.Collections.Generic.List<TUserSurveyResult>();
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
        }
    }

    // tSourceServices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceService
    {
        public int Id { get; set; } // ID (Primary key)
        public string ServiceName { get; set; } // ServiceName (length: 50)
        public int SourceId { get; set; } // SourceID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TSnpAvailability> TSnpAvailabilities { get; set; } // tSNPAvailability.FK_tSNPAvailability_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices.FK_tUserSourceServices_tSourceServices

        // Foreign keys
        public virtual TSource TSource { get; set; } // FK_tSourceServices_tCredentialSources

        public TSourceService()
        {
            CreateDateTime = System.DateTime.Now;
            TSnpAvailabilities = new System.Collections.Generic.List<TSnpAvailability>();
            TUserSourceServices = new System.Collections.Generic.List<TUserSourceService>();
        }
    }

    // tSourceServiceDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceServiceDevice
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string Name { get; set; } // Name (length: 10)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserSourceServiceDevice> TXrefUserSourceServiceDevices { get; set; } // tXrefUserSourceServiceDevices.FK_tXrefUserSourceServiceDevices_tSourceServiceDevices

        public TSourceServiceDevice()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserSourceServiceDevices = new System.Collections.Generic.List<TXrefUserSourceServiceDevice>();
        }
    }

    // tSystemStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSystemStatus
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 20)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TCredential> TCredentials { get; set; } // tCredentials.FK_tCredentials_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserActivity> TUserActivities { get; set; } // tUserActivities.FK_tUserActivities_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserDiet> TUserDiets { get; set; } // tUserDiet.FK_tUserDiet_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserEncounterReason> TUserEncounterReasons { get; set; } // tUserEncounterReasons.FK_tUserEncounterReasons_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserEvent> TUserEvents { get; set; } // tUserEvents.FK_tUserEvents_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses.FK_tUserFunctionalStatuses_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits.FK_tUserGeneticTraits_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations.FK_tUserImmunizations_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions.FK_tUserInstructions_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserLocation> TUserLocations { get; set; } // tUserLocations.FK_tUserLocations_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives.FK_tUserNarratives_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserOrder> TUserOrders { get; set; } // tUserOrders.FK_tUserOrders_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserProblem> TUserProblems { get; set; } // tUserProblems.FK_tUserProblems_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures.FK_tUserProcedures_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserSleep> TUserSleeps { get; set; } // tUserSleep.FK_tUserSleep_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserSnpProbe> TUserSnpProbes { get; set; } // tUserSNPProbes.FK_tUserSNPProbes_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults.FK_tUserSurveyResults_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserTestResultComponent> TUserTestResultComponents { get; set; } // tUserTestResultComponents.FK_tUserTestResultComponents_tSystemStatuses
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tSystemStatuses

        public TSystemStatus()
        {
            TCredentials = new System.Collections.Generic.List<TCredential>();
            TUserActivities = new System.Collections.Generic.List<TUserActivity>();
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
            TUserDiets = new System.Collections.Generic.List<TUserDiet>();
            TUserEncounterReasons = new System.Collections.Generic.List<TUserEncounterReason>();
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
            TUserEvents = new System.Collections.Generic.List<TUserEvent>();
            TUserFunctionalStatus = new System.Collections.Generic.List<TUserFunctionalStatus>();
            TUserGeneticTraits = new System.Collections.Generic.List<TUserGeneticTrait>();
            TUserImmunizations = new System.Collections.Generic.List<TUserImmunization>();
            TUserInstructions = new System.Collections.Generic.List<TUserInstruction>();
            TUserLocations = new System.Collections.Generic.List<TUserLocation>();
            TUserNarratives = new System.Collections.Generic.List<TUserNarrative>();
            TUserOrders = new System.Collections.Generic.List<TUserOrder>();
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TUserProblems = new System.Collections.Generic.List<TUserProblem>();
            TUserProcedures = new System.Collections.Generic.List<TUserProcedure>();
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
            TUserSleeps = new System.Collections.Generic.List<TUserSleep>();
            TUserSnpProbes = new System.Collections.Generic.List<TUserSnpProbe>();
            TUserSurveyResults = new System.Collections.Generic.List<TUserSurveyResult>();
            TUserTestResultComponents = new System.Collections.Generic.List<TUserTestResultComponent>();
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
        }
    }

    // tTestResultStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TTestResultStatus
    {
        public int Id { get; set; } // ID (Primary key)
        public string Status { get; set; } // Status (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tTestResultStatuses

        public TTestResultStatus()
        {
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
        }
    }

    // tUnitsOfMeasure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUnitsOfMeasure
    {
        public int Id { get; set; } // ID (Primary key)
        public string UnitOfMeasure { get; set; } // UnitOfMeasure (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUomRelationship> Master { get; set; } // tUOMRelationships.FK_tUOMRelationships_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TUomRelationship> Sub { get; set; } // tUOMRelationships.FK_tUOMRelationships_tUnitsOfMeasure1
        public virtual System.Collections.Generic.ICollection<TUserActivity> DistanceUom { get; set; } // tUserActivities.FK_tUserActivities_tUnitsOfMeasure1
        public virtual System.Collections.Generic.ICollection<TUserActivity> DurationUom { get; set; } // tUserActivities.FK_tUserActivities_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TUserDiet> TUserDiets { get; set; } // tUserDiet.FK_tUserDiet_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TUserPrescription> FrequencyUom { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TUserPrescription> StrengthUom { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tUnitsOfMeasure1
        public virtual System.Collections.Generic.ICollection<TUserTestResultComponent> TUserTestResultComponents { get; set; } // tUserTestResultComponents.FK_tUserTestResultComponents_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tUnitsOfMeasure
        public virtual System.Collections.Generic.ICollection<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; } // tXrefUserDietNutrients.FK_tXrefUserDietNutrients_tUnitsOfMeasure

        public TUnitsOfMeasure()
        {
            Master = new System.Collections.Generic.List<TUomRelationship>();
            Sub = new System.Collections.Generic.List<TUomRelationship>();
            DistanceUom = new System.Collections.Generic.List<TUserActivity>();
            DurationUom = new System.Collections.Generic.List<TUserActivity>();
            TUserDiets = new System.Collections.Generic.List<TUserDiet>();
            FrequencyUom = new System.Collections.Generic.List<TUserPrescription>();
            StrengthUom = new System.Collections.Generic.List<TUserPrescription>();
            TUserTestResultComponents = new System.Collections.Generic.List<TUserTestResultComponent>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
            TXrefUserDietNutrients = new System.Collections.Generic.List<TXrefUserDietNutrient>();
        }
    }

    // tUOMRelationships
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUomRelationship
    {
        public int Id { get; set; } // ID (Primary key)
        public int MasterId { get; set; } // MasterID
        public int SubId { get; set; } // SubID

        // Foreign keys
        public virtual TUnitsOfMeasure Master { get; set; } // FK_tUOMRelationships_tUnitsOfMeasure
        public virtual TUnitsOfMeasure Sub { get; set; } // FK_tUOMRelationships_tUnitsOfMeasure1
    }

    // tUserActivities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserActivity
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int ActivityId { get; set; } // ActivityID
        public decimal? Duration { get; set; } // Duration
        public int? DurationUomid { get; set; } // DurationUOMID
        public decimal? Distance { get; set; } // Distance
        public int? DistanceUomid { get; set; } // DistanceUOMID
        public decimal? Steps { get; set; } // Steps
        public decimal? Calories { get; set; } // Calories
        public decimal? LightActivityMin { get; set; } // LightActivityMin
        public decimal? ModerateActivityMin { get; set; } // ModerateActivityMin
        public decimal? VigorousActivityMin { get; set; } // VigorousActivityMin
        public decimal? SedentaryActivityMin { get; set; } // SedentaryActivityMin
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TActivity TActivity { get; set; } // FK_tUserActivities_tActivities
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserActivities_tSystemStatuses
        public virtual TUnitsOfMeasure DistanceUom { get; set; } // FK_tUserActivities_tUnitsOfMeasure1
        public virtual TUnitsOfMeasure DurationUom { get; set; } // FK_tUserActivities_tUnitsOfMeasure
        public virtual TUserId TUserId { get; set; } // FK_tUserActivities_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserActivities_tUserSourceServices

        public TUserActivity()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserAllergies
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserAllergy
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int AllergenId { get; set; } // AllergenID
        public int ReactionId { get; set; } // ReactionID
        public int StatusId { get; set; } // StatusID
        public int SeverityId { get; set; } // SeverityID
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime LastUpdateDateTime { get; set; } // LastUpdateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserAllergiesCode> TXrefUserAllergiesCodes { get; set; } // tXrefUserAllergiesCodes.FK_tXrefUserAllergiesCodes_tUserAllergies

        // Foreign keys
        public virtual TAllergen TAllergen { get; set; } // FK_tUserAllergies_tAllergens
        public virtual TAllergySeverity TAllergySeverity { get; set; } // FK_tUserAllergies_tAllergySeverities
        public virtual TAllergyStatus TAllergyStatus { get; set; } // FK_tUserAllergies_tAllergyStatuses
        public virtual TReaction TReaction { get; set; } // FK_tUserAllergies_tReactions
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserAllergies_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserAllergies_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserAllergies_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserAllergies_tSourceServices

        public TUserAllergy()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserAllergiesCodes = new System.Collections.Generic.List<TXrefUserAllergiesCode>();
        }
    }

    // tUserCarePlans
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlan
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 200)
        public string Text { get; set; } // Text
        public int? TypeId { get; set; } // TypeID
        public int? SpecialtyId { get; set; } // SpecialtyID
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserCarePlansCode> TXrefUserCarePlansCodes { get; set; } // tXrefUserCarePlansCodes.FK_tXrefUserCarePlansCodes_tUserCarePlans

        // Foreign keys
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserCarePlans_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserCarePlans_tSystemStatuses
        public virtual TUserCarePlanSpecialty TUserCarePlanSpecialty { get; set; } // FK_tUserCarePlans_tUserCarePlanSpecialties
        public virtual TUserCarePlanType TUserCarePlanType { get; set; } // FK_tUserCarePlans_tUserCarePlanTypes
        public virtual TUserId TUserId { get; set; } // FK_tUserCarePlans_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserCarePlans_tSourceServices

        public TUserCarePlan()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserCarePlansCodes = new System.Collections.Generic.List<TXrefUserCarePlansCode>();
        }
    }

    // tUserCarePlanSpecialties
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlanSpecialty
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tUserCarePlanSpecialties

        public TUserCarePlanSpecialty()
        {
            CreateDateTime = System.DateTime.Now;
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
        }
    }

    // tUserCarePlanTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlanType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tUserCarePlanTypes

        public TUserCarePlanType()
        {
            CreateDateTime = System.DateTime.Now;
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
        }
    }

    // tUserDataAudit
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataAudit
    {
        public int Id { get; set; } // Id (Primary key)
        public int? ApplicationId { get; set; } // ApplicationID
        public int? UserId { get; set; } // UserID
        public int EventId { get; set; } // EventID
        public int? ObjectId { get; set; } // ObjectID
        public string Description { get; set; } // Description (length: 100)
        public string OriginalValue { get; set; } // OriginalValue
        public string NewValue { get; set; } // NewValue
        public System.DateTime? DateTimeStamp { get; set; } // DateTimeStamp

        // Foreign keys
        public virtual TUserDataAuditObject TUserDataAuditObject { get; set; } // FK_tUserDataAudit_tUserDataAuditObjects
        public virtual TUserId TUserId { get; set; } // FK_tUserDataAudit_tUserIDs

        public TUserDataAudit()
        {
            DateTimeStamp = System.DateTime.Now;
        }
    }

    // tUserDataAuditObjects
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataAuditObject
    {
        public int Id { get; set; } // ID (Primary key)
        public string TableName { get; set; } // TableName (length: 50)
        public string ColumnName { get; set; } // ColumnName (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserDataAudit> TUserDataAudits { get; set; } // tUserDataAudit.FK_tUserDataAudit_tUserDataAuditObjects

        public TUserDataAuditObject()
        {
            TUserDataAudits = new System.Collections.Generic.List<TUserDataAudit>();
        }
    }

    // tUserDataErrLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataErrLog
    {
        public int Id { get; set; } // Id (Primary key)
        public int ErrTypeId { get; set; } // ErrTypeID
        public int ErrSourceId { get; set; } // ErrSourceID
        public string Code { get; set; } // Code (length: 50)
        public string Description { get; set; } // Description
        public string Trace { get; set; } // Trace
        public int? UserId { get; set; } // UserID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Foreign keys
        public virtual TUserId TUserId { get; set; } // FK_tUserDataErrLog_tUserIDs

        public TUserDataErrLog()
        {
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserDiet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDiet
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 250)
        public decimal? Servings { get; set; } // Servings
        public int? ServingUomid { get; set; } // ServingUOMID
        public int? DietCategoryId { get; set; } // DietCategoryID
        public System.DateTime EnteredDateTime { get; set; } // EnteredDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserDietNutrient> TXrefUserDietNutrients { get; set; } // tXrefUserDietNutrients.FK_tXrefUserDietNutrients_tUserDiet

        // Foreign keys
        public virtual TDietCategory TDietCategory { get; set; } // FK_tUserDiet_tDietCategory
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserDiet_tSystemStatuses
        public virtual TUnitsOfMeasure TUnitsOfMeasure { get; set; } // FK_tUserDiet_tUnitsOfMeasure
        public virtual TUserId TUserId { get; set; } // FK_tUserDiet_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserDiet_tUserSourceServices

        public TUserDiet()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserDietNutrients = new System.Collections.Generic.List<TXrefUserDietNutrient>();
        }
    }

    // tUserEncounters
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEncounter
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int? ProviderId { get; set; } // ProviderID
        public int? VisitTypeId { get; set; } // VisitTypeID
        public System.DateTime EncounterDateTime { get; set; } // EncounterDateTime
        public int? FollowUpInstructionId { get; set; } // FollowUpInstructionID
        public int? PatientInstructionId { get; set; } // PatientInstructionID
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime LastUpdateDateTime { get; set; } // LastUpdateDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserEncounterReason> TUserEncounterReasons { get; set; } // tUserEncounterReasons.FK_tUserEncounterReasons_tUserEncounters
        public virtual System.Collections.Generic.ICollection<TUserOrder> TUserOrders { get; set; } // tUserOrders.FK_tUserOrders_tUserEncounters
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersCode> TXrefUserEncountersCodes { get; set; } // tXrefUserEncountersCodes.FK_tXrefUserEncountersCodes_tUserEncounters
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersPrescription> TXrefUserEncountersPrescriptions { get; set; } // tXrefUserEncountersPrescriptions.FK_tXrefUserEncountersPrescriptions_tUserEncounters
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersProblem> TXrefUserEncountersProblems { get; set; } // tXrefUserEncountersProblems.FK_tXrefUserEncountersProblems_tUserEncounters
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersVital> TXrefUserEncountersVitals { get; set; } // tXrefUserEncountersVitals.FK_tXrefUserEncountersVitals_tUserEncounters

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tUserEncounters_tProviders
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserEncounters_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserEncounters_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserEncounters_tUserIDs
        public virtual TUserInstruction FollowUpInstruction { get; set; } // FK_tUserEncounters_tUserInstructions
        public virtual TUserInstruction PatientInstruction { get; set; } // FK_tUserEncounters_tUserInstructions1
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserEncounters_tSourceServices
        public virtual TVisitType TVisitType { get; set; } // FK_tUserEncounters_tVisitTypes

        public TUserEncounter()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserEncounterReasons = new System.Collections.Generic.List<TUserEncounterReason>();
            TUserOrders = new System.Collections.Generic.List<TUserOrder>();
            TXrefUserEncountersCodes = new System.Collections.Generic.List<TXrefUserEncountersCode>();
            TXrefUserEncountersPrescriptions = new System.Collections.Generic.List<TXrefUserEncountersPrescription>();
            TXrefUserEncountersProblems = new System.Collections.Generic.List<TXrefUserEncountersProblem>();
            TXrefUserEncountersVitals = new System.Collections.Generic.List<TXrefUserEncountersVital>();
        }
    }

    // tUserEncounterReasons
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEncounterReason
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string Value { get; set; } // Value (length: 150)
        public int UserEncounterId { get; set; } // UserEncounterID
        public int SystemStatusId { get; set; } // SystemStatusID

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserEncounterReasons_tSystemStatuses
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tUserEncounterReasons_tUserEncounters

        public TUserEncounterReason()
        {
            ObjectId = System.Guid.NewGuid();
        }
    }

    // tUserEvents
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEvent
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserId { get; set; } // UserID
        public string Name { get; set; } // Name (length: 150)
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tUserEvents

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserEvents_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserEvents_tUserIDs

        public TUserEvent()
        {
            CreateDateTime = System.DateTime.Now;
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
        }
    }

    // tUserFunctionalStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserFunctionalStatus
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserFunctionalStatusesCode> TXrefUserFunctionalStatusesCodes { get; set; } // tXrefUserFunctionalStatusesCodes.FK_tXrefUserFunctionalStatusesCodes_tUserFunctionalStatuses

        // Foreign keys
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserFunctionalStatuses_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserFunctionalStatuses_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserFunctionalStatuses_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserFunctionalStatuses_tSourceServices

        public TUserFunctionalStatus()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserFunctionalStatusesCodes = new System.Collections.Generic.List<TXrefUserFunctionalStatusesCode>();
        }
    }

    // tUserGeneticTraits
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserGeneticTrait
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int GeneticTraitId { get; set; } // GeneticTraitID
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TGeneticTrait TGeneticTrait { get; set; } // FK_tUserGeneticTraits_tGeneticTraits
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserGeneticTraits_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserGeneticTraits_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserGeneticTraits_tUserSourceServices

        public TUserGeneticTrait()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserIDs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserId
    {
        public int UserId { get; set; } // UserID (Primary key)
        public byte? IsTestUser { get; set; } // IsTestUser

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TCredential> TCredentials { get; set; } // tCredentials.FK_tCredentials_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserActivity> TUserActivities { get; set; } // tUserActivities.FK_tUserActivities_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserDataAudit> TUserDataAudits { get; set; } // tUserDataAudit.FK_tUserDataAudit_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserDataErrLog> TUserDataErrLogs { get; set; } // tUserDataErrLog.FK_tUserDataErrLog_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserDiet> TUserDiets { get; set; } // tUserDiet.FK_tUserDiet_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserEvent> TUserEvents { get; set; } // tUserEvents.FK_tUserEvents_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses.FK_tUserFunctionalStatuses_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits.FK_tUserGeneticTraits_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations.FK_tUserImmunizations_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions.FK_tUserInstructions_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserLocation> TUserLocations { get; set; } // tUserLocations.FK_tUserLocations_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives.FK_tUserNarratives_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserProblem> TUserProblems { get; set; } // tUserProblems.FK_tUserProblems_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures.FK_tUserProcedures_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserSleep> TUserSleeps { get; set; } // tUserSleep.FK_tUserSleep_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserSnpProbe> TUserSnpProbes { get; set; } // tUserSNPProbes.FK_tUserSNPProbes_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices.FK_tUserSourceServices_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults.FK_tUserSurveyResults_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tUserIDs
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tUserIDs

        public TUserId()
        {
            TCredentials = new System.Collections.Generic.List<TCredential>();
            TUserActivities = new System.Collections.Generic.List<TUserActivity>();
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
            TUserDataAudits = new System.Collections.Generic.List<TUserDataAudit>();
            TUserDataErrLogs = new System.Collections.Generic.List<TUserDataErrLog>();
            TUserDiets = new System.Collections.Generic.List<TUserDiet>();
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
            TUserEvents = new System.Collections.Generic.List<TUserEvent>();
            TUserFunctionalStatus = new System.Collections.Generic.List<TUserFunctionalStatus>();
            TUserGeneticTraits = new System.Collections.Generic.List<TUserGeneticTrait>();
            TUserImmunizations = new System.Collections.Generic.List<TUserImmunization>();
            TUserInstructions = new System.Collections.Generic.List<TUserInstruction>();
            TUserLocations = new System.Collections.Generic.List<TUserLocation>();
            TUserNarratives = new System.Collections.Generic.List<TUserNarrative>();
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TUserProblems = new System.Collections.Generic.List<TUserProblem>();
            TUserProcedures = new System.Collections.Generic.List<TUserProcedure>();
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
            TUserSleeps = new System.Collections.Generic.List<TUserSleep>();
            TUserSnpProbes = new System.Collections.Generic.List<TUserSnpProbe>();
            TUserSourceServices = new System.Collections.Generic.List<TUserSourceService>();
            TUserSurveyResults = new System.Collections.Generic.List<TUserSurveyResult>();
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
        }
    }

    // tUserImmunizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserImmunization
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 50)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserImmunizationsDate> TUserImmunizationsDates { get; set; } // tUserImmunizationsDates.FK_tUserImmunizationsDates_tUserImmunizations
        public virtual System.Collections.Generic.ICollection<TXrefUserImmunizationsCode> TXrefUserImmunizationsCodes { get; set; } // tXrefUserImmunizationsCodes.FK_tXrefUserImmunizationsCodes_tUserImmunizations

        // Foreign keys
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserImmunizations_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserImmunizations_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserImmunizations_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserImmunizations_tSourceServices

        public TUserImmunization()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserImmunizationsDates = new System.Collections.Generic.List<TUserImmunizationsDate>();
            TXrefUserImmunizationsCodes = new System.Collections.Generic.List<TXrefUserImmunizationsCode>();
        }
    }

    // tUserImmunizationsDates
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserImmunizationsDate
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserImmunizationId { get; set; } // UserImmunizationID
        public System.DateTime DateTime { get; set; } // DateTime

        // Foreign keys
        public virtual TUserImmunization TUserImmunization { get; set; } // FK_tUserImmunizationsDates_tUserImmunizations
    }

    // tUserInstructions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserInstruction
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 50)
        public string Text { get; set; } // Text
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int InstructionTypeId { get; set; } // InstructionTypeID
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserEncounter> FollowUpInstruction { get; set; } // tUserEncounters.FK_tUserEncounters_tUserInstructions
        public virtual System.Collections.Generic.ICollection<TUserEncounter> PatientInstruction { get; set; } // tUserEncounters.FK_tUserEncounters_tUserInstructions1
        public virtual System.Collections.Generic.ICollection<TXrefUserInstructionsCode> TXrefUserInstructionsCodes { get; set; } // tXrefUserInstructionsCodes.FK_tXrefUserInstructionsCodes_tUserInstructions

        // Foreign keys
        public virtual TInstructionType TInstructionType { get; set; } // FK_tUserInstructions_tInstructionTypes
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserInstructions_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserInstructions_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserInstructions_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserInstructions_tSourceServices

        public TUserInstruction()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            FollowUpInstruction = new System.Collections.Generic.List<TUserEncounter>();
            PatientInstruction = new System.Collections.Generic.List<TUserEncounter>();
            TXrefUserInstructionsCodes = new System.Collections.Generic.List<TXrefUserInstructionsCode>();
        }
    }

    // tUserLocations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserLocation
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 200)
        public System.DateTime? StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public string Latitude { get; set; } // Latitude (length: 50)
        public string Longitude { get; set; } // Longitude (length: 50)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserLocations_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserLocations_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserLocations_tUserSourceServices

        public TUserLocation()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserNarratives
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserNarrative
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int? ProviderId { get; set; } // ProviderID
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserNarrativeEntry> TUserNarrativeEntries { get; set; } // tUserNarrativeEntries.FK_tUserNarrativeEntries_tUserNarratives

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tUserNarratives_tProviders
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserNarratives_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserNarratives_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserNarratives_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserNarratives_tSourceServices

        public TUserNarrative()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserNarrativeEntries = new System.Collections.Generic.List<TUserNarrativeEntry>();
        }
    }

    // tUserNarrativeEntries
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserNarrativeEntry
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int NarrativeId { get; set; } // NarrativeID
        public int SectionSeqNum { get; set; } // SectionSeqNum
        public string SectionTitle { get; set; } // SectionTitle (length: 200)
        public string SectionText { get; set; } // SectionText
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TUserNarrative TUserNarrative { get; set; } // FK_tUserNarrativeEntries_tUserNarratives

        public TUserNarrativeEntry()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserOrder
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int EncounterId { get; set; } // EncounterID
        public string Name { get; set; } // Name (length: 150)
        public System.DateTime? ExpectedDate { get; set; } // ExpectedDate
        public System.DateTime? ExpirationDate { get; set; } // ExpirationDate
        public int TypeId { get; set; } // TypeID
        public int? CodeId { get; set; } // CodeID
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tUserOrders_tCodes
        public virtual TOrderType TOrderType { get; set; } // FK_tUserOrders_tOrderTypes
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserOrders_tSystemStatuses
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tUserOrders_tUserEncounters

        public TUserOrder()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserPrescriptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserPrescription
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 200)
        public string Instructions { get; set; } // Instructions (length: 500)
        public int? ProviderId { get; set; } // ProviderID
        public string ProductName { get; set; } // ProductName (length: 50)
        public string BrandName { get; set; } // BrandName (length: 50)
        public string DosageText { get; set; } // DosageText (length: 100)
        public string DosageValue { get; set; } // DosageValue (length: 50)
        public int? MedFormId { get; set; } // MedFormID
        public string FrequencyValue { get; set; } // FrequencyValue (length: 50)
        public int? FrequencyUomid { get; set; } // FrequencyUOMID
        public int? RouteId { get; set; } // RouteID
        public string StrengthValue { get; set; } // StrengthValue (length: 50)
        public int? StrengthUomid { get; set; } // StrengthUOMID
        public int? PharmacyId { get; set; } // PharmacyID
        public int? RefillsRemaining { get; set; } // RefillsRemaining
        public int? RefillsTotal { get; set; } // RefillsTotal
        public System.DateTime? ExpirationDateTime { get; set; } // ExpirationDateTime
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersPrescription> TXrefUserEncountersPrescriptions { get; set; } // tXrefUserEncountersPrescriptions.FK_tXrefUserEncountersPrescriptions_tUserPrescriptions
        public virtual System.Collections.Generic.ICollection<TXrefUserPrescriptionsCode> TXrefUserPrescriptionsCodes { get; set; } // tXrefUserPrescriptionsCodes.FK_tXrefUserPrescriptionsCodes_tUserPrescriptions

        // Foreign keys
        public virtual TMedicationForm TMedicationForm { get; set; } // FK_tUserPrescriptions_tMedDosageForms
        public virtual TMedicationRoute TMedicationRoute { get; set; } // FK_tUserPrescriptions_tMedRoutes
        public virtual TPharmacy TPharmacy { get; set; } // FK_tUserPrescriptions_tPharmacies
        public virtual TProvider TProvider { get; set; } // FK_tUserPrescriptions_tProviders
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserPrescriptions_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserPrescriptions_tSystemStatuses
        public virtual TUnitsOfMeasure FrequencyUom { get; set; } // FK_tUserPrescriptions_tUnitsOfMeasure
        public virtual TUnitsOfMeasure StrengthUom { get; set; } // FK_tUserPrescriptions_tUnitsOfMeasure1
        public virtual TUserId TUserId { get; set; } // FK_tUserPrescriptions_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserPrescriptions_tSourceServices

        public TUserPrescription()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserEncountersPrescriptions = new System.Collections.Generic.List<TXrefUserEncountersPrescription>();
            TXrefUserPrescriptionsCodes = new System.Collections.Generic.List<TXrefUserPrescriptionsCode>();
        }
    }

    // tUserProblems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProblem
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 50)
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersProblem> TXrefUserEncountersProblems { get; set; } // tXrefUserEncountersProblems.FK_tXrefUserEncountersProblems_tUserProblems
        public virtual System.Collections.Generic.ICollection<TXrefUserProblemsCode> TXrefUserProblemsCodes { get; set; } // tXrefUserProblemsCodes.FK_tXrefUserProblemsCodes_tUserProblems

        // Foreign keys
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserProblems_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserProblems_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserProblems_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserProblems_tSourceServices

        public TUserProblem()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserEncountersProblems = new System.Collections.Generic.List<TXrefUserEncountersProblem>();
            TXrefUserProblemsCodes = new System.Collections.Generic.List<TXrefUserProblemsCode>();
        }
    }

    // tUserProcedures
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedure
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 50)
        public int? PerformingOrganizationId { get; set; } // PerformingOrganizationID
        public int? DeviceId { get; set; } // DeviceID
        public int? SpecimenId { get; set; } // SpecimenID
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserProceduresCode> TXrefUserProceduresCodes { get; set; } // tXrefUserProceduresCodes.FK_tXrefUserProceduresCodes_tUserProcedures

        // Foreign keys
        public virtual TSourceOrganization PerformingOrganization { get; set; } // FK_tUserProcedures_tSourceOrganizations1
        public virtual TSourceOrganization SourceOrganization { get; set; } // FK_tUserProcedures_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserProcedures_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserProcedures_tUserIDs
        public virtual TUserProcedureDevice TUserProcedureDevice { get; set; } // FK_tUserProcedures_tUserDevices
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserProcedures_tSourceServices
        public virtual TUserSpecimen TUserSpecimen { get; set; } // FK_tUserProcedures_tUserSpecimens

        public TUserProcedure()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserProceduresCodes = new System.Collections.Generic.List<TXrefUserProceduresCode>();
        }
    }

    // tUserProcedureDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedureDevice
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 10)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures.FK_tUserProcedures_tUserDevices
        public virtual System.Collections.Generic.ICollection<TUserProcedureDeviceCode> TUserProcedureDeviceCodes { get; set; } // tUserProcedureDeviceCodes.FK_tUserDeviceCodes_tUserDevices

        public TUserProcedureDevice()
        {
            CreateDateTime = System.DateTime.Now;
            TUserProcedureDeviceCodes = new System.Collections.Generic.List<TUserProcedureDeviceCode>();
            TUserProcedures = new System.Collections.Generic.List<TUserProcedure>();
        }
    }

    // tUserProcedureDeviceCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedureDeviceCode
    {
        public int Id { get; set; } // ID (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public int DeviceId { get; set; } // DeviceID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TUserProcedureDevice TUserProcedureDevice { get; set; } // FK_tUserDeviceCodes_tUserDevices

        public TUserProcedureDeviceCode()
        {
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserSHARESettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserShareSetting
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserId { get; set; } // UserID
        public int? SourceId { get; set; } // SourceID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int? SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? ObjectId { get; set; } // ObjectID
        public int? EventId { get; set; } // EventID
        public int ShareSettingId { get; set; } // SHARESettingID
        public System.DateTime? StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserShareSettingsPurpos> TXrefUserShareSettingsPurpos { get; set; } // tXrefUserSHARESettingsPurposes.FK_tXrefUserSHARESettingsPurposes_tUserSHARESettings

        // Foreign keys
        public virtual TShareSetting TShareSetting { get; set; } // FK_tUserSHARESettings_tSHARESettings
        public virtual TSource TSource { get; set; } // FK_tUserSHARESettings_tCredentialSources
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserSHARESettings_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserSHARESettings_tSystemStatuses
        public virtual TUserEvent TUserEvent { get; set; } // FK_tUserSHARESettings_tUserEvents
        public virtual TUserId TUserId { get; set; } // FK_tUserSHARESettings_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserSHARESettings_tUserSourceServices

        public TUserShareSetting()
        {
            CreateDateTime = System.DateTime.Now;
            TXrefUserShareSettingsPurpos = new System.Collections.Generic.List<TXrefUserShareSettingsPurpos>();
        }
    }

    // tUserSleep
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSleep
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public System.DateTime StartDateTime { get; set; } // StartDateTime
        public System.DateTime? EndDateTime { get; set; } // EndDateTime
        public byte? PrimarySleepEvent { get; set; } // PrimarySleepEvent
        public int? TimeAsleep { get; set; } // TimeAsleep
        public int? TimeAwake { get; set; } // TimeAwake
        public int? EfficiencyScore { get; set; } // EfficiencyScore
        public int? TimeToFallAsleep { get; set; } // TimeToFallAsleep
        public int? TimeInBedAfterWake { get; set; } // TimeInBedAfterWake
        public int? TotalTimeInBed { get; set; } // TotalTimeInBed
        public int? NumOfWakings { get; set; } // NumOfWakings
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserSleepDetail> TUserSleepDetails { get; set; } // Many to many mapping

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserSleep_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserSleep_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserSleep_tUserSourceServices

        public TUserSleep()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserSleepDetails = new System.Collections.Generic.List<TUserSleepDetail>();
        }
    }

    // tUserSleepDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSleepDetail
    {
        public int Id { get; set; } // ID
        public int UserSleepId { get; set; } // UserSleepID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TUserSleep TUserSleep { get; set; } // FK_tUserSleepDetails_tUserSleep

        public TUserSleepDetail()
        {
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserSNPProbes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSnpProbe
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string GenotypeCall { get; set; } // GenotypeCall (length: 5)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserSnpProbesSnpAvailability> TXrefUserSnpProbesSnpAvailabilities { get; set; } // tXrefUserSNPProbesSNPAvailability.FK_tXrefUserSNPProbesSNPAvailability_tUserSNPProbes

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserSNPProbes_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserSNPProbes_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserSNPProbes_tUserSourceServices

        public TUserSnpProbe()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserSnpProbesSnpAvailabilities = new System.Collections.Generic.List<TXrefUserSnpProbesSnpAvailability>();
        }
    }

    // tUserSourceServices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSourceService
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int SourceServiceId { get; set; } // SourceServiceID
        public int UserId { get; set; } // UserID
        public int? CredentialId { get; set; } // CredentialID
        public System.DateTime? ConnectedOnDateTime { get; set; } // ConnectedOnDateTime
        public System.DateTime? LastSyncDateTime { get; set; } // LastSyncDateTime
        public System.DateTime? LatestDateTime { get; set; } // LatestDateTime
        public int StatusId { get; set; } // StatusID

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserActivity> TUserActivities { get; set; } // tUserActivities.FK_tUserActivities_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserAllergy> TUserAllergies { get; set; } // tUserAllergies.FK_tUserAllergies_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserCarePlan> TUserCarePlans { get; set; } // tUserCarePlans.FK_tUserCarePlans_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserDiet> TUserDiets { get; set; } // tUserDiet.FK_tUserDiet_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserFunctionalStatus> TUserFunctionalStatus { get; set; } // tUserFunctionalStatuses.FK_tUserFunctionalStatuses_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserGeneticTrait> TUserGeneticTraits { get; set; } // tUserGeneticTraits.FK_tUserGeneticTraits_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserImmunization> TUserImmunizations { get; set; } // tUserImmunizations.FK_tUserImmunizations_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserInstruction> TUserInstructions { get; set; } // tUserInstructions.FK_tUserInstructions_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserLocation> TUserLocations { get; set; } // tUserLocations.FK_tUserLocations_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserNarrative> TUserNarratives { get; set; } // tUserNarratives.FK_tUserNarratives_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserPrescription> TUserPrescriptions { get; set; } // tUserPrescriptions.FK_tUserPrescriptions_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserProblem> TUserProblems { get; set; } // tUserProblems.FK_tUserProblems_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures.FK_tUserProcedures_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserShareSetting> TUserShareSettings { get; set; } // tUserSHARESettings.FK_tUserSHARESettings_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserSleep> TUserSleeps { get; set; } // tUserSleep.FK_tUserSleep_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserSnpProbe> TUserSnpProbes { get; set; } // tUserSNPProbes.FK_tUserSNPProbes_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserSurveyResult> TUserSurveyResults { get; set; } // tUserSurveyResults.FK_tUserSurveyResults_tUserSourceServices
        public virtual System.Collections.Generic.ICollection<TUserTestResult> TUserTestResults { get; set; } // tUserTestResults.FK_tUserTestResults_tSourceServices
        public virtual System.Collections.Generic.ICollection<TUserVital> TUserVitals { get; set; } // tUserVitals.FK_tUserVitals_tSourceServices
        public virtual System.Collections.Generic.ICollection<TXrefUserSourceServiceDevice> TXrefUserSourceServiceDevices { get; set; } // tXrefUserSourceServiceDevices.FK_tUserSourceServiceDevices_tUserSourceServices

        // Foreign keys
        public virtual TCredential TCredential { get; set; } // FK_tUserSourceServices_tCredentials
        public virtual TSourceService TSourceService { get; set; } // FK_tUserSourceServices_tSourceServices
        public virtual TUserId TUserId { get; set; } // FK_tUserSourceServices_tUserIDs
        public virtual TUserSourceServiceStatus TUserSourceServiceStatus { get; set; } // FK_tUserSourceServices_tUserSourceServiceStatuses

        public TUserSourceService()
        {
            ObjectId = System.Guid.NewGuid();
            TUserActivities = new System.Collections.Generic.List<TUserActivity>();
            TUserAllergies = new System.Collections.Generic.List<TUserAllergy>();
            TUserCarePlans = new System.Collections.Generic.List<TUserCarePlan>();
            TUserDiets = new System.Collections.Generic.List<TUserDiet>();
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
            TUserFunctionalStatus = new System.Collections.Generic.List<TUserFunctionalStatus>();
            TUserGeneticTraits = new System.Collections.Generic.List<TUserGeneticTrait>();
            TUserImmunizations = new System.Collections.Generic.List<TUserImmunization>();
            TUserInstructions = new System.Collections.Generic.List<TUserInstruction>();
            TUserLocations = new System.Collections.Generic.List<TUserLocation>();
            TUserNarratives = new System.Collections.Generic.List<TUserNarrative>();
            TUserPrescriptions = new System.Collections.Generic.List<TUserPrescription>();
            TUserProblems = new System.Collections.Generic.List<TUserProblem>();
            TUserProcedures = new System.Collections.Generic.List<TUserProcedure>();
            TUserShareSettings = new System.Collections.Generic.List<TUserShareSetting>();
            TUserSleeps = new System.Collections.Generic.List<TUserSleep>();
            TUserSnpProbes = new System.Collections.Generic.List<TUserSnpProbe>();
            TUserSurveyResults = new System.Collections.Generic.List<TUserSurveyResult>();
            TUserTestResults = new System.Collections.Generic.List<TUserTestResult>();
            TUserVitals = new System.Collections.Generic.List<TUserVital>();
            TXrefUserSourceServiceDevices = new System.Collections.Generic.List<TXrefUserSourceServiceDevice>();
        }
    }

    // tUserSourceServiceStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSourceServiceStatus
    {
        public int Id { get; set; } // ID (Primary key)
        public string Status { get; set; } // Status (length: 20)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserSourceService> TUserSourceServices { get; set; } // tUserSourceServices.FK_tUserSourceServices_tUserSourceServiceStatuses

        public TUserSourceServiceStatus()
        {
            TUserSourceServices = new System.Collections.Generic.List<TUserSourceService>();
        }
    }

    // tUserSpecimens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSpecimen
    {
        public int Id { get; set; } // ID (Primary key)
        public string Specimen { get; set; } // Specimen (length: 10)
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserProcedure> TUserProcedures { get; set; } // tUserProcedures.FK_tUserProcedures_tUserSpecimens
        public virtual System.Collections.Generic.ICollection<TUserSpecimenCode> TUserSpecimenCodes { get; set; } // tUserSpecimenCodes.FK_tUserSpecimenCodes_tUserSpecimens

        public TUserSpecimen()
        {
            CreateDateTime = System.DateTime.Now;
            TUserProcedures = new System.Collections.Generic.List<TUserProcedure>();
            TUserSpecimenCodes = new System.Collections.Generic.List<TUserSpecimenCode>();
        }
    }

    // tUserSpecimenCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSpecimenCode
    {
        public int Id { get; set; } // ID (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public int SpecimenId { get; set; } // SpecimenID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TUserSpecimen TUserSpecimen { get; set; } // FK_tUserSpecimenCodes_tUserSpecimens

        public TUserSpecimenCode()
        {
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserSurveyResults
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSurveyResult
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int SurveyId { get; set; } // SurveyID
        public int QuestionId { get; set; } // QuestionID
        public string Answer { get; set; } // Answer (length: 100)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Foreign keys
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserSurveyResults_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserSurveyResults_tSystemStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserSurveyResults_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserSurveyResults_tUserSourceServices

        public TUserSurveyResult()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
        }
    }

    // tUserTestResults
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserTestResult
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int? SourceObjectId { get; set; } // SourceObjectID
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public string Name { get; set; } // Name (length: 200)
        public int? OrderingProviderId { get; set; } // OrderingProviderID
        public int? StatusId { get; set; } // StatusID
        public string Comments { get; set; } // Comments
        public string Narrative { get; set; } // Narrative
        public string Impression { get; set; } // Impression
        public string Transcriptions { get; set; } // Transcriptions
        public System.DateTime ResultDateTime { get; set; } // ResultDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserTestResultComponent> TUserTestResultComponents { get; set; } // tUserTestResultComponents.FK_tUserTestResultComponents_tUserTestResults
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultRecipientsProvider> TXrefUserTestResultRecipientsProviders { get; set; } // tXrefUserTestResultRecipientsProviders.FK_tXrefUserTestResultRecipientsProviders_tUserTestResults
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultsCode> TXrefUserTestResultsCodes { get; set; } // tXrefUserTestResultsCodes.FK_tXrefUserTestResultsCodes_tUserTestResults

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tUserTestResults_tProviders
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserTestResults_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserTestResults_tSystemStatuses
        public virtual TTestResultStatus TTestResultStatus { get; set; } // FK_tUserTestResults_tTestResultStatuses
        public virtual TUserId TUserId { get; set; } // FK_tUserTestResults_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserTestResults_tSourceServices

        public TUserTestResult()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TUserTestResultComponents = new System.Collections.Generic.List<TUserTestResultComponent>();
            TXrefUserTestResultRecipientsProviders = new System.Collections.Generic.List<TXrefUserTestResultRecipientsProvider>();
            TXrefUserTestResultsCodes = new System.Collections.Generic.List<TXrefUserTestResultsCode>();
        }
    }

    // tUserTestResultComponents
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserTestResultComponent
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public int TestResultId { get; set; } // TestResultID
        public string Name { get; set; } // Name (length: 50)
        public string Value { get; set; } // Value (length: 50)
        public int Uomid { get; set; } // UOMID
        public string LowValue { get; set; } // LowValue (length: 50)
        public string HighValue { get; set; } // HighValue (length: 50)
        public string RefRange { get; set; } // RefRange (length: 50)
        public string Comments { get; set; } // Comments (length: 10)
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserTestResultComponentsCode> TXrefUserTestResultComponentsCodes { get; set; } // tXrefUserTestResultComponentsCodes.FK_tXrefUserTestResultComponentsCodes_tUserTestResultComponents

        // Foreign keys
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserTestResultComponents_tSystemStatuses
        public virtual TUnitsOfMeasure TUnitsOfMeasure { get; set; } // FK_tUserTestResultComponents_tUnitsOfMeasure
        public virtual TUserTestResult TUserTestResult { get; set; } // FK_tUserTestResultComponents_tUserTestResults

        public TUserTestResultComponent()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserTestResultComponentsCodes = new System.Collections.Generic.List<TXrefUserTestResultComponentsCode>();
        }
    }

    // tUserVitals
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserVital
    {
        public int Id { get; set; } // ID (Primary key)
        public System.Guid ObjectId { get; set; } // ObjectID
        public string SourceObjectId { get; set; } // SourceObjectID (length: 50)
        public int UserId { get; set; } // UserID
        public int SourceOrganizationId { get; set; } // SourceOrganizationID
        public int? UserSourceServiceId { get; set; } // UserSourceServiceID
        public int? ProviderId { get; set; } // ProviderID
        public string Name { get; set; } // Name (length: 50)
        public string Value { get; set; } // Value (length: 50)
        public int Uomid { get; set; } // UOMID
        public System.DateTime ResultDateTime { get; set; } // ResultDateTime
        public int SystemStatusId { get; set; } // SystemStatusID
        public System.DateTime CreateDateTime { get; set; } // CreateDateTime
        public System.DateTime? LastUpdatedDateTime { get; set; } // LastUpdatedDateTime

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TXrefUserEncountersVital> TXrefUserEncountersVitals { get; set; } // tXrefUserEncountersVitals.FK_tXrefUserEncountersVitals_tUserVitals
        public virtual System.Collections.Generic.ICollection<TXrefUserVitalsCode> TXrefUserVitalsCodes { get; set; } // tXrefUserVitalsCodes.FK_tXrefUserVitalsCodes_tUserVitals

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tUserVitals_tProviders
        public virtual TSourceOrganization TSourceOrganization { get; set; } // FK_tUserVitals_tSourceOrganizations
        public virtual TSystemStatus TSystemStatus { get; set; } // FK_tUserVitals_tSystemStatuses
        public virtual TUnitsOfMeasure TUnitsOfMeasure { get; set; } // FK_tUserVitals_tUnitsOfMeasure
        public virtual TUserId TUserId { get; set; } // FK_tUserVitals_tUserIDs
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserVitals_tSourceServices

        public TUserVital()
        {
            ObjectId = System.Guid.NewGuid();
            CreateDateTime = System.DateTime.Now;
            TXrefUserEncountersVitals = new System.Collections.Generic.List<TXrefUserEncountersVital>();
            TXrefUserVitalsCodes = new System.Collections.Generic.List<TXrefUserVitalsCode>();
        }
    }

    // tVisitTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TVisitType
    {
        public int Id { get; set; } // ID (Primary key)
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<TUserEncounter> TUserEncounters { get; set; } // tUserEncounters.FK_tUserEncounters_tVisitTypes

        public TVisitType()
        {
            TUserEncounters = new System.Collections.Generic.List<TUserEncounter>();
        }
    }

    // tXrefAllergensCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefAllergensCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int AllergenId { get; set; } // AllergenID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TAllergen TAllergen { get; set; } // FK_tXrefAllergensCodes_tAllergens
        public virtual TCode TCode { get; set; } // FK_tXrefAllergensCodes_tCodes
    }

    // tXrefMedicationFormsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefMedicationFormsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int MedicationFormId { get; set; } // MedicationFormID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefMedicationFormsCodes_tCodes
        public virtual TMedicationForm TMedicationForm { get; set; } // FK_tXrefMedicationFormsCodes_tMedicationForms
    }

    // tXrefMedicationRoutesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefMedicationRoutesCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int MedicationRouteId { get; set; } // MedicationRouteID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefMedicationRoutesCodes_tCodes
        public virtual TMedicationRoute TMedicationRoute { get; set; } // FK_tXrefMedicationRoutesCodes_tMedicationRoutes
    }

    // tXrefReactionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefReactionsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int ReactionId { get; set; } // ReactionID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefReactionsCodes_tCodes
        public virtual TReaction TReaction { get; set; } // FK_tXrefReactionsCodes_tReactions
    }

    // tXrefReactionTypesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefReactionTypesCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int ReactionTypeId { get; set; } // ReactionTypeID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefReactionTypesCodes_tCodes
        public virtual TReactionType TReactionType { get; set; } // FK_tXrefReactionTypesCodes_tReactionTypes
    }

    // tXrefUserAllergiesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserAllergiesCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserAllergiesId { get; set; } // UserAllergiesID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserAllergiesCodes_tCodes
        public virtual TUserAllergy TUserAllergy { get; set; } // FK_tXrefUserAllergiesCodes_tUserAllergies
    }

    // tXrefUserCarePlansCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserCarePlansCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserCarePlanId { get; set; } // UserCarePlanID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserCarePlansCodes_tCodes
        public virtual TUserCarePlan TUserCarePlan { get; set; } // FK_tXrefUserCarePlansCodes_tUserCarePlans
    }

    // tXrefUserDietNutrients
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserDietNutrient
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserDietId { get; set; } // UserDietID
        public int NutrientId { get; set; } // NutrientID
        public decimal? Value { get; set; } // Value
        public int? Uomid { get; set; } // UOMID

        // Foreign keys
        public virtual TNutrient TNutrient { get; set; } // FK_tXrefUserDietNutrients_tNutrients
        public virtual TUnitsOfMeasure TUnitsOfMeasure { get; set; } // FK_tXrefUserDietNutrients_tUnitsOfMeasure
        public virtual TUserDiet TUserDiet { get; set; } // FK_tXrefUserDietNutrients_tUserDiet
    }

    // tXrefUserEncountersCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserEncounterId { get; set; } // UserEncounterID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserEncountersCodes_tCodes
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tXrefUserEncountersCodes_tUserEncounters
    }

    // tXrefUserEncountersPrescriptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersPrescription
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserEncounterId { get; set; } // UserEncounterID
        public int UserPrescriptionId { get; set; } // UserPrescriptionID

        // Foreign keys
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tXrefUserEncountersPrescriptions_tUserEncounters
        public virtual TUserPrescription TUserPrescription { get; set; } // FK_tXrefUserEncountersPrescriptions_tUserPrescriptions
    }

    // tXrefUserEncountersProblems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersProblem
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserEncounterId { get; set; } // UserEncounterID
        public int UserProblemId { get; set; } // UserProblemID

        // Foreign keys
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tXrefUserEncountersProblems_tUserEncounters
        public virtual TUserProblem TUserProblem { get; set; } // FK_tXrefUserEncountersProblems_tUserProblems
    }

    // tXrefUserEncountersVitals
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersVital
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserEncounterId { get; set; } // UserEncounterID
        public int UserVitalId { get; set; } // UserVitalID

        // Foreign keys
        public virtual TUserEncounter TUserEncounter { get; set; } // FK_tXrefUserEncountersVitals_tUserEncounters
        public virtual TUserVital TUserVital { get; set; } // FK_tXrefUserEncountersVitals_tUserVitals
    }

    // tXrefUserFunctionalStatusesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserFunctionalStatusesCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserFunctionalStatusId { get; set; } // UserFunctionalStatusID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserFunctionalStatusesCodes_tCodes
        public virtual TUserFunctionalStatus TUserFunctionalStatus { get; set; } // FK_tXrefUserFunctionalStatusesCodes_tUserFunctionalStatuses
    }

    // tXrefUserImmunizationsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserImmunizationsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserImmunizationId { get; set; } // UserImmunizationID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserImmunizationsCodes_tCodes
        public virtual TUserImmunization TUserImmunization { get; set; } // FK_tXrefUserImmunizationsCodes_tUserImmunizations
    }

    // tXrefUserInstructionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserInstructionsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserInstructionId { get; set; } // UserInstructionID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserInstructionsCodes_tCodes
        public virtual TUserInstruction TUserInstruction { get; set; } // FK_tXrefUserInstructionsCodes_tUserInstructions
    }

    // tXrefUserPrescriptionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserPrescriptionsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserPrescriptionId { get; set; } // UserPrescriptionID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserPrescriptionsCodes_tCodes
        public virtual TUserPrescription TUserPrescription { get; set; } // FK_tXrefUserPrescriptionsCodes_tUserPrescriptions
    }

    // tXrefUserProblemsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserProblemsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserProblemId { get; set; } // UserProblemID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserProblemsCodes_tCodes
        public virtual TUserProblem TUserProblem { get; set; } // FK_tXrefUserProblemsCodes_tUserProblems
    }

    // tXrefUserProceduresCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserProceduresCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserProcedureId { get; set; } // UserProcedureID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserProceduresCodes_tCodes
        public virtual TUserProcedure TUserProcedure { get; set; } // FK_tXrefUserProceduresCodes_tUserProcedures
    }

    // tXrefUserSHARESettingsPurposes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserShareSettingsPurpos
    {
        public int Id { get; set; } // ID (Primary key)
        public int ShareSettingsId { get; set; } // SHARESettingsID
        public int SharePurposeId { get; set; } // SHAREPurposeID

        // Foreign keys
        public virtual TSharePurpos TSharePurpos { get; set; } // FK_tXrefUserSHARESettingsPurposes_tSHAREPurposes
        public virtual TUserShareSetting TUserShareSetting { get; set; } // FK_tXrefUserSHARESettingsPurposes_tUserSHARESettings
    }

    // tXrefUserSNPProbesSNPAvailability
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserSnpProbesSnpAvailability
    {
        public int Id { get; set; } // ID (Primary key)
        public int SnpAvailabilityId { get; set; } // SNPAvailabilityID
        public int UserSnpProbeId { get; set; } // UserSNPProbeID

        // Foreign keys
        public virtual TSnpAvailability TSnpAvailability { get; set; } // FK_tXrefUserSNPProbesSNPAvailability_tSNPAvailability
        public virtual TUserSnpProbe TUserSnpProbe { get; set; } // FK_tXrefUserSNPProbesSNPAvailability_tUserSNPProbes
    }

    // tXrefUserSourceServiceDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserSourceServiceDevice
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserSourceServiceId { get; set; } // UserSourceServiceID
        public int SourceServiceDeviceId { get; set; } // SourceServiceDeviceID

        // Foreign keys
        public virtual TSourceServiceDevice TSourceServiceDevice { get; set; } // FK_tXrefUserSourceServiceDevices_tSourceServiceDevices
        public virtual TUserSourceService TUserSourceService { get; set; } // FK_tUserSourceServiceDevices_tUserSourceServices
    }

    // tXrefUserTestResultComponentsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultComponentsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserTestResultComponentId { get; set; } // UserTestResultComponentID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserTestResultComponentsCodes_tCodes
        public virtual TUserTestResultComponent TUserTestResultComponent { get; set; } // FK_tXrefUserTestResultComponentsCodes_tUserTestResultComponents
    }

    // tXrefUserTestResultRecipientsProviders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultRecipientsProvider
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserTestResultId { get; set; } // UserTestResultID
        public int ProviderId { get; set; } // ProviderID
        public int? IsPcp { get; set; } // IsPCP

        // Foreign keys
        public virtual TProvider TProvider { get; set; } // FK_tXrefUserTestResultRecipientsProviders_tProviders
        public virtual TUserTestResult TUserTestResult { get; set; } // FK_tXrefUserTestResultRecipientsProviders_tUserTestResults
    }

    // tXrefUserTestResultsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserTestResultId { get; set; } // UserTestResultID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserTestResultsCodes_tCodes
        public virtual TUserTestResult TUserTestResult { get; set; } // FK_tXrefUserTestResultsCodes_tUserTestResults
    }

    // tXrefUserVitalsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserVitalsCode
    {
        public int Id { get; set; } // ID (Primary key)
        public int UserVitalsId { get; set; } // UserVitalsID
        public int CodeId { get; set; } // CodeID

        // Foreign keys
        public virtual TCode TCode { get; set; } // FK_tXrefUserVitalsCodes_tCodes
        public virtual TUserVital TUserVital { get; set; } // FK_tXrefUserVitalsCodes_tUserVitals
    }

    #endregion

    #region POCO Configuration

    // sysdiagrams
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class SysdiagramConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sysdiagram>
    {
        public SysdiagramConfiguration()
            : this("dbo")
        {
        }

        public SysdiagramConfiguration(string schema)
        {
            ToTable("sysdiagrams", schema);
            HasKey(x => x.DiagramId);

            Property(x => x.Name).HasColumnName(@"name").IsRequired().HasColumnType("nvarchar").HasMaxLength(128);
            Property(x => x.PrincipalId).HasColumnName(@"principal_id").IsRequired().HasColumnType("int");
            Property(x => x.DiagramId).HasColumnName(@"diagram_id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Version).HasColumnName(@"version").IsOptional().HasColumnType("int");
            Property(x => x.Definition).HasColumnName(@"definition").IsOptional().HasColumnType("varbinary");
        }
    }

    // tActivities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TActivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TActivity>
    {
        public TActivityConfiguration()
            : this("dbo")
        {
        }

        public TActivityConfiguration(string schema)
        {
            ToTable("tActivities", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tAllergens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TAllergen>
    {
        public TAllergenConfiguration()
            : this("dbo")
        {
        }

        public TAllergenConfiguration(string schema)
        {
            ToTable("tAllergens", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tAllergySeverities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergySeverityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TAllergySeverity>
    {
        public TAllergySeverityConfiguration()
            : this("dbo")
        {
        }

        public TAllergySeverityConfiguration(string schema)
        {
            ToTable("tAllergySeverities", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Severity).HasColumnName(@"Severity").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tAllergyStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TAllergyStatusConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TAllergyStatus>
    {
        public TAllergyStatusConfiguration()
            : this("dbo")
        {
        }

        public TAllergyStatusConfiguration(string schema)
        {
            ToTable("tAllergyStatuses", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Status).HasColumnName(@"Status").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TCode>
    {
        public TCodeConfiguration()
            : this("dbo")
        {
        }

        public TCodeConfiguration(string schema)
        {
            ToTable("tCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CodeSystem).HasColumnName(@"CodeSystem").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CodeSystemName).HasColumnName(@"CodeSystemName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.Version).HasColumnName(@"Version").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tCredentials
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TCredentialConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TCredential>
    {
        public TCredentialConfiguration()
            : this("dbo")
        {
        }

        public TCredentialConfiguration(string schema)
        {
            ToTable("tCredentials", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceUserId).HasColumnName(@"SourceUserID").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.AccessToken).HasColumnName(@"AccessToken").IsRequired().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.PublicToken).HasColumnName(@"PublicToken").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.SourceId).HasColumnName(@"SourceID").IsRequired().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TSource).WithMany(b => b.TCredentials).HasForeignKey(c => c.SourceId).WillCascadeOnDelete(false); // FK_tCredentials_tCredentialSources
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TCredentials).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tCredentials_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TCredentials).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tCredentials_tUserIDs
        }
    }

    // tDietCategory
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TDietCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TDietCategory>
    {
        public TDietCategoryConfiguration()
            : this("dbo")
        {
        }

        public TDietCategoryConfiguration(string schema)
        {
            ToTable("tDietCategory", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tGeneticTraits
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TGeneticTraitConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TGeneticTrait>
    {
        public TGeneticTraitConfiguration()
            : this("dbo")
        {
        }

        public TGeneticTraitConfiguration(string schema)
        {
            ToTable("tGeneticTraits", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Trait).HasColumnName(@"Trait").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tInstructionTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TInstructionTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TInstructionType>
    {
        public TInstructionTypeConfiguration()
            : this("dbo")
        {
        }

        public TInstructionTypeConfiguration(string schema)
        {
            ToTable("tInstructionTypes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tMedicationForms
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TMedicationFormConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TMedicationForm>
    {
        public TMedicationFormConfiguration()
            : this("dbo")
        {
        }

        public TMedicationFormConfiguration(string schema)
        {
            ToTable("tMedicationForms", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Form).HasColumnName(@"Form").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.ShortName).HasColumnName(@"ShortName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().HasColumnType("nvarchar");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tMedicationRoutes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TMedicationRouteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TMedicationRoute>
    {
        public TMedicationRouteConfiguration()
            : this("dbo")
        {
        }

        public TMedicationRouteConfiguration(string schema)
        {
            ToTable("tMedicationRoutes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Route).HasColumnName(@"Route").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ShortName).HasColumnName(@"ShortName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().HasColumnType("nvarchar");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tNutrients
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TNutrientConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TNutrient>
    {
        public TNutrientConfiguration()
            : this("dbo")
        {
        }

        public TNutrientConfiguration(string schema)
        {
            ToTable("tNutrients", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.TypeId).HasColumnName(@"TypeID").IsOptional().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TNutrientType).WithMany(b => b.TNutrients).HasForeignKey(c => c.TypeId).WillCascadeOnDelete(false); // FK_tNutrients_tNutrientType
        }
    }

    // tNutrientType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TNutrientTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TNutrientType>
    {
        public TNutrientTypeConfiguration()
            : this("dbo")
        {
        }

        public TNutrientTypeConfiguration(string schema)
        {
            ToTable("tNutrientType", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tOrderTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TOrderTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TOrderType>
    {
        public TOrderTypeConfiguration()
            : this("dbo")
        {
        }

        public TOrderTypeConfiguration(string schema)
        {
            ToTable("tOrderTypes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tOrganizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TOrganizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TOrganization>
    {
        public TOrganizationConfiguration()
            : this("dbo")
        {
        }

        public TOrganizationConfiguration(string schema)
        {
            ToTable("tOrganizations", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.Address1).HasColumnName(@"Address1").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.State).HasColumnName(@"State").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Zip).HasColumnName(@"Zip").IsOptional().HasColumnType("nvarchar").HasMaxLength(12);
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").IsOptional().HasColumnType("nvarchar").HasMaxLength(15);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tPharmacies
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TPharmacyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TPharmacy>
    {
        public TPharmacyConfiguration()
            : this("dbo")
        {
        }

        public TPharmacyConfiguration(string schema)
        {
            ToTable("tPharmacies", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Address).HasColumnName(@"Address").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.Phone).HasColumnName(@"Phone").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.Hours).HasColumnName(@"Hours").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");
        }
    }

    // tProviders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TProviderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TProvider>
    {
        public TProviderConfiguration()
            : this("dbo")
        {
        }

        public TProviderConfiguration(string schema)
        {
            ToTable("tProviders", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SourceProviderId).HasColumnName(@"SourceProviderID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.OrganizationId).HasColumnName(@"OrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.DepartmentName).HasColumnName(@"DepartmentName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.NpiNumber).HasColumnName(@"NPINumber").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TOrganization).WithMany(b => b.TProviders).HasForeignKey(c => c.OrganizationId).WillCascadeOnDelete(false); // FK_tProviders_tOrganizations
        }
    }

    // tProviderPhoneNumbers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TProviderPhoneNumberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TProviderPhoneNumber>
    {
        public TProviderPhoneNumberConfiguration()
            : this("dbo")
        {
        }

        public TProviderPhoneNumberConfiguration(string schema)
        {
            ToTable("tProviderPhoneNumbers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsRequired().HasColumnType("int");
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").IsRequired().HasColumnType("nvarchar").HasMaxLength(15);
            Property(x => x.Extension).HasColumnName(@"Extension").IsOptional().HasColumnType("nvarchar").HasMaxLength(15);

            // Foreign keys
            HasRequired(a => a.TProvider).WithMany(b => b.TProviderPhoneNumbers).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tProviderPhoneNumbers_tProviders
        }
    }

    // tReactions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TReactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TReaction>
    {
        public TReactionConfiguration()
            : this("dbo")
        {
        }

        public TReactionConfiguration(string schema)
        {
            ToTable("tReactions", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ReactionTypeId).HasColumnName(@"ReactionTypeID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TReactionType).WithMany(b => b.TReactions).HasForeignKey(c => c.ReactionTypeId).WillCascadeOnDelete(false); // FK_tReactions_tReactionTypes
        }
    }

    // tReactionTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TReactionTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TReactionType>
    {
        public TReactionTypeConfiguration()
            : this("dbo")
        {
        }

        public TReactionTypeConfiguration(string schema)
        {
            ToTable("tReactionTypes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tSHAREPurposes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSharePurposConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSharePurpos>
    {
        public TSharePurposConfiguration()
            : this("dbo")
        {
        }

        public TSharePurposConfiguration(string schema)
        {
            ToTable("tSHAREPurposes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tSHARESettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TShareSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TShareSetting>
    {
        public TShareSettingConfiguration()
            : this("dbo")
        {
        }

        public TShareSettingConfiguration(string schema)
        {
            ToTable("tSHARESettings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(10);
        }
    }

    // tSNPAvailability
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSnpAvailabilityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSnpAvailability>
    {
        public TSnpAvailabilityConfiguration()
            : this("dbo")
        {
        }

        public TSnpAvailabilityConfiguration(string schema)
        {
            ToTable("tSNPAvailability", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SourceServiceId).HasColumnName(@"SourceServiceID").IsRequired().HasColumnType("int");
            Property(x => x.SourceIndex).HasColumnName(@"SourceIndex").IsOptional().HasColumnType("bigint");
            Property(x => x.SnpProbeName).HasColumnName(@"SNPProbeName").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.Chromosome).HasColumnName(@"Chromosome").IsOptional().HasColumnType("nvarchar").HasMaxLength(4);
            Property(x => x.ChromosomePosition).HasColumnName(@"ChromosomePosition").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TSourceService).WithMany(b => b.TSnpAvailabilities).HasForeignKey(c => c.SourceServiceId).WillCascadeOnDelete(false); // FK_tSNPAvailability_tSourceServices
        }
    }

    // tSources
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSource>
    {
        public TSourceConfiguration()
            : this("dbo")
        {
        }

        public TSourceConfiguration(string schema)
        {
            ToTable("tSources", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tSourceOrganizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceOrganizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSourceOrganization>
    {
        public TSourceOrganizationConfiguration()
            : this("dbo")
        {
        }

        public TSourceOrganizationConfiguration(string schema)
        {
            ToTable("tSourceOrganizations", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.OrganizationId).HasColumnName(@"OrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.SourceId).HasColumnName(@"SourceID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrgId).HasColumnName(@"SourceOrgID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TOrganization).WithMany(b => b.TSourceOrganizations).HasForeignKey(c => c.OrganizationId).WillCascadeOnDelete(false); // FK_tSourceOrganizations_tOrganizations
            HasRequired(a => a.TSource).WithMany(b => b.TSourceOrganizations).HasForeignKey(c => c.SourceId).WillCascadeOnDelete(false); // FK_tSourceOrganizations_tCredentialSources
        }
    }

    // tSourceServices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceServiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSourceService>
    {
        public TSourceServiceConfiguration()
            : this("dbo")
        {
        }

        public TSourceServiceConfiguration(string schema)
        {
            ToTable("tSourceServices", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ServiceName).HasColumnName(@"ServiceName").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.SourceId).HasColumnName(@"SourceID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TSource).WithMany(b => b.TSourceServices).HasForeignKey(c => c.SourceId).WillCascadeOnDelete(false); // FK_tSourceServices_tCredentialSources
        }
    }

    // tSourceServiceDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSourceServiceDeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSourceServiceDevice>
    {
        public TSourceServiceDeviceConfiguration()
            : this("dbo")
        {
        }

        public TSourceServiceDeviceConfiguration(string schema)
        {
            ToTable("tSourceServiceDevices", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tSystemStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TSystemStatusConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TSystemStatus>
    {
        public TSystemStatusConfiguration()
            : this("dbo")
        {
        }

        public TSystemStatusConfiguration(string schema)
        {
            ToTable("tSystemStatuses", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(20);
        }
    }

    // tTestResultStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TTestResultStatusConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TTestResultStatus>
    {
        public TTestResultStatusConfiguration()
            : this("dbo")
        {
        }

        public TTestResultStatusConfiguration(string schema)
        {
            ToTable("tTestResultStatuses", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Status).HasColumnName(@"Status").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tUnitsOfMeasure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUnitsOfMeasureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUnitsOfMeasure>
    {
        public TUnitsOfMeasureConfiguration()
            : this("dbo")
        {
        }

        public TUnitsOfMeasureConfiguration(string schema)
        {
            ToTable("tUnitsOfMeasure", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UnitOfMeasure).HasColumnName(@"UnitOfMeasure").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tUOMRelationships
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUomRelationshipConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUomRelationship>
    {
        public TUomRelationshipConfiguration()
            : this("dbo")
        {
        }

        public TUomRelationshipConfiguration(string schema)
        {
            ToTable("tUOMRelationships", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MasterId).HasColumnName(@"MasterID").IsRequired().HasColumnType("int");
            Property(x => x.SubId).HasColumnName(@"SubID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Master).WithMany(b => b.Master).HasForeignKey(c => c.MasterId).WillCascadeOnDelete(false); // FK_tUOMRelationships_tUnitsOfMeasure
            HasRequired(a => a.Sub).WithMany(b => b.Sub).HasForeignKey(c => c.SubId).WillCascadeOnDelete(false); // FK_tUOMRelationships_tUnitsOfMeasure1
        }
    }

    // tUserActivities
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserActivityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserActivity>
    {
        public TUserActivityConfiguration()
            : this("dbo")
        {
        }

        public TUserActivityConfiguration(string schema)
        {
            ToTable("tUserActivities", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.ActivityId).HasColumnName(@"ActivityID").IsRequired().HasColumnType("int");
            Property(x => x.Duration).HasColumnName(@"Duration").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.DurationUomid).HasColumnName(@"DurationUOMID").IsOptional().HasColumnType("int");
            Property(x => x.Distance).HasColumnName(@"Distance").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.DistanceUomid).HasColumnName(@"DistanceUOMID").IsOptional().HasColumnType("int");
            Property(x => x.Steps).HasColumnName(@"Steps").IsOptional().HasColumnType("decimal");
            Property(x => x.Calories).HasColumnName(@"Calories").IsOptional().HasColumnType("decimal").HasPrecision(10, 10);
            Property(x => x.LightActivityMin).HasColumnName(@"LightActivityMin").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.ModerateActivityMin).HasColumnName(@"ModerateActivityMin").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.VigorousActivityMin).HasColumnName(@"VigorousActivityMin").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.SedentaryActivityMin).HasColumnName(@"SedentaryActivityMin").IsOptional().HasColumnType("decimal").HasPrecision(10, 2);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.DistanceUom).WithMany(b => b.DistanceUom).HasForeignKey(c => c.DistanceUomid).WillCascadeOnDelete(false); // FK_tUserActivities_tUnitsOfMeasure1
            HasOptional(a => a.DurationUom).WithMany(b => b.DurationUom).HasForeignKey(c => c.DurationUomid).WillCascadeOnDelete(false); // FK_tUserActivities_tUnitsOfMeasure
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserActivities).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserActivities_tUserSourceServices
            HasRequired(a => a.TActivity).WithMany(b => b.TUserActivities).HasForeignKey(c => c.ActivityId).WillCascadeOnDelete(false); // FK_tUserActivities_tActivities
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserActivities).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserActivities_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserActivities).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserActivities_tUserIDs
        }
    }

    // tUserAllergies
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserAllergyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserAllergy>
    {
        public TUserAllergyConfiguration()
            : this("dbo")
        {
        }

        public TUserAllergyConfiguration(string schema)
        {
            ToTable("tUserAllergies", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.AllergenId).HasColumnName(@"AllergenID").IsRequired().HasColumnType("int");
            Property(x => x.ReactionId).HasColumnName(@"ReactionID").IsRequired().HasColumnType("int");
            Property(x => x.StatusId).HasColumnName(@"StatusID").IsRequired().HasColumnType("int");
            Property(x => x.SeverityId).HasColumnName(@"SeverityID").IsRequired().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdateDateTime).HasColumnName(@"LastUpdateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserAllergies_tSourceServices
            HasRequired(a => a.TAllergen).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.AllergenId).WillCascadeOnDelete(false); // FK_tUserAllergies_tAllergens
            HasRequired(a => a.TAllergySeverity).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.SeverityId).WillCascadeOnDelete(false); // FK_tUserAllergies_tAllergySeverities
            HasRequired(a => a.TAllergyStatus).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.StatusId).WillCascadeOnDelete(false); // FK_tUserAllergies_tAllergyStatuses
            HasRequired(a => a.TReaction).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.ReactionId).WillCascadeOnDelete(false); // FK_tUserAllergies_tReactions
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserAllergies_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserAllergies_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserAllergies).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserAllergies_tUserIDs
        }
    }

    // tUserCarePlans
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlanConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserCarePlan>
    {
        public TUserCarePlanConfiguration()
            : this("dbo")
        {
        }

        public TUserCarePlanConfiguration(string schema)
        {
            ToTable("tUserCarePlans", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.Text).HasColumnName(@"Text").IsOptional().HasColumnType("nvarchar");
            Property(x => x.TypeId).HasColumnName(@"TypeID").IsOptional().HasColumnType("int");
            Property(x => x.SpecialtyId).HasColumnName(@"SpecialtyID").IsOptional().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserCarePlanSpecialty).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.SpecialtyId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tUserCarePlanSpecialties
            HasOptional(a => a.TUserCarePlanType).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.TypeId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tUserCarePlanTypes
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserCarePlans).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserCarePlans_tUserIDs
        }
    }

    // tUserCarePlanSpecialties
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlanSpecialtyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserCarePlanSpecialty>
    {
        public TUserCarePlanSpecialtyConfiguration()
            : this("dbo")
        {
        }

        public TUserCarePlanSpecialtyConfiguration(string schema)
        {
            ToTable("tUserCarePlanSpecialties", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tUserCarePlanTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserCarePlanTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserCarePlanType>
    {
        public TUserCarePlanTypeConfiguration()
            : this("dbo")
        {
        }

        public TUserCarePlanTypeConfiguration(string schema)
        {
            ToTable("tUserCarePlanTypes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
        }
    }

    // tUserDataAudit
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataAuditConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserDataAudit>
    {
        public TUserDataAuditConfiguration()
            : this("dbo")
        {
        }

        public TUserDataAuditConfiguration(string schema)
        {
            ToTable("tUserDataAudit", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ApplicationId).HasColumnName(@"ApplicationID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsOptional().HasColumnType("int");
            Property(x => x.EventId).HasColumnName(@"EventID").IsRequired().HasColumnType("int");
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsOptional().HasColumnType("int");
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(100);
            Property(x => x.OriginalValue).HasColumnName(@"OriginalValue").IsOptional().HasColumnType("nvarchar");
            Property(x => x.NewValue).HasColumnName(@"NewValue").IsOptional().HasColumnType("nvarchar");
            Property(x => x.DateTimeStamp).HasColumnName(@"DateTimeStamp").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserDataAuditObject).WithMany(b => b.TUserDataAudits).HasForeignKey(c => c.ObjectId).WillCascadeOnDelete(false); // FK_tUserDataAudit_tUserDataAuditObjects
            HasOptional(a => a.TUserId).WithMany(b => b.TUserDataAudits).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserDataAudit_tUserIDs
        }
    }

    // tUserDataAuditObjects
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataAuditObjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserDataAuditObject>
    {
        public TUserDataAuditObjectConfiguration()
            : this("dbo")
        {
        }

        public TUserDataAuditObjectConfiguration(string schema)
        {
            ToTable("tUserDataAuditObjects", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TableName).HasColumnName(@"TableName").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(50);
            Property(x => x.ColumnName).HasColumnName(@"ColumnName").IsRequired().IsFixedLength().HasColumnType("nchar").HasMaxLength(50);
        }
    }

    // tUserDataErrLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDataErrLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserDataErrLog>
    {
        public TUserDataErrLogConfiguration()
            : this("dbo")
        {
        }

        public TUserDataErrLogConfiguration(string schema)
        {
            ToTable("tUserDataErrLog", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ErrTypeId).HasColumnName(@"ErrTypeID").IsRequired().HasColumnType("int");
            Property(x => x.ErrSourceId).HasColumnName(@"ErrSourceID").IsRequired().HasColumnType("int");
            Property(x => x.Code).HasColumnName(@"Code").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().HasColumnType("nvarchar");
            Property(x => x.Trace).HasColumnName(@"Trace").IsOptional().HasColumnType("nvarchar");
            Property(x => x.UserId).HasColumnName(@"UserID").IsOptional().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserId).WithMany(b => b.TUserDataErrLogs).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserDataErrLog_tUserIDs
        }
    }

    // tUserDiet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserDietConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserDiet>
    {
        public TUserDietConfiguration()
            : this("dbo")
        {
        }

        public TUserDietConfiguration(string schema)
        {
            ToTable("tUserDiet", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(250);
            Property(x => x.Servings).HasColumnName(@"Servings").IsOptional().HasColumnType("decimal").HasPrecision(10, 3);
            Property(x => x.ServingUomid).HasColumnName(@"ServingUOMID").IsOptional().HasColumnType("int");
            Property(x => x.DietCategoryId).HasColumnName(@"DietCategoryID").IsOptional().HasColumnType("int");
            Property(x => x.EnteredDateTime).HasColumnName(@"EnteredDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TDietCategory).WithMany(b => b.TUserDiets).HasForeignKey(c => c.DietCategoryId).WillCascadeOnDelete(false); // FK_tUserDiet_tDietCategory
            HasOptional(a => a.TUnitsOfMeasure).WithMany(b => b.TUserDiets).HasForeignKey(c => c.ServingUomid).WillCascadeOnDelete(false); // FK_tUserDiet_tUnitsOfMeasure
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserDiets).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserDiet_tUserSourceServices
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserDiets).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserDiet_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserDiets).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserDiet_tUserIDs
        }
    }

    // tUserEncounters
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEncounterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserEncounter>
    {
        public TUserEncounterConfiguration()
            : this("dbo")
        {
        }

        public TUserEncounterConfiguration(string schema)
        {
            ToTable("tUserEncounters", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsOptional().HasColumnType("int");
            Property(x => x.VisitTypeId).HasColumnName(@"VisitTypeID").IsOptional().HasColumnType("int");
            Property(x => x.EncounterDateTime).HasColumnName(@"EncounterDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.FollowUpInstructionId).HasColumnName(@"FollowUpInstructionID").IsOptional().HasColumnType("int");
            Property(x => x.PatientInstructionId).HasColumnName(@"PatientInstructionID").IsOptional().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdateDateTime).HasColumnName(@"LastUpdateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.FollowUpInstruction).WithMany(b => b.FollowUpInstruction).HasForeignKey(c => c.FollowUpInstructionId).WillCascadeOnDelete(false); // FK_tUserEncounters_tUserInstructions
            HasOptional(a => a.PatientInstruction).WithMany(b => b.PatientInstruction).HasForeignKey(c => c.PatientInstructionId).WillCascadeOnDelete(false); // FK_tUserEncounters_tUserInstructions1
            HasOptional(a => a.TProvider).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tUserEncounters_tProviders
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserEncounters_tSourceServices
            HasOptional(a => a.TVisitType).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.VisitTypeId).WillCascadeOnDelete(false); // FK_tUserEncounters_tVisitTypes
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserEncounters_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserEncounters_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserEncounters).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserEncounters_tUserIDs
        }
    }

    // tUserEncounterReasons
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEncounterReasonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserEncounterReason>
    {
        public TUserEncounterReasonConfiguration()
            : this("dbo")
        {
        }

        public TUserEncounterReasonConfiguration(string schema)
        {
            ToTable("tUserEncounterReasons", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.Value).HasColumnName(@"Value").IsRequired().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.UserEncounterId).HasColumnName(@"UserEncounterID").IsRequired().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserEncounterReasons).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserEncounterReasons_tSystemStatuses
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TUserEncounterReasons).HasForeignKey(c => c.UserEncounterId).WillCascadeOnDelete(false); // FK_tUserEncounterReasons_tUserEncounters
        }
    }

    // tUserEvents
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserEventConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserEvent>
    {
        public TUserEventConfiguration()
            : this("dbo")
        {
        }

        public TUserEventConfiguration(string schema)
        {
            ToTable("tUserEvents", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserEvents).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserEvents_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserEvents).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserEvents_tUserIDs
        }
    }

    // tUserFunctionalStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserFunctionalStatusConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserFunctionalStatus>
    {
        public TUserFunctionalStatusConfiguration()
            : this("dbo")
        {
        }

        public TUserFunctionalStatusConfiguration(string schema)
        {
            ToTable("tUserFunctionalStatuses", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserFunctionalStatus).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserFunctionalStatuses_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserFunctionalStatus).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserFunctionalStatuses_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserFunctionalStatus).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserFunctionalStatuses_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserFunctionalStatus).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserFunctionalStatuses_tUserIDs
        }
    }

    // tUserGeneticTraits
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserGeneticTraitConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserGeneticTrait>
    {
        public TUserGeneticTraitConfiguration()
            : this("dbo")
        {
        }

        public TUserGeneticTraitConfiguration(string schema)
        {
            ToTable("tUserGeneticTraits", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.GeneticTraitId).HasColumnName(@"GeneticTraitID").IsRequired().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserGeneticTraits).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserGeneticTraits_tUserSourceServices
            HasRequired(a => a.TGeneticTrait).WithMany(b => b.TUserGeneticTraits).HasForeignKey(c => c.GeneticTraitId).WillCascadeOnDelete(false); // FK_tUserGeneticTraits_tGeneticTraits
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserGeneticTraits).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserGeneticTraits_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserGeneticTraits).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserGeneticTraits_tUserIDs
        }
    }

    // tUserIDs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserIdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserId>
    {
        public TUserIdConfiguration()
            : this("dbo")
        {
        }

        public TUserIdConfiguration(string schema)
        {
            ToTable("tUserIDs", schema);
            HasKey(x => x.UserId);

            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IsTestUser).HasColumnName(@"IsTestUser").IsOptional().HasColumnType("tinyint");
        }
    }

    // tUserImmunizations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserImmunizationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserImmunization>
    {
        public TUserImmunizationConfiguration()
            : this("dbo")
        {
        }

        public TUserImmunizationConfiguration(string schema)
        {
            ToTable("tUserImmunizations", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserImmunizations).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserImmunizations_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserImmunizations).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserImmunizations_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserImmunizations).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserImmunizations_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserImmunizations).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserImmunizations_tUserIDs
        }
    }

    // tUserImmunizationsDates
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserImmunizationsDateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserImmunizationsDate>
    {
        public TUserImmunizationsDateConfiguration()
            : this("dbo")
        {
        }

        public TUserImmunizationsDateConfiguration(string schema)
        {
            ToTable("tUserImmunizationsDates", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserImmunizationId).HasColumnName(@"UserImmunizationID").IsRequired().HasColumnType("int");
            Property(x => x.DateTime).HasColumnName(@"DateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TUserImmunization).WithMany(b => b.TUserImmunizationsDates).HasForeignKey(c => c.UserImmunizationId).WillCascadeOnDelete(false); // FK_tUserImmunizationsDates_tUserImmunizations
        }
    }

    // tUserInstructions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserInstructionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserInstruction>
    {
        public TUserInstructionConfiguration()
            : this("dbo")
        {
        }

        public TUserInstructionConfiguration(string schema)
        {
            ToTable("tUserInstructions", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Text).HasColumnName(@"Text").IsOptional().HasColumnType("nvarchar");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.InstructionTypeId).HasColumnName(@"InstructionTypeID").IsRequired().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserInstructions).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserInstructions_tSourceServices
            HasRequired(a => a.TInstructionType).WithMany(b => b.TUserInstructions).HasForeignKey(c => c.InstructionTypeId).WillCascadeOnDelete(false); // FK_tUserInstructions_tInstructionTypes
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserInstructions).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserInstructions_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserInstructions).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserInstructions_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserInstructions).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserInstructions_tUserIDs
        }
    }

    // tUserLocations
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserLocation>
    {
        public TUserLocationConfiguration()
            : this("dbo")
        {
        }

        public TUserLocationConfiguration(string schema)
        {
            ToTable("tUserLocations", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.Latitude).HasColumnName(@"Latitude").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Longitude).HasColumnName(@"Longitude").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserLocations).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserLocations_tUserSourceServices
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserLocations).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserLocations_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserLocations).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserLocations_tUserIDs
        }
    }

    // tUserNarratives
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserNarrativeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserNarrative>
    {
        public TUserNarrativeConfiguration()
            : this("dbo")
        {
        }

        public TUserNarrativeConfiguration(string schema)
        {
            ToTable("tUserNarratives", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsOptional().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TProvider).WithMany(b => b.TUserNarratives).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tUserNarratives_tProviders
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserNarratives).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserNarratives_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserNarratives).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserNarratives_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserNarratives).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserNarratives_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserNarratives).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserNarratives_tUserIDs
        }
    }

    // tUserNarrativeEntries
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserNarrativeEntryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserNarrativeEntry>
    {
        public TUserNarrativeEntryConfiguration()
            : this("dbo")
        {
        }

        public TUserNarrativeEntryConfiguration(string schema)
        {
            ToTable("tUserNarrativeEntries", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.NarrativeId).HasColumnName(@"NarrativeID").IsRequired().HasColumnType("int");
            Property(x => x.SectionSeqNum).HasColumnName(@"SectionSeqNum").IsRequired().HasColumnType("int");
            Property(x => x.SectionTitle).HasColumnName(@"SectionTitle").IsOptional().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.SectionText).HasColumnName(@"SectionText").IsOptional().HasColumnType("nvarchar");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TUserNarrative).WithMany(b => b.TUserNarrativeEntries).HasForeignKey(c => c.NarrativeId).WillCascadeOnDelete(false); // FK_tUserNarrativeEntries_tUserNarratives
        }
    }

    // tUserOrders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserOrderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserOrder>
    {
        public TUserOrderConfiguration()
            : this("dbo")
        {
        }

        public TUserOrderConfiguration(string schema)
        {
            ToTable("tUserOrders", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.EncounterId).HasColumnName(@"EncounterID").IsRequired().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(150);
            Property(x => x.ExpectedDate).HasColumnName(@"ExpectedDate").IsOptional().HasColumnType("datetime2");
            Property(x => x.ExpirationDate).HasColumnName(@"ExpirationDate").IsOptional().HasColumnType("datetime2");
            Property(x => x.TypeId).HasColumnName(@"TypeID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsOptional().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TCode).WithMany(b => b.TUserOrders).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tUserOrders_tCodes
            HasRequired(a => a.TOrderType).WithMany(b => b.TUserOrders).HasForeignKey(c => c.TypeId).WillCascadeOnDelete(false); // FK_tUserOrders_tOrderTypes
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserOrders).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserOrders_tSystemStatuses
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TUserOrders).HasForeignKey(c => c.EncounterId).WillCascadeOnDelete(false); // FK_tUserOrders_tUserEncounters
        }
    }

    // tUserPrescriptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserPrescriptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserPrescription>
    {
        public TUserPrescriptionConfiguration()
            : this("dbo")
        {
        }

        public TUserPrescriptionConfiguration(string schema)
        {
            ToTable("tUserPrescriptions", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.Instructions).HasColumnName(@"Instructions").IsOptional().HasColumnType("nvarchar").HasMaxLength(500);
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsOptional().HasColumnType("int");
            Property(x => x.ProductName).HasColumnName(@"ProductName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.BrandName).HasColumnName(@"BrandName").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DosageText).HasColumnName(@"DosageText").IsOptional().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.DosageValue).HasColumnName(@"DosageValue").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.MedFormId).HasColumnName(@"MedFormID").IsOptional().HasColumnType("int");
            Property(x => x.FrequencyValue).HasColumnName(@"FrequencyValue").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.FrequencyUomid).HasColumnName(@"FrequencyUOMID").IsOptional().HasColumnType("int");
            Property(x => x.RouteId).HasColumnName(@"RouteID").IsOptional().HasColumnType("int");
            Property(x => x.StrengthValue).HasColumnName(@"StrengthValue").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.StrengthUomid).HasColumnName(@"StrengthUOMID").IsOptional().HasColumnType("int");
            Property(x => x.PharmacyId).HasColumnName(@"PharmacyID").IsOptional().HasColumnType("int");
            Property(x => x.RefillsRemaining).HasColumnName(@"RefillsRemaining").IsOptional().HasColumnType("int");
            Property(x => x.RefillsTotal).HasColumnName(@"RefillsTotal").IsOptional().HasColumnType("int");
            Property(x => x.ExpirationDateTime).HasColumnName(@"ExpirationDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.FrequencyUom).WithMany(b => b.FrequencyUom).HasForeignKey(c => c.FrequencyUomid).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tUnitsOfMeasure
            HasOptional(a => a.StrengthUom).WithMany(b => b.StrengthUom).HasForeignKey(c => c.StrengthUomid).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tUnitsOfMeasure1
            HasOptional(a => a.TMedicationForm).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.MedFormId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tMedDosageForms
            HasOptional(a => a.TMedicationRoute).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.RouteId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tMedRoutes
            HasOptional(a => a.TPharmacy).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.PharmacyId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tPharmacies
            HasOptional(a => a.TProvider).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tProviders
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserPrescriptions).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserPrescriptions_tUserIDs
        }
    }

    // tUserProblems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProblemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserProblem>
    {
        public TUserProblemConfiguration()
            : this("dbo")
        {
        }

        public TUserProblemConfiguration(string schema)
        {
            ToTable("tUserProblems", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserProblems).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserProblems_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserProblems).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserProblems_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserProblems).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserProblems_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserProblems).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserProblems_tUserIDs
        }
    }

    // tUserProcedures
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserProcedure>
    {
        public TUserProcedureConfiguration()
            : this("dbo")
        {
        }

        public TUserProcedureConfiguration(string schema)
        {
            ToTable("tUserProcedures", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.PerformingOrganizationId).HasColumnName(@"PerformingOrganizationID").IsOptional().HasColumnType("int");
            Property(x => x.DeviceId).HasColumnName(@"DeviceID").IsOptional().HasColumnType("int");
            Property(x => x.SpecimenId).HasColumnName(@"SpecimenID").IsOptional().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.PerformingOrganization).WithMany(b => b.PerformingOrganization).HasForeignKey(c => c.PerformingOrganizationId).WillCascadeOnDelete(false); // FK_tUserProcedures_tSourceOrganizations1
            HasOptional(a => a.TUserProcedureDevice).WithMany(b => b.TUserProcedures).HasForeignKey(c => c.DeviceId).WillCascadeOnDelete(false); // FK_tUserProcedures_tUserDevices
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserProcedures).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserProcedures_tSourceServices
            HasOptional(a => a.TUserSpecimen).WithMany(b => b.TUserProcedures).HasForeignKey(c => c.SpecimenId).WillCascadeOnDelete(false); // FK_tUserProcedures_tUserSpecimens
            HasRequired(a => a.SourceOrganization).WithMany(b => b.SourceOrganization).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserProcedures_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserProcedures).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserProcedures_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserProcedures).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserProcedures_tUserIDs
        }
    }

    // tUserProcedureDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedureDeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserProcedureDevice>
    {
        public TUserProcedureDeviceConfiguration()
            : this("dbo")
        {
        }

        public TUserProcedureDeviceConfiguration(string schema)
        {
            ToTable("tUserProcedureDevices", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");
        }
    }

    // tUserProcedureDeviceCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserProcedureDeviceCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserProcedureDeviceCode>
    {
        public TUserProcedureDeviceCodeConfiguration()
            : this("dbo")
        {
        }

        public TUserProcedureDeviceCodeConfiguration(string schema)
        {
            ToTable("tUserProcedureDeviceCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.DeviceId).HasColumnName(@"DeviceID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TUserProcedureDevice).WithMany(b => b.TUserProcedureDeviceCodes).HasForeignKey(c => c.DeviceId).WillCascadeOnDelete(false); // FK_tUserDeviceCodes_tUserDevices
        }
    }

    // tUserSHARESettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserShareSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserShareSetting>
    {
        public TUserShareSettingConfiguration()
            : this("dbo")
        {
        }

        public TUserShareSettingConfiguration(string schema)
        {
            ToTable("tUserSHARESettings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceId).HasColumnName(@"SourceID").IsOptional().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsOptional().HasColumnType("int");
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsOptional().HasColumnType("int");
            Property(x => x.EventId).HasColumnName(@"EventID").IsOptional().HasColumnType("int");
            Property(x => x.ShareSettingId).HasColumnName(@"SHARESettingID").IsRequired().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TSource).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.SourceId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tCredentialSources
            HasOptional(a => a.TSourceOrganization).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tSourceOrganizations
            HasOptional(a => a.TUserEvent).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.EventId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tUserEvents
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.SourceId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tUserSourceServices
            HasRequired(a => a.TShareSetting).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.ShareSettingId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tSHARESettings
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserShareSettings).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserSHARESettings_tUserIDs
        }
    }

    // tUserSleep
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSleepConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSleep>
    {
        public TUserSleepConfiguration()
            : this("dbo")
        {
        }

        public TUserSleepConfiguration(string schema)
        {
            ToTable("tUserSleep", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.PrimarySleepEvent).HasColumnName(@"PrimarySleepEvent").IsOptional().HasColumnType("tinyint");
            Property(x => x.TimeAsleep).HasColumnName(@"TimeAsleep").IsOptional().HasColumnType("int");
            Property(x => x.TimeAwake).HasColumnName(@"TimeAwake").IsOptional().HasColumnType("int");
            Property(x => x.EfficiencyScore).HasColumnName(@"EfficiencyScore").IsOptional().HasColumnType("int");
            Property(x => x.TimeToFallAsleep).HasColumnName(@"TimeToFallAsleep").IsOptional().HasColumnType("int");
            Property(x => x.TimeInBedAfterWake).HasColumnName(@"TimeInBedAfterWake").IsOptional().HasColumnType("int");
            Property(x => x.TotalTimeInBed).HasColumnName(@"TotalTimeInBed").IsOptional().HasColumnType("int");
            Property(x => x.NumOfWakings).HasColumnName(@"NumOfWakings").IsOptional().HasColumnType("int");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserSleeps).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserSleep_tUserSourceServices
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserSleeps).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserSleep_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserSleeps).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserSleep_tUserIDs
        }
    }

    // tUserSleepDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSleepDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSleepDetail>
    {
        public TUserSleepDetailConfiguration()
            : this("dbo")
        {
        }

        public TUserSleepDetailConfiguration(string schema)
        {
            ToTable("tUserSleepDetails", schema);
            HasKey(x => new { x.Id, x.UserSleepId, x.CreateDateTime });

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int");
            Property(x => x.UserSleepId).HasColumnName(@"UserSleepID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TUserSleep).WithMany(b => b.TUserSleepDetails).HasForeignKey(c => c.UserSleepId).WillCascadeOnDelete(false); // FK_tUserSleepDetails_tUserSleep
        }
    }

    // tUserSNPProbes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSnpProbeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSnpProbe>
    {
        public TUserSnpProbeConfiguration()
            : this("dbo")
        {
        }

        public TUserSnpProbeConfiguration(string schema)
        {
            ToTable("tUserSNPProbes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.GenotypeCall).HasColumnName(@"GenotypeCall").IsOptional().HasColumnType("nvarchar").HasMaxLength(5);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserSnpProbes).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserSNPProbes_tUserSourceServices
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserSnpProbes).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserSNPProbes_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserSnpProbes).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserSNPProbes_tUserIDs
        }
    }

    // tUserSourceServices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSourceServiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSourceService>
    {
        public TUserSourceServiceConfiguration()
            : this("dbo")
        {
        }

        public TUserSourceServiceConfiguration(string schema)
        {
            ToTable("tUserSourceServices", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceServiceId).HasColumnName(@"SourceServiceID").IsRequired().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.CredentialId).HasColumnName(@"CredentialID").IsOptional().HasColumnType("int");
            Property(x => x.ConnectedOnDateTime).HasColumnName(@"ConnectedOnDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.LastSyncDateTime).HasColumnName(@"LastSyncDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.LatestDateTime).HasColumnName(@"LatestDateTime").IsOptional().HasColumnType("datetime2");
            Property(x => x.StatusId).HasColumnName(@"StatusID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.TCredential).WithMany(b => b.TUserSourceServices).HasForeignKey(c => c.CredentialId).WillCascadeOnDelete(false); // FK_tUserSourceServices_tCredentials
            HasRequired(a => a.TSourceService).WithMany(b => b.TUserSourceServices).HasForeignKey(c => c.SourceServiceId).WillCascadeOnDelete(false); // FK_tUserSourceServices_tSourceServices
            HasRequired(a => a.TUserId).WithMany(b => b.TUserSourceServices).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserSourceServices_tUserIDs
            HasRequired(a => a.TUserSourceServiceStatus).WithMany(b => b.TUserSourceServices).HasForeignKey(c => c.StatusId).WillCascadeOnDelete(false); // FK_tUserSourceServices_tUserSourceServiceStatuses
        }
    }

    // tUserSourceServiceStatuses
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSourceServiceStatusConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSourceServiceStatus>
    {
        public TUserSourceServiceStatusConfiguration()
            : this("dbo")
        {
        }

        public TUserSourceServiceStatusConfiguration(string schema)
        {
            ToTable("tUserSourceServiceStatuses", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Status).HasColumnName(@"Status").IsOptional().HasColumnType("nvarchar").HasMaxLength(20);
        }
    }

    // tUserSpecimens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSpecimenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSpecimen>
    {
        public TUserSpecimenConfiguration()
            : this("dbo")
        {
        }

        public TUserSpecimenConfiguration(string schema)
        {
            ToTable("tUserSpecimens", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Specimen).HasColumnName(@"Specimen").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");
        }
    }

    // tUserSpecimenCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSpecimenCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSpecimenCode>
    {
        public TUserSpecimenCodeConfiguration()
            : this("dbo")
        {
        }

        public TUserSpecimenCodeConfiguration(string schema)
        {
            ToTable("tUserSpecimenCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.SpecimenId).HasColumnName(@"SpecimenID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TUserSpecimen).WithMany(b => b.TUserSpecimenCodes).HasForeignKey(c => c.SpecimenId).WillCascadeOnDelete(false); // FK_tUserSpecimenCodes_tUserSpecimens
        }
    }

    // tUserSurveyResults
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserSurveyResultConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserSurveyResult>
    {
        public TUserSurveyResultConfiguration()
            : this("dbo")
        {
        }

        public TUserSurveyResultConfiguration(string schema)
        {
            ToTable("tUserSurveyResults", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").IsRequired().HasColumnType("int");
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").IsRequired().HasColumnType("int");
            Property(x => x.Answer).HasColumnName(@"Answer").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserSurveyResults).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserSurveyResults_tUserSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserSurveyResults).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserSurveyResults_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserSurveyResults).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserSurveyResults_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserSurveyResults).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserSurveyResults_tUserIDs
        }
    }

    // tUserTestResults
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserTestResultConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserTestResult>
    {
        public TUserTestResultConfiguration()
            : this("dbo")
        {
        }

        public TUserTestResultConfiguration(string schema)
        {
            ToTable("tUserTestResults", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(200);
            Property(x => x.OrderingProviderId).HasColumnName(@"OrderingProviderID").IsOptional().HasColumnType("int");
            Property(x => x.StatusId).HasColumnName(@"StatusID").IsOptional().HasColumnType("int");
            Property(x => x.Comments).HasColumnName(@"Comments").IsOptional().HasColumnType("nvarchar");
            Property(x => x.Narrative).HasColumnName(@"Narrative").IsOptional().HasColumnType("nvarchar");
            Property(x => x.Impression).HasColumnName(@"Impression").IsOptional().HasColumnType("nvarchar");
            Property(x => x.Transcriptions).HasColumnName(@"Transcriptions").IsOptional().HasColumnType("nvarchar");
            Property(x => x.ResultDateTime).HasColumnName(@"ResultDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TProvider).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.OrderingProviderId).WillCascadeOnDelete(false); // FK_tUserTestResults_tProviders
            HasOptional(a => a.TTestResultStatus).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.StatusId).WillCascadeOnDelete(false); // FK_tUserTestResults_tTestResultStatuses
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserTestResults_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserTestResults_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserTestResults_tSystemStatuses
            HasRequired(a => a.TUserId).WithMany(b => b.TUserTestResults).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserTestResults_tUserIDs
        }
    }

    // tUserTestResultComponents
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserTestResultComponentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserTestResultComponent>
    {
        public TUserTestResultComponentConfiguration()
            : this("dbo")
        {
        }

        public TUserTestResultComponentConfiguration(string schema)
        {
            ToTable("tUserTestResultComponents", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.TestResultId).HasColumnName(@"TestResultID").IsRequired().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Value).HasColumnName(@"Value").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Uomid).HasColumnName(@"UOMID").IsRequired().HasColumnType("int");
            Property(x => x.LowValue).HasColumnName(@"LowValue").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.HighValue).HasColumnName(@"HighValue").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.RefRange).HasColumnName(@"RefRange").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Comments).HasColumnName(@"Comments").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserTestResultComponents).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserTestResultComponents_tSystemStatuses
            HasRequired(a => a.TUnitsOfMeasure).WithMany(b => b.TUserTestResultComponents).HasForeignKey(c => c.Uomid).WillCascadeOnDelete(false); // FK_tUserTestResultComponents_tUnitsOfMeasure
            HasRequired(a => a.TUserTestResult).WithMany(b => b.TUserTestResultComponents).HasForeignKey(c => c.TestResultId).WillCascadeOnDelete(false); // FK_tUserTestResultComponents_tUserTestResults
        }
    }

    // tUserVitals
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TUserVitalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TUserVital>
    {
        public TUserVitalConfiguration()
            : this("dbo")
        {
        }

        public TUserVitalConfiguration(string schema)
        {
            ToTable("tUserVitals", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ObjectId).HasColumnName(@"ObjectID").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SourceObjectId).HasColumnName(@"SourceObjectID").IsOptional().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserID").IsRequired().HasColumnType("int");
            Property(x => x.SourceOrganizationId).HasColumnName(@"SourceOrganizationID").IsRequired().HasColumnType("int");
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsOptional().HasColumnType("int");
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsOptional().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Value).HasColumnName(@"Value").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.Uomid).HasColumnName(@"UOMID").IsRequired().HasColumnType("int");
            Property(x => x.ResultDateTime).HasColumnName(@"ResultDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.SystemStatusId).HasColumnName(@"SystemStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").IsRequired().HasColumnType("datetime2");
            Property(x => x.LastUpdatedDateTime).HasColumnName(@"LastUpdatedDateTime").IsOptional().HasColumnType("datetime2");

            // Foreign keys
            HasOptional(a => a.TProvider).WithMany(b => b.TUserVitals).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tUserVitals_tProviders
            HasOptional(a => a.TUserSourceService).WithMany(b => b.TUserVitals).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserVitals_tSourceServices
            HasRequired(a => a.TSourceOrganization).WithMany(b => b.TUserVitals).HasForeignKey(c => c.SourceOrganizationId).WillCascadeOnDelete(false); // FK_tUserVitals_tSourceOrganizations
            HasRequired(a => a.TSystemStatus).WithMany(b => b.TUserVitals).HasForeignKey(c => c.SystemStatusId).WillCascadeOnDelete(false); // FK_tUserVitals_tSystemStatuses
            HasRequired(a => a.TUnitsOfMeasure).WithMany(b => b.TUserVitals).HasForeignKey(c => c.Uomid).WillCascadeOnDelete(false); // FK_tUserVitals_tUnitsOfMeasure
            HasRequired(a => a.TUserId).WithMany(b => b.TUserVitals).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_tUserVitals_tUserIDs
        }
    }

    // tVisitTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TVisitTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TVisitType>
    {
        public TVisitTypeConfiguration()
            : this("dbo")
        {
        }

        public TVisitTypeConfiguration(string schema)
        {
            ToTable("tVisitTypes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
        }
    }

    // tXrefAllergensCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefAllergensCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefAllergensCode>
    {
        public TXrefAllergensCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefAllergensCodeConfiguration(string schema)
        {
            ToTable("tXrefAllergensCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AllergenId).HasColumnName(@"AllergenID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TAllergen).WithMany(b => b.TXrefAllergensCodes).HasForeignKey(c => c.AllergenId).WillCascadeOnDelete(false); // FK_tXrefAllergensCodes_tAllergens
            HasRequired(a => a.TCode).WithMany(b => b.TXrefAllergensCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefAllergensCodes_tCodes
        }
    }

    // tXrefMedicationFormsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefMedicationFormsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefMedicationFormsCode>
    {
        public TXrefMedicationFormsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefMedicationFormsCodeConfiguration(string schema)
        {
            ToTable("tXrefMedicationFormsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MedicationFormId).HasColumnName(@"MedicationFormID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefMedicationFormsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefMedicationFormsCodes_tCodes
            HasRequired(a => a.TMedicationForm).WithMany(b => b.TXrefMedicationFormsCodes).HasForeignKey(c => c.MedicationFormId).WillCascadeOnDelete(false); // FK_tXrefMedicationFormsCodes_tMedicationForms
        }
    }

    // tXrefMedicationRoutesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefMedicationRoutesCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefMedicationRoutesCode>
    {
        public TXrefMedicationRoutesCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefMedicationRoutesCodeConfiguration(string schema)
        {
            ToTable("tXrefMedicationRoutesCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MedicationRouteId).HasColumnName(@"MedicationRouteID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefMedicationRoutesCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefMedicationRoutesCodes_tCodes
            HasRequired(a => a.TMedicationRoute).WithMany(b => b.TXrefMedicationRoutesCodes).HasForeignKey(c => c.MedicationRouteId).WillCascadeOnDelete(false); // FK_tXrefMedicationRoutesCodes_tMedicationRoutes
        }
    }

    // tXrefReactionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefReactionsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefReactionsCode>
    {
        public TXrefReactionsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefReactionsCodeConfiguration(string schema)
        {
            ToTable("tXrefReactionsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReactionId).HasColumnName(@"ReactionID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefReactionsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefReactionsCodes_tCodes
            HasRequired(a => a.TReaction).WithMany(b => b.TXrefReactionsCodes).HasForeignKey(c => c.ReactionId).WillCascadeOnDelete(false); // FK_tXrefReactionsCodes_tReactions
        }
    }

    // tXrefReactionTypesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefReactionTypesCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefReactionTypesCode>
    {
        public TXrefReactionTypesCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefReactionTypesCodeConfiguration(string schema)
        {
            ToTable("tXrefReactionTypesCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReactionTypeId).HasColumnName(@"ReactionTypeID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefReactionTypesCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefReactionTypesCodes_tCodes
            HasRequired(a => a.TReactionType).WithMany(b => b.TXrefReactionTypesCodes).HasForeignKey(c => c.ReactionTypeId).WillCascadeOnDelete(false); // FK_tXrefReactionTypesCodes_tReactionTypes
        }
    }

    // tXrefUserAllergiesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserAllergiesCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserAllergiesCode>
    {
        public TXrefUserAllergiesCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserAllergiesCodeConfiguration(string schema)
        {
            ToTable("tXrefUserAllergiesCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserAllergiesId).HasColumnName(@"UserAllergiesID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserAllergiesCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserAllergiesCodes_tCodes
            HasRequired(a => a.TUserAllergy).WithMany(b => b.TXrefUserAllergiesCodes).HasForeignKey(c => c.UserAllergiesId).WillCascadeOnDelete(false); // FK_tXrefUserAllergiesCodes_tUserAllergies
        }
    }

    // tXrefUserCarePlansCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserCarePlansCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserCarePlansCode>
    {
        public TXrefUserCarePlansCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserCarePlansCodeConfiguration(string schema)
        {
            ToTable("tXrefUserCarePlansCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserCarePlanId).HasColumnName(@"UserCarePlanID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserCarePlansCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserCarePlansCodes_tCodes
            HasRequired(a => a.TUserCarePlan).WithMany(b => b.TXrefUserCarePlansCodes).HasForeignKey(c => c.UserCarePlanId).WillCascadeOnDelete(false); // FK_tXrefUserCarePlansCodes_tUserCarePlans
        }
    }

    // tXrefUserDietNutrients
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserDietNutrientConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserDietNutrient>
    {
        public TXrefUserDietNutrientConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserDietNutrientConfiguration(string schema)
        {
            ToTable("tXrefUserDietNutrients", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserDietId).HasColumnName(@"UserDietID").IsRequired().HasColumnType("int");
            Property(x => x.NutrientId).HasColumnName(@"NutrientID").IsRequired().HasColumnType("int");
            Property(x => x.Value).HasColumnName(@"Value").IsOptional().HasColumnType("decimal").HasPrecision(10, 10);
            Property(x => x.Uomid).HasColumnName(@"UOMID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.TUnitsOfMeasure).WithMany(b => b.TXrefUserDietNutrients).HasForeignKey(c => c.Uomid).WillCascadeOnDelete(false); // FK_tXrefUserDietNutrients_tUnitsOfMeasure
            HasRequired(a => a.TNutrient).WithMany(b => b.TXrefUserDietNutrients).HasForeignKey(c => c.NutrientId).WillCascadeOnDelete(false); // FK_tXrefUserDietNutrients_tNutrients
            HasRequired(a => a.TUserDiet).WithMany(b => b.TXrefUserDietNutrients).HasForeignKey(c => c.UserDietId).WillCascadeOnDelete(false); // FK_tXrefUserDietNutrients_tUserDiet
        }
    }

    // tXrefUserEncountersCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserEncountersCode>
    {
        public TXrefUserEncountersCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserEncountersCodeConfiguration(string schema)
        {
            ToTable("tXrefUserEncountersCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserEncounterId).HasColumnName(@"UserEncounterID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserEncountersCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersCodes_tCodes
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TXrefUserEncountersCodes).HasForeignKey(c => c.UserEncounterId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersCodes_tUserEncounters
        }
    }

    // tXrefUserEncountersPrescriptions
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersPrescriptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserEncountersPrescription>
    {
        public TXrefUserEncountersPrescriptionConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserEncountersPrescriptionConfiguration(string schema)
        {
            ToTable("tXrefUserEncountersPrescriptions", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserEncounterId).HasColumnName(@"UserEncounterID").IsRequired().HasColumnType("int");
            Property(x => x.UserPrescriptionId).HasColumnName(@"UserPrescriptionID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TXrefUserEncountersPrescriptions).HasForeignKey(c => c.UserEncounterId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersPrescriptions_tUserEncounters
            HasRequired(a => a.TUserPrescription).WithMany(b => b.TXrefUserEncountersPrescriptions).HasForeignKey(c => c.UserPrescriptionId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersPrescriptions_tUserPrescriptions
        }
    }

    // tXrefUserEncountersProblems
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersProblemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserEncountersProblem>
    {
        public TXrefUserEncountersProblemConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserEncountersProblemConfiguration(string schema)
        {
            ToTable("tXrefUserEncountersProblems", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserEncounterId).HasColumnName(@"UserEncounterID").IsRequired().HasColumnType("int");
            Property(x => x.UserProblemId).HasColumnName(@"UserProblemID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TXrefUserEncountersProblems).HasForeignKey(c => c.UserEncounterId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersProblems_tUserEncounters
            HasRequired(a => a.TUserProblem).WithMany(b => b.TXrefUserEncountersProblems).HasForeignKey(c => c.UserProblemId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersProblems_tUserProblems
        }
    }

    // tXrefUserEncountersVitals
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserEncountersVitalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserEncountersVital>
    {
        public TXrefUserEncountersVitalConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserEncountersVitalConfiguration(string schema)
        {
            ToTable("tXrefUserEncountersVitals", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserEncounterId).HasColumnName(@"UserEncounterID").IsRequired().HasColumnType("int");
            Property(x => x.UserVitalId).HasColumnName(@"UserVitalID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TUserEncounter).WithMany(b => b.TXrefUserEncountersVitals).HasForeignKey(c => c.UserEncounterId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersVitals_tUserEncounters
            HasRequired(a => a.TUserVital).WithMany(b => b.TXrefUserEncountersVitals).HasForeignKey(c => c.UserVitalId).WillCascadeOnDelete(false); // FK_tXrefUserEncountersVitals_tUserVitals
        }
    }

    // tXrefUserFunctionalStatusesCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserFunctionalStatusesCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserFunctionalStatusesCode>
    {
        public TXrefUserFunctionalStatusesCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserFunctionalStatusesCodeConfiguration(string schema)
        {
            ToTable("tXrefUserFunctionalStatusesCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserFunctionalStatusId).HasColumnName(@"UserFunctionalStatusID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserFunctionalStatusesCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserFunctionalStatusesCodes_tCodes
            HasRequired(a => a.TUserFunctionalStatus).WithMany(b => b.TXrefUserFunctionalStatusesCodes).HasForeignKey(c => c.UserFunctionalStatusId).WillCascadeOnDelete(false); // FK_tXrefUserFunctionalStatusesCodes_tUserFunctionalStatuses
        }
    }

    // tXrefUserImmunizationsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserImmunizationsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserImmunizationsCode>
    {
        public TXrefUserImmunizationsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserImmunizationsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserImmunizationsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserImmunizationId).HasColumnName(@"UserImmunizationID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserImmunizationsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserImmunizationsCodes_tCodes
            HasRequired(a => a.TUserImmunization).WithMany(b => b.TXrefUserImmunizationsCodes).HasForeignKey(c => c.UserImmunizationId).WillCascadeOnDelete(false); // FK_tXrefUserImmunizationsCodes_tUserImmunizations
        }
    }

    // tXrefUserInstructionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserInstructionsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserInstructionsCode>
    {
        public TXrefUserInstructionsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserInstructionsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserInstructionsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserInstructionId).HasColumnName(@"UserInstructionID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserInstructionsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserInstructionsCodes_tCodes
            HasRequired(a => a.TUserInstruction).WithMany(b => b.TXrefUserInstructionsCodes).HasForeignKey(c => c.UserInstructionId).WillCascadeOnDelete(false); // FK_tXrefUserInstructionsCodes_tUserInstructions
        }
    }

    // tXrefUserPrescriptionsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserPrescriptionsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserPrescriptionsCode>
    {
        public TXrefUserPrescriptionsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserPrescriptionsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserPrescriptionsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserPrescriptionId).HasColumnName(@"UserPrescriptionID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserPrescriptionsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserPrescriptionsCodes_tCodes
            HasRequired(a => a.TUserPrescription).WithMany(b => b.TXrefUserPrescriptionsCodes).HasForeignKey(c => c.UserPrescriptionId).WillCascadeOnDelete(false); // FK_tXrefUserPrescriptionsCodes_tUserPrescriptions
        }
    }

    // tXrefUserProblemsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserProblemsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserProblemsCode>
    {
        public TXrefUserProblemsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserProblemsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserProblemsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserProblemId).HasColumnName(@"UserProblemID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserProblemsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserProblemsCodes_tCodes
            HasRequired(a => a.TUserProblem).WithMany(b => b.TXrefUserProblemsCodes).HasForeignKey(c => c.UserProblemId).WillCascadeOnDelete(false); // FK_tXrefUserProblemsCodes_tUserProblems
        }
    }

    // tXrefUserProceduresCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserProceduresCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserProceduresCode>
    {
        public TXrefUserProceduresCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserProceduresCodeConfiguration(string schema)
        {
            ToTable("tXrefUserProceduresCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserProcedureId).HasColumnName(@"UserProcedureID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserProceduresCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserProceduresCodes_tCodes
            HasRequired(a => a.TUserProcedure).WithMany(b => b.TXrefUserProceduresCodes).HasForeignKey(c => c.UserProcedureId).WillCascadeOnDelete(false); // FK_tXrefUserProceduresCodes_tUserProcedures
        }
    }

    // tXrefUserSHARESettingsPurposes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserShareSettingsPurposConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserShareSettingsPurpos>
    {
        public TXrefUserShareSettingsPurposConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserShareSettingsPurposConfiguration(string schema)
        {
            ToTable("tXrefUserSHARESettingsPurposes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ShareSettingsId).HasColumnName(@"SHARESettingsID").IsRequired().HasColumnType("int");
            Property(x => x.SharePurposeId).HasColumnName(@"SHAREPurposeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TSharePurpos).WithMany(b => b.TXrefUserShareSettingsPurpos).HasForeignKey(c => c.SharePurposeId).WillCascadeOnDelete(false); // FK_tXrefUserSHARESettingsPurposes_tSHAREPurposes
            HasRequired(a => a.TUserShareSetting).WithMany(b => b.TXrefUserShareSettingsPurpos).HasForeignKey(c => c.ShareSettingsId).WillCascadeOnDelete(false); // FK_tXrefUserSHARESettingsPurposes_tUserSHARESettings
        }
    }

    // tXrefUserSNPProbesSNPAvailability
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserSnpProbesSnpAvailabilityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserSnpProbesSnpAvailability>
    {
        public TXrefUserSnpProbesSnpAvailabilityConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserSnpProbesSnpAvailabilityConfiguration(string schema)
        {
            ToTable("tXrefUserSNPProbesSNPAvailability", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SnpAvailabilityId).HasColumnName(@"SNPAvailabilityID").IsRequired().HasColumnType("int");
            Property(x => x.UserSnpProbeId).HasColumnName(@"UserSNPProbeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TSnpAvailability).WithMany(b => b.TXrefUserSnpProbesSnpAvailabilities).HasForeignKey(c => c.SnpAvailabilityId).WillCascadeOnDelete(false); // FK_tXrefUserSNPProbesSNPAvailability_tSNPAvailability
            HasRequired(a => a.TUserSnpProbe).WithMany(b => b.TXrefUserSnpProbesSnpAvailabilities).HasForeignKey(c => c.UserSnpProbeId).WillCascadeOnDelete(false); // FK_tXrefUserSNPProbesSNPAvailability_tUserSNPProbes
        }
    }

    // tXrefUserSourceServiceDevices
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserSourceServiceDeviceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserSourceServiceDevice>
    {
        public TXrefUserSourceServiceDeviceConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserSourceServiceDeviceConfiguration(string schema)
        {
            ToTable("tXrefUserSourceServiceDevices", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserSourceServiceId).HasColumnName(@"UserSourceServiceID").IsRequired().HasColumnType("int");
            Property(x => x.SourceServiceDeviceId).HasColumnName(@"SourceServiceDeviceID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TSourceServiceDevice).WithMany(b => b.TXrefUserSourceServiceDevices).HasForeignKey(c => c.SourceServiceDeviceId).WillCascadeOnDelete(false); // FK_tXrefUserSourceServiceDevices_tSourceServiceDevices
            HasRequired(a => a.TUserSourceService).WithMany(b => b.TXrefUserSourceServiceDevices).HasForeignKey(c => c.UserSourceServiceId).WillCascadeOnDelete(false); // FK_tUserSourceServiceDevices_tUserSourceServices
        }
    }

    // tXrefUserTestResultComponentsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultComponentsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserTestResultComponentsCode>
    {
        public TXrefUserTestResultComponentsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserTestResultComponentsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserTestResultComponentsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserTestResultComponentId).HasColumnName(@"UserTestResultComponentID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserTestResultComponentsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultComponentsCodes_tCodes
            HasRequired(a => a.TUserTestResultComponent).WithMany(b => b.TXrefUserTestResultComponentsCodes).HasForeignKey(c => c.UserTestResultComponentId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultComponentsCodes_tUserTestResultComponents
        }
    }

    // tXrefUserTestResultRecipientsProviders
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultRecipientsProviderConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserTestResultRecipientsProvider>
    {
        public TXrefUserTestResultRecipientsProviderConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserTestResultRecipientsProviderConfiguration(string schema)
        {
            ToTable("tXrefUserTestResultRecipientsProviders", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserTestResultId).HasColumnName(@"UserTestResultID").IsRequired().HasColumnType("int");
            Property(x => x.ProviderId).HasColumnName(@"ProviderID").IsRequired().HasColumnType("int");
            Property(x => x.IsPcp).HasColumnName(@"IsPCP").IsOptional().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TProvider).WithMany(b => b.TXrefUserTestResultRecipientsProviders).HasForeignKey(c => c.ProviderId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultRecipientsProviders_tProviders
            HasRequired(a => a.TUserTestResult).WithMany(b => b.TXrefUserTestResultRecipientsProviders).HasForeignKey(c => c.UserTestResultId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultRecipientsProviders_tUserTestResults
        }
    }

    // tXrefUserTestResultsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserTestResultsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserTestResultsCode>
    {
        public TXrefUserTestResultsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserTestResultsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserTestResultsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserTestResultId).HasColumnName(@"UserTestResultID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserTestResultsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultsCodes_tCodes
            HasRequired(a => a.TUserTestResult).WithMany(b => b.TXrefUserTestResultsCodes).HasForeignKey(c => c.UserTestResultId).WillCascadeOnDelete(false); // FK_tXrefUserTestResultsCodes_tUserTestResults
        }
    }

    // tXrefUserVitalsCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public class TXrefUserVitalsCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TXrefUserVitalsCode>
    {
        public TXrefUserVitalsCodeConfiguration()
            : this("dbo")
        {
        }

        public TXrefUserVitalsCodeConfiguration(string schema)
        {
            ToTable("tXrefUserVitalsCodes", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserVitalsId).HasColumnName(@"UserVitalsID").IsRequired().HasColumnType("int");
            Property(x => x.CodeId).HasColumnName(@"CodeID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.TCode).WithMany(b => b.TXrefUserVitalsCodes).HasForeignKey(c => c.CodeId).WillCascadeOnDelete(false); // FK_tXrefUserVitalsCodes_tCodes
            HasRequired(a => a.TUserVital).WithMany(b => b.TXrefUserVitalsCodes).HasForeignKey(c => c.UserVitalsId).WillCascadeOnDelete(false); // FK_tXrefUserVitalsCodes_tUserVitals
        }
    }

    #endregion

}
// </auto-generated>

