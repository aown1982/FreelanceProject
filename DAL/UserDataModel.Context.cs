//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.UserData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UserDataEntities : DbContext
    {
        public UserDataEntities()
            : base("name=UserDataEntities")
        {
    		base.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tActivity> tActivities { get; set; }
        public virtual DbSet<tAllergen> tAllergens { get; set; }
        public virtual DbSet<tAllergySeverity> tAllergySeverities { get; set; }
        public virtual DbSet<tAllergyStatus> tAllergyStatuses { get; set; }
        public virtual DbSet<tCode> tCodes { get; set; }
        public virtual DbSet<tCredential> tCredentials { get; set; }
        public virtual DbSet<tDietCategory> tDietCategories { get; set; }
        public virtual DbSet<tGeneticTrait> tGeneticTraits { get; set; }
        public virtual DbSet<tInstructionType> tInstructionTypes { get; set; }
        public virtual DbSet<tMedicationForm> tMedicationForms { get; set; }
        public virtual DbSet<tMedicationRoute> tMedicationRoutes { get; set; }
        public virtual DbSet<tNutrient> tNutrients { get; set; }
        public virtual DbSet<tNutrientType> tNutrientTypes { get; set; }
        public virtual DbSet<tOrderType> tOrderTypes { get; set; }
        public virtual DbSet<tOrganization> tOrganizations { get; set; }
        public virtual DbSet<tPharmacy> tPharmacies { get; set; }
        public virtual DbSet<tProviderPhoneNumber> tProviderPhoneNumbers { get; set; }
        public virtual DbSet<tProvider> tProviders { get; set; }
        public virtual DbSet<tReaction> tReactions { get; set; }
        public virtual DbSet<tReactionType> tReactionTypes { get; set; }
        public virtual DbSet<tSHAREPurpose> tSHAREPurposes { get; set; }
        public virtual DbSet<tSHARESetting> tSHARESettings { get; set; }
        public virtual DbSet<tSNPAvailability> tSNPAvailabilities { get; set; }
        public virtual DbSet<tSourceOrganization> tSourceOrganizations { get; set; }
        public virtual DbSet<tSource> tSources { get; set; }
        public virtual DbSet<tSourceServiceDevice> tSourceServiceDevices { get; set; }
        public virtual DbSet<tSourceService> tSourceServices { get; set; }
        public virtual DbSet<tSystemStatus> tSystemStatuses { get; set; }
        public virtual DbSet<tTestResultStatus> tTestResultStatuses { get; set; }
        public virtual DbSet<tUnitsOfMeasure> tUnitsOfMeasures { get; set; }
        public virtual DbSet<tUOMRelationship> tUOMRelationships { get; set; }
        public virtual DbSet<tUserActivity> tUserActivities { get; set; }
        public virtual DbSet<tUserAllergy> tUserAllergies { get; set; }
        public virtual DbSet<tUserCarePlan> tUserCarePlans { get; set; }
        public virtual DbSet<tUserCarePlanSpecialty> tUserCarePlanSpecialties { get; set; }
        public virtual DbSet<tUserCarePlanType> tUserCarePlanTypes { get; set; }
        public virtual DbSet<tUserDataAudit> tUserDataAudits { get; set; }
        public virtual DbSet<tUserDataErrLog> tUserDataErrLogs { get; set; }
        public virtual DbSet<tUserDiet> tUserDiets { get; set; }
        public virtual DbSet<tUserEncounterReason> tUserEncounterReasons { get; set; }
        public virtual DbSet<tUserEncounter> tUserEncounters { get; set; }
        public virtual DbSet<tUserEvent> tUserEvents { get; set; }
        public virtual DbSet<tUserFunctionalStatus> tUserFunctionalStatuses { get; set; }
        public virtual DbSet<tUserGeneticTrait> tUserGeneticTraits { get; set; }
        public virtual DbSet<tUserID> tUserIDs { get; set; }
        public virtual DbSet<tUserImmunization> tUserImmunizations { get; set; }
        public virtual DbSet<tUserImmunizationsDate> tUserImmunizationsDates { get; set; }
        public virtual DbSet<tUserInstruction> tUserInstructions { get; set; }
        public virtual DbSet<tUserLocation> tUserLocations { get; set; }
        public virtual DbSet<tUserNarrativeEntry> tUserNarrativeEntries { get; set; }
        public virtual DbSet<tUserNarrative> tUserNarratives { get; set; }
        public virtual DbSet<tUserOrder> tUserOrders { get; set; }
        public virtual DbSet<tUserPrescription> tUserPrescriptions { get; set; }
        public virtual DbSet<tUserProblem> tUserProblems { get; set; }
        public virtual DbSet<tUserProcedureDeviceCode> tUserProcedureDeviceCodes { get; set; }
        public virtual DbSet<tUserProcedureDevice> tUserProcedureDevices { get; set; }
        public virtual DbSet<tUserProcedure> tUserProcedures { get; set; }
        public virtual DbSet<tUserSleep> tUserSleeps { get; set; }
        public virtual DbSet<tUserSNPProbe> tUserSNPProbes { get; set; }
        public virtual DbSet<tUserSourceService> tUserSourceServices { get; set; }
        public virtual DbSet<tUserSourceServiceStatus> tUserSourceServiceStatuses { get; set; }
        public virtual DbSet<tUserSpecimenCode> tUserSpecimenCodes { get; set; }
        public virtual DbSet<tUserSpecimen> tUserSpecimens { get; set; }
        public virtual DbSet<tUserSurveyResult> tUserSurveyResults { get; set; }
        public virtual DbSet<tUserTestResultComponent> tUserTestResultComponents { get; set; }
        public virtual DbSet<tUserTestResult> tUserTestResults { get; set; }
        public virtual DbSet<tUserVital> tUserVitals { get; set; }
        public virtual DbSet<tVisitType> tVisitTypes { get; set; }
        public virtual DbSet<tXrefAllergensCode> tXrefAllergensCodes { get; set; }
        public virtual DbSet<tXrefMedicationFormsCode> tXrefMedicationFormsCodes { get; set; }
        public virtual DbSet<tXrefMedicationRoutesCode> tXrefMedicationRoutesCodes { get; set; }
        public virtual DbSet<tXrefReactionsCode> tXrefReactionsCodes { get; set; }
        public virtual DbSet<tXrefReactionTypesCode> tXrefReactionTypesCodes { get; set; }
        public virtual DbSet<tXrefUserAllergiesCode> tXrefUserAllergiesCodes { get; set; }
        public virtual DbSet<tXrefUserCarePlansCode> tXrefUserCarePlansCodes { get; set; }
        public virtual DbSet<tXrefUserDietNutrient> tXrefUserDietNutrients { get; set; }
        public virtual DbSet<tXrefUserEncountersCode> tXrefUserEncountersCodes { get; set; }
        public virtual DbSet<tXrefUserEncountersPrescription> tXrefUserEncountersPrescriptions { get; set; }
        public virtual DbSet<tXrefUserEncountersProblem> tXrefUserEncountersProblems { get; set; }
        public virtual DbSet<tXrefUserEncountersVital> tXrefUserEncountersVitals { get; set; }
        public virtual DbSet<tXrefUserFunctionalStatusesCode> tXrefUserFunctionalStatusesCodes { get; set; }
        public virtual DbSet<tXrefUserImmunizationsCode> tXrefUserImmunizationsCodes { get; set; }
        public virtual DbSet<tXrefUserInstructionsCode> tXrefUserInstructionsCodes { get; set; }
        public virtual DbSet<tXrefUserPrescriptionsCode> tXrefUserPrescriptionsCodes { get; set; }
        public virtual DbSet<tXrefUserProblemsCode> tXrefUserProblemsCodes { get; set; }
        public virtual DbSet<tXrefUserProceduresCode> tXrefUserProceduresCodes { get; set; }
        public virtual DbSet<tXrefUserSHARESettingsPurpos> tXrefUserSHARESettingsPurposes { get; set; }
        public virtual DbSet<tXrefUserSNPProbesSNPAvailability> tXrefUserSNPProbesSNPAvailabilities { get; set; }
        public virtual DbSet<tXrefUserSourceServiceDevice> tXrefUserSourceServiceDevices { get; set; }
        public virtual DbSet<tXrefUserTestResultComponentsCode> tXrefUserTestResultComponentsCodes { get; set; }
        public virtual DbSet<tXrefUserTestResultRecipientsProvider> tXrefUserTestResultRecipientsProviders { get; set; }
        public virtual DbSet<tXrefUserTestResultsCode> tXrefUserTestResultsCodes { get; set; }
        public virtual DbSet<tXrefUserVitalsCode> tXrefUserVitalsCodes { get; set; }
        public virtual DbSet<tUserSleepDetail> tUserSleepDetails { get; set; }
        public virtual DbSet<tSourceServiceType> tSourceServiceTypes { get; set; }
        public virtual DbSet<tHealthGoalType> tHealthGoalTypes { get; set; }
        public virtual DbSet<tUserHealthGoal> tUserHealthGoals { get; set; }
        public virtual DbSet<tUserDerivedNote> tUserDerivedNotes { get; set; }
        public virtual DbSet<tConsent> tConsents { get; set; }
        public virtual DbSet<tSHAREPurposeCategory> tSHAREPurposeCategories { get; set; }
        public virtual DbSet<tUserDataAuditType> tUserDataAuditTypes { get; set; }
        public virtual DbSet<tUserSHARESetting> tUserSHARESettings { get; set; }
        public virtual DbSet<tEmploymentIndustry> tEmploymentIndustries { get; set; }
        public virtual DbSet<tRelationshipPersonType> tRelationshipPersonTypes { get; set; }
        public virtual DbSet<tReligion> tReligions { get; set; }
        public virtual DbSet<tUserEducation> tUserEducations { get; set; }
        public virtual DbSet<tUserEmployment> tUserEmployments { get; set; }
        public virtual DbSet<tUserPolitic> tUserPolitics { get; set; }
        public virtual DbSet<tUserRelationship> tUserRelationships { get; set; }
        public virtual DbSet<tUserReligion> tUserReligions { get; set; }
        public virtual DbSet<tUserSocialPost> tUserSocialPosts { get; set; }
        public virtual DbSet<tXrefReligionsCode> tXrefReligionsCodes { get; set; }
    
        public virtual ObjectResult<spGetUserSHARESettings_Result> spGetUserSHARESettings(Nullable<int> userID, Nullable<int> sHARESettingID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var sHARESettingIDParameter = sHARESettingID.HasValue ?
                new ObjectParameter("SHARESettingID", sHARESettingID) :
                new ObjectParameter("SHARESettingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserSHARESettings_Result>("spGetUserSHARESettings", userIDParameter, sHARESettingIDParameter);
        }
    }
}
